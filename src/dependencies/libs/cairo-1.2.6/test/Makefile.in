# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@

# Then we have a collection of tests that are only run if certain
# features are compiled into cairo
@HAVE_PTHREAD_TRUE@am__append_1 = pthread-show-text
@CAIRO_HAS_FT_FONT_TRUE@am__append_2 = bitmap-font \
@CAIRO_HAS_FT_FONT_TRUE@	ft-font-create-for-ft-face \
@CAIRO_HAS_FT_FONT_TRUE@	ft-text-vertical-layout-type1 \
@CAIRO_HAS_FT_FONT_TRUE@	ft-text-vertical-layout-type3 \
@CAIRO_HAS_FT_FONT_TRUE@	ft-text-antialias-none
@CAIRO_HAS_SVG_SURFACE_TRUE@am__append_3 = svg-surface svg-clip
@CAIRO_HAS_PDF_SURFACE_TRUE@am__append_4 = pdf-features
@CAIRO_HAS_PS_SURFACE_TRUE@am__append_5 = ps-features
@CAIRO_HAS_XLIB_SURFACE_TRUE@am__append_6 = xlib-surface
@CAIRO_HAS_MULTI_PAGE_SURFACES_TRUE@am__append_7 = multi-page
@CAIRO_HAS_PDF_SURFACE_TRUE@@CAIRO_HAS_PS_SURFACE_TRUE@@CAIRO_HAS_SVG_SURFACE_TRUE@am__append_8 = fallback-resolution
@CAIRO_HAS_BEOS_SURFACE_TRUE@am__append_9 = cairo-test-beos.cpp cairo-test-beos.h
@CAIRO_HAS_DIRECTFB_SURFACE_TRUE@am__append_10 = cairo-test-directfb.c cairo-test-directfb.h
@CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_TRUE@am__append_11 = $(GLITZ_AGL_LIBS)
@CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_TRUE@am__append_12 = $(GLITZ_EGL_LIBS)
@CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_TRUE@am__append_13 = $(GLITZ_GLX_LIBS)
@CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_TRUE@am__append_14 = $(GLITZ_WGL_LIBS)
@HAVE_PTHREAD_TRUE@am__append_15 = -lpthread
@CAIRO_CAN_TEST_PDF_SURFACE_TRUE@am__append_16 = pdf2png
@CAIRO_CAN_TEST_SVG_SURFACE_TRUE@am__append_17 = svg2png
EXTRA_PROGRAMS = $(am__EXEEXT_9) $(am__EXEEXT_12)
subdir = test
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
libcairotest_la_LIBADD =
am__libcairotest_la_SOURCES_DIST = buffer-diff.c buffer-diff.h \
	cairo-test.c cairo-test.h xmalloc.c xmalloc.h \
	cairo-test-beos.cpp cairo-test-beos.h cairo-test-directfb.c \
	cairo-test-directfb.h
@CAIRO_HAS_BEOS_SURFACE_TRUE@am__objects_1 = libcairotest_la-cairo-test-beos.lo
@CAIRO_HAS_DIRECTFB_SURFACE_TRUE@am__objects_2 =  \
@CAIRO_HAS_DIRECTFB_SURFACE_TRUE@	cairo-test-directfb.lo
am_libcairotest_la_OBJECTS = buffer-diff.lo cairo-test.lo xmalloc.lo \
	$(am__objects_1) $(am__objects_2)
libcairotest_la_OBJECTS = $(am_libcairotest_la_OBJECTS)
@HAVE_PTHREAD_TRUE@am__EXEEXT_1 = pthread-show-text$(EXEEXT)
@CAIRO_HAS_FT_FONT_TRUE@am__EXEEXT_2 = bitmap-font$(EXEEXT) \
@CAIRO_HAS_FT_FONT_TRUE@	ft-font-create-for-ft-face$(EXEEXT) \
@CAIRO_HAS_FT_FONT_TRUE@	ft-text-vertical-layout-type1$(EXEEXT) \
@CAIRO_HAS_FT_FONT_TRUE@	ft-text-vertical-layout-type3$(EXEEXT) \
@CAIRO_HAS_FT_FONT_TRUE@	ft-text-antialias-none$(EXEEXT)
@CAIRO_HAS_SVG_SURFACE_TRUE@am__EXEEXT_3 = svg-surface$(EXEEXT) \
@CAIRO_HAS_SVG_SURFACE_TRUE@	svg-clip$(EXEEXT)
@CAIRO_HAS_PDF_SURFACE_TRUE@am__EXEEXT_4 = pdf-features$(EXEEXT)
@CAIRO_HAS_PS_SURFACE_TRUE@am__EXEEXT_5 = ps-features$(EXEEXT)
@CAIRO_HAS_XLIB_SURFACE_TRUE@am__EXEEXT_6 = xlib-surface$(EXEEXT)
@CAIRO_HAS_MULTI_PAGE_SURFACES_TRUE@am__EXEEXT_7 =  \
@CAIRO_HAS_MULTI_PAGE_SURFACES_TRUE@	multi-page$(EXEEXT)
@CAIRO_HAS_PDF_SURFACE_TRUE@@CAIRO_HAS_PS_SURFACE_TRUE@@CAIRO_HAS_SVG_SURFACE_TRUE@am__EXEEXT_8 = fallback-resolution$(EXEEXT)
am__EXEEXT_9 = a8-mask$(EXEEXT) caps-joins$(EXEEXT) \
	caps-joins-alpha$(EXEEXT) caps-sub-paths$(EXEEXT) \
	clip-all$(EXEEXT) clip-fill-rule$(EXEEXT) \
	clip-fill-rule-pixel-aligned$(EXEEXT) clip-nesting$(EXEEXT) \
	clip-operator$(EXEEXT) clip-twice$(EXEEXT) close-path$(EXEEXT) \
	composite-integer-translate-source$(EXEEXT) \
	composite-integer-translate-over$(EXEEXT) \
	composite-integer-translate-over-repeat$(EXEEXT) \
	copy-path$(EXEEXT) create-for-stream$(EXEEXT) \
	create-from-png$(EXEEXT) create-from-png-stream$(EXEEXT) \
	dash-caps-joins$(EXEEXT) dash-no-dash$(EXEEXT) \
	dash-offset-negative$(EXEEXT) dash-scale$(EXEEXT) \
	dash-zero-length$(EXEEXT) degenerate-path$(EXEEXT) \
	device-offset$(EXEEXT) device-offset-positive$(EXEEXT) \
	extend-reflect$(EXEEXT) fill-and-stroke$(EXEEXT) \
	fill-and-stroke-alpha$(EXEEXT) \
	fill-and-stroke-alpha-add$(EXEEXT) fill-rule$(EXEEXT) \
	filter-nearest-offset$(EXEEXT) font-face-get-type$(EXEEXT) \
	font-matrix-translation$(EXEEXT) glyph-cache-pressure$(EXEEXT) \
	get-and-set$(EXEEXT) get-group-target$(EXEEXT) \
	gradient-alpha$(EXEEXT) infinite-join$(EXEEXT) \
	leaky-dash$(EXEEXT) leaky-polygon$(EXEEXT) line-width$(EXEEXT) \
	line-width-scale$(EXEEXT) linear-gradient$(EXEEXT) \
	long-lines$(EXEEXT) mask$(EXEEXT) mask-ctm$(EXEEXT) \
	mask-surface-ctm$(EXEEXT) move-to-show-surface$(EXEEXT) \
	new-sub-path$(EXEEXT) nil-surface$(EXEEXT) \
	operator-clear$(EXEEXT) operator-source$(EXEEXT) \
	paint$(EXEEXT) paint-source-alpha$(EXEEXT) \
	paint-with-alpha$(EXEEXT) pattern-get-type$(EXEEXT) \
	pixman-rotate$(EXEEXT) rectangle-rounding-error$(EXEEXT) \
	scale-source-surface-paint$(EXEEXT) select-font-face$(EXEEXT) \
	select-font-no-show-text$(EXEEXT) self-copy$(EXEEXT) \
	self-intersecting$(EXEEXT) set-source$(EXEEXT) \
	show-text-current-point$(EXEEXT) source-clip$(EXEEXT) \
	source-clip-scale$(EXEEXT) source-surface-scale-paint$(EXEEXT) \
	surface-finish-twice$(EXEEXT) surface-pattern$(EXEEXT) \
	text-antialias-gray$(EXEEXT) text-antialias-none$(EXEEXT) \
	text-antialias-subpixel$(EXEEXT) text-cache-crash$(EXEEXT) \
	text-pattern$(EXEEXT) text-rotate$(EXEEXT) transforms$(EXEEXT) \
	translate-show-surface$(EXEEXT) trap-clip$(EXEEXT) \
	truetype-tables$(EXEEXT) unantialiased-shapes$(EXEEXT) \
	unbounded-operator$(EXEEXT) user-data$(EXEEXT) \
	rel-path$(EXEEXT) push-group$(EXEEXT) zero-alpha$(EXEEXT) \
	$(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6) \
	$(am__EXEEXT_7) $(am__EXEEXT_8)
@CAIRO_CAN_TEST_PDF_SURFACE_TRUE@am__EXEEXT_10 = pdf2png$(EXEEXT)
@CAIRO_CAN_TEST_SVG_SURFACE_TRUE@am__EXEEXT_11 = svg2png$(EXEEXT)
am__EXEEXT_12 = imagediff$(EXEEXT) png-flatten$(EXEEXT) \
	$(am__EXEEXT_10) $(am__EXEEXT_11)
a8_mask_SOURCES = a8-mask.c
a8_mask_OBJECTS = a8-mask.$(OBJEXT)
a8_mask_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
@CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_TRUE@am__DEPENDENCIES_2 =  \
@CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_TRUE@	$(am__DEPENDENCIES_1)
@CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_TRUE@am__DEPENDENCIES_3 =  \
@CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_TRUE@	$(am__DEPENDENCIES_1)
@CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_TRUE@am__DEPENDENCIES_4 =  \
@CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_TRUE@	$(am__DEPENDENCIES_1)
@CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_TRUE@am__DEPENDENCIES_5 =  \
@CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_TRUE@	$(am__DEPENDENCIES_1)
a8_mask_DEPENDENCIES = libcairotest.la $(top_builddir)/src/libcairo.la \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_1)
bitmap_font_SOURCES = bitmap-font.c
bitmap_font_OBJECTS = bitmap-font.$(OBJEXT)
bitmap_font_LDADD = $(LDADD)
bitmap_font_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
caps_joins_SOURCES = caps-joins.c
caps_joins_OBJECTS = caps-joins.$(OBJEXT)
caps_joins_LDADD = $(LDADD)
caps_joins_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
caps_joins_alpha_SOURCES = caps-joins-alpha.c
caps_joins_alpha_OBJECTS = caps-joins-alpha.$(OBJEXT)
caps_joins_alpha_LDADD = $(LDADD)
caps_joins_alpha_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
caps_sub_paths_SOURCES = caps-sub-paths.c
caps_sub_paths_OBJECTS = caps-sub-paths.$(OBJEXT)
caps_sub_paths_LDADD = $(LDADD)
caps_sub_paths_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
clip_all_SOURCES = clip-all.c
clip_all_OBJECTS = clip-all.$(OBJEXT)
clip_all_LDADD = $(LDADD)
clip_all_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
clip_fill_rule_SOURCES = clip-fill-rule.c
clip_fill_rule_OBJECTS = clip-fill-rule.$(OBJEXT)
clip_fill_rule_LDADD = $(LDADD)
clip_fill_rule_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
clip_fill_rule_pixel_aligned_SOURCES = clip-fill-rule-pixel-aligned.c
clip_fill_rule_pixel_aligned_OBJECTS =  \
	clip-fill-rule-pixel-aligned.$(OBJEXT)
clip_fill_rule_pixel_aligned_LDADD = $(LDADD)
clip_fill_rule_pixel_aligned_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
clip_nesting_SOURCES = clip-nesting.c
clip_nesting_OBJECTS = clip-nesting.$(OBJEXT)
clip_nesting_LDADD = $(LDADD)
clip_nesting_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
clip_operator_SOURCES = clip-operator.c
clip_operator_OBJECTS = clip-operator.$(OBJEXT)
clip_operator_LDADD = $(LDADD)
clip_operator_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
clip_twice_SOURCES = clip-twice.c
clip_twice_OBJECTS = clip-twice.$(OBJEXT)
clip_twice_LDADD = $(LDADD)
clip_twice_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
close_path_SOURCES = close-path.c
close_path_OBJECTS = close-path.$(OBJEXT)
close_path_LDADD = $(LDADD)
close_path_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
composite_integer_translate_over_SOURCES =  \
	composite-integer-translate-over.c
composite_integer_translate_over_OBJECTS =  \
	composite-integer-translate-over.$(OBJEXT)
composite_integer_translate_over_LDADD = $(LDADD)
composite_integer_translate_over_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
composite_integer_translate_over_repeat_SOURCES =  \
	composite-integer-translate-over-repeat.c
composite_integer_translate_over_repeat_OBJECTS =  \
	composite-integer-translate-over-repeat.$(OBJEXT)
composite_integer_translate_over_repeat_LDADD = $(LDADD)
composite_integer_translate_over_repeat_DEPENDENCIES =  \
	libcairotest.la $(top_builddir)/src/libcairo.la \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_1)
composite_integer_translate_source_SOURCES =  \
	composite-integer-translate-source.c
composite_integer_translate_source_OBJECTS =  \
	composite-integer-translate-source.$(OBJEXT)
composite_integer_translate_source_LDADD = $(LDADD)
composite_integer_translate_source_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
copy_path_SOURCES = copy-path.c
copy_path_OBJECTS = copy-path.$(OBJEXT)
copy_path_LDADD = $(LDADD)
copy_path_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
create_for_stream_SOURCES = create-for-stream.c
create_for_stream_OBJECTS = create-for-stream.$(OBJEXT)
create_for_stream_LDADD = $(LDADD)
create_for_stream_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
create_from_png_SOURCES = create-from-png.c
create_from_png_OBJECTS = create-from-png.$(OBJEXT)
create_from_png_LDADD = $(LDADD)
create_from_png_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
create_from_png_stream_SOURCES = create-from-png-stream.c
create_from_png_stream_OBJECTS = create-from-png-stream.$(OBJEXT)
create_from_png_stream_LDADD = $(LDADD)
create_from_png_stream_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
dash_caps_joins_SOURCES = dash-caps-joins.c
dash_caps_joins_OBJECTS = dash-caps-joins.$(OBJEXT)
dash_caps_joins_LDADD = $(LDADD)
dash_caps_joins_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
dash_no_dash_SOURCES = dash-no-dash.c
dash_no_dash_OBJECTS = dash-no-dash.$(OBJEXT)
dash_no_dash_LDADD = $(LDADD)
dash_no_dash_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
dash_offset_negative_SOURCES = dash-offset-negative.c
dash_offset_negative_OBJECTS = dash-offset-negative.$(OBJEXT)
dash_offset_negative_LDADD = $(LDADD)
dash_offset_negative_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
dash_scale_SOURCES = dash-scale.c
dash_scale_OBJECTS = dash-scale.$(OBJEXT)
dash_scale_LDADD = $(LDADD)
dash_scale_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
dash_zero_length_SOURCES = dash-zero-length.c
dash_zero_length_OBJECTS = dash-zero-length.$(OBJEXT)
dash_zero_length_LDADD = $(LDADD)
dash_zero_length_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
degenerate_path_SOURCES = degenerate-path.c
degenerate_path_OBJECTS = degenerate-path.$(OBJEXT)
degenerate_path_LDADD = $(LDADD)
degenerate_path_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
device_offset_SOURCES = device-offset.c
device_offset_OBJECTS = device-offset.$(OBJEXT)
device_offset_LDADD = $(LDADD)
device_offset_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
device_offset_positive_SOURCES = device-offset-positive.c
device_offset_positive_OBJECTS = device-offset-positive.$(OBJEXT)
device_offset_positive_LDADD = $(LDADD)
device_offset_positive_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
extend_reflect_SOURCES = extend-reflect.c
extend_reflect_OBJECTS = extend-reflect.$(OBJEXT)
extend_reflect_LDADD = $(LDADD)
extend_reflect_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
fallback_resolution_SOURCES = fallback-resolution.c
fallback_resolution_OBJECTS = fallback-resolution.$(OBJEXT)
fallback_resolution_LDADD = $(LDADD)
fallback_resolution_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
fill_and_stroke_SOURCES = fill-and-stroke.c
fill_and_stroke_OBJECTS = fill-and-stroke.$(OBJEXT)
fill_and_stroke_LDADD = $(LDADD)
fill_and_stroke_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
fill_and_stroke_alpha_SOURCES = fill-and-stroke-alpha.c
fill_and_stroke_alpha_OBJECTS = fill-and-stroke-alpha.$(OBJEXT)
fill_and_stroke_alpha_LDADD = $(LDADD)
fill_and_stroke_alpha_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
fill_and_stroke_alpha_add_SOURCES = fill-and-stroke-alpha-add.c
fill_and_stroke_alpha_add_OBJECTS =  \
	fill-and-stroke-alpha-add.$(OBJEXT)
fill_and_stroke_alpha_add_LDADD = $(LDADD)
fill_and_stroke_alpha_add_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
fill_rule_SOURCES = fill-rule.c
fill_rule_OBJECTS = fill-rule.$(OBJEXT)
fill_rule_LDADD = $(LDADD)
fill_rule_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
filter_nearest_offset_SOURCES = filter-nearest-offset.c
filter_nearest_offset_OBJECTS = filter-nearest-offset.$(OBJEXT)
filter_nearest_offset_LDADD = $(LDADD)
filter_nearest_offset_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
font_face_get_type_SOURCES = font-face-get-type.c
font_face_get_type_OBJECTS = font-face-get-type.$(OBJEXT)
font_face_get_type_LDADD = $(LDADD)
font_face_get_type_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
font_matrix_translation_SOURCES = font-matrix-translation.c
font_matrix_translation_OBJECTS = font-matrix-translation.$(OBJEXT)
font_matrix_translation_LDADD = $(LDADD)
font_matrix_translation_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
ft_font_create_for_ft_face_SOURCES = ft-font-create-for-ft-face.c
ft_font_create_for_ft_face_OBJECTS =  \
	ft-font-create-for-ft-face.$(OBJEXT)
ft_font_create_for_ft_face_LDADD = $(LDADD)
ft_font_create_for_ft_face_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
ft_text_antialias_none_SOURCES = ft-text-antialias-none.c
ft_text_antialias_none_OBJECTS = ft-text-antialias-none.$(OBJEXT)
ft_text_antialias_none_LDADD = $(LDADD)
ft_text_antialias_none_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
ft_text_vertical_layout_type1_SOURCES =  \
	ft-text-vertical-layout-type1.c
ft_text_vertical_layout_type1_OBJECTS =  \
	ft-text-vertical-layout-type1.$(OBJEXT)
ft_text_vertical_layout_type1_LDADD = $(LDADD)
ft_text_vertical_layout_type1_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
ft_text_vertical_layout_type3_SOURCES =  \
	ft-text-vertical-layout-type3.c
ft_text_vertical_layout_type3_OBJECTS =  \
	ft-text-vertical-layout-type3.$(OBJEXT)
ft_text_vertical_layout_type3_LDADD = $(LDADD)
ft_text_vertical_layout_type3_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
get_and_set_SOURCES = get-and-set.c
get_and_set_OBJECTS = get-and-set.$(OBJEXT)
get_and_set_LDADD = $(LDADD)
get_and_set_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
get_group_target_SOURCES = get-group-target.c
get_group_target_OBJECTS = get-group-target.$(OBJEXT)
get_group_target_LDADD = $(LDADD)
get_group_target_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
glyph_cache_pressure_SOURCES = glyph-cache-pressure.c
glyph_cache_pressure_OBJECTS = glyph-cache-pressure.$(OBJEXT)
glyph_cache_pressure_LDADD = $(LDADD)
glyph_cache_pressure_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
gradient_alpha_SOURCES = gradient-alpha.c
gradient_alpha_OBJECTS = gradient-alpha.$(OBJEXT)
gradient_alpha_LDADD = $(LDADD)
gradient_alpha_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
imagediff_SOURCES = imagediff.c
imagediff_OBJECTS = imagediff.$(OBJEXT)
imagediff_LDADD = $(LDADD)
imagediff_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
infinite_join_SOURCES = infinite-join.c
infinite_join_OBJECTS = infinite-join.$(OBJEXT)
infinite_join_LDADD = $(LDADD)
infinite_join_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
leaky_dash_SOURCES = leaky-dash.c
leaky_dash_OBJECTS = leaky-dash.$(OBJEXT)
leaky_dash_LDADD = $(LDADD)
leaky_dash_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
leaky_polygon_SOURCES = leaky-polygon.c
leaky_polygon_OBJECTS = leaky-polygon.$(OBJEXT)
leaky_polygon_LDADD = $(LDADD)
leaky_polygon_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
line_width_SOURCES = line-width.c
line_width_OBJECTS = line-width.$(OBJEXT)
line_width_LDADD = $(LDADD)
line_width_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
line_width_scale_SOURCES = line-width-scale.c
line_width_scale_OBJECTS = line-width-scale.$(OBJEXT)
line_width_scale_LDADD = $(LDADD)
line_width_scale_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
linear_gradient_SOURCES = linear-gradient.c
linear_gradient_OBJECTS = linear-gradient.$(OBJEXT)
linear_gradient_LDADD = $(LDADD)
linear_gradient_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
long_lines_SOURCES = long-lines.c
long_lines_OBJECTS = long-lines.$(OBJEXT)
long_lines_LDADD = $(LDADD)
long_lines_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
mask_SOURCES = mask.c
mask_OBJECTS = mask.$(OBJEXT)
mask_LDADD = $(LDADD)
mask_DEPENDENCIES = libcairotest.la $(top_builddir)/src/libcairo.la \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_1)
mask_ctm_SOURCES = mask-ctm.c
mask_ctm_OBJECTS = mask-ctm.$(OBJEXT)
mask_ctm_LDADD = $(LDADD)
mask_ctm_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
mask_surface_ctm_SOURCES = mask-surface-ctm.c
mask_surface_ctm_OBJECTS = mask-surface-ctm.$(OBJEXT)
mask_surface_ctm_LDADD = $(LDADD)
mask_surface_ctm_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
move_to_show_surface_SOURCES = move-to-show-surface.c
move_to_show_surface_OBJECTS = move-to-show-surface.$(OBJEXT)
move_to_show_surface_LDADD = $(LDADD)
move_to_show_surface_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
multi_page_SOURCES = multi-page.c
multi_page_OBJECTS = multi-page.$(OBJEXT)
multi_page_LDADD = $(LDADD)
multi_page_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
new_sub_path_SOURCES = new-sub-path.c
new_sub_path_OBJECTS = new-sub-path.$(OBJEXT)
new_sub_path_LDADD = $(LDADD)
new_sub_path_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
nil_surface_SOURCES = nil-surface.c
nil_surface_OBJECTS = nil-surface.$(OBJEXT)
nil_surface_LDADD = $(LDADD)
nil_surface_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
operator_clear_SOURCES = operator-clear.c
operator_clear_OBJECTS = operator-clear.$(OBJEXT)
operator_clear_LDADD = $(LDADD)
operator_clear_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
operator_source_SOURCES = operator-source.c
operator_source_OBJECTS = operator-source.$(OBJEXT)
operator_source_LDADD = $(LDADD)
operator_source_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
paint_SOURCES = paint.c
paint_OBJECTS = paint.$(OBJEXT)
paint_LDADD = $(LDADD)
paint_DEPENDENCIES = libcairotest.la $(top_builddir)/src/libcairo.la \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_1)
paint_source_alpha_SOURCES = paint-source-alpha.c
paint_source_alpha_OBJECTS = paint-source-alpha.$(OBJEXT)
paint_source_alpha_LDADD = $(LDADD)
paint_source_alpha_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
paint_with_alpha_SOURCES = paint-with-alpha.c
paint_with_alpha_OBJECTS = paint-with-alpha.$(OBJEXT)
paint_with_alpha_LDADD = $(LDADD)
paint_with_alpha_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
pattern_get_type_SOURCES = pattern-get-type.c
pattern_get_type_OBJECTS = pattern-get-type.$(OBJEXT)
pattern_get_type_LDADD = $(LDADD)
pattern_get_type_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
pdf_features_SOURCES = pdf-features.c
pdf_features_OBJECTS = pdf-features.$(OBJEXT)
pdf_features_LDADD = $(LDADD)
pdf_features_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
pdf2png_SOURCES = pdf2png.c
pdf2png_OBJECTS = pdf2png-pdf2png.$(OBJEXT)
am__DEPENDENCIES_6 = libcairotest.la $(top_builddir)/src/libcairo.la \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_1)
@CAIRO_CAN_TEST_PDF_SURFACE_TRUE@pdf2png_DEPENDENCIES =  \
@CAIRO_CAN_TEST_PDF_SURFACE_TRUE@	$(am__DEPENDENCIES_6) \
@CAIRO_CAN_TEST_PDF_SURFACE_TRUE@	$(am__DEPENDENCIES_1)
pixman_rotate_SOURCES = pixman-rotate.c
pixman_rotate_OBJECTS = pixman-rotate.$(OBJEXT)
pixman_rotate_LDADD = $(LDADD)
pixman_rotate_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
png_flatten_SOURCES = png-flatten.c
png_flatten_OBJECTS = png-flatten.$(OBJEXT)
png_flatten_LDADD = $(LDADD)
png_flatten_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
ps_features_SOURCES = ps-features.c
ps_features_OBJECTS = ps-features.$(OBJEXT)
ps_features_LDADD = $(LDADD)
ps_features_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
pthread_show_text_SOURCES = pthread-show-text.c
pthread_show_text_OBJECTS = pthread-show-text.$(OBJEXT)
pthread_show_text_LDADD = $(LDADD)
pthread_show_text_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
push_group_SOURCES = push-group.c
push_group_OBJECTS = push-group.$(OBJEXT)
push_group_LDADD = $(LDADD)
push_group_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
rectangle_rounding_error_SOURCES = rectangle-rounding-error.c
rectangle_rounding_error_OBJECTS = rectangle-rounding-error.$(OBJEXT)
rectangle_rounding_error_LDADD = $(LDADD)
rectangle_rounding_error_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
rel_path_SOURCES = rel-path.c
rel_path_OBJECTS = rel-path.$(OBJEXT)
rel_path_LDADD = $(LDADD)
rel_path_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
scale_source_surface_paint_SOURCES = scale-source-surface-paint.c
scale_source_surface_paint_OBJECTS =  \
	scale-source-surface-paint.$(OBJEXT)
scale_source_surface_paint_LDADD = $(LDADD)
scale_source_surface_paint_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
select_font_face_SOURCES = select-font-face.c
select_font_face_OBJECTS = select-font-face.$(OBJEXT)
select_font_face_LDADD = $(LDADD)
select_font_face_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
select_font_no_show_text_SOURCES = select-font-no-show-text.c
select_font_no_show_text_OBJECTS = select-font-no-show-text.$(OBJEXT)
select_font_no_show_text_LDADD = $(LDADD)
select_font_no_show_text_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
self_copy_SOURCES = self-copy.c
self_copy_OBJECTS = self-copy.$(OBJEXT)
self_copy_LDADD = $(LDADD)
self_copy_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
self_intersecting_SOURCES = self-intersecting.c
self_intersecting_OBJECTS = self-intersecting.$(OBJEXT)
self_intersecting_LDADD = $(LDADD)
self_intersecting_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
set_source_SOURCES = set-source.c
set_source_OBJECTS = set-source.$(OBJEXT)
set_source_LDADD = $(LDADD)
set_source_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
show_text_current_point_SOURCES = show-text-current-point.c
show_text_current_point_OBJECTS = show-text-current-point.$(OBJEXT)
show_text_current_point_LDADD = $(LDADD)
show_text_current_point_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
source_clip_SOURCES = source-clip.c
source_clip_OBJECTS = source-clip.$(OBJEXT)
source_clip_LDADD = $(LDADD)
source_clip_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
source_clip_scale_SOURCES = source-clip-scale.c
source_clip_scale_OBJECTS = source-clip-scale.$(OBJEXT)
source_clip_scale_LDADD = $(LDADD)
source_clip_scale_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
source_surface_scale_paint_SOURCES = source-surface-scale-paint.c
source_surface_scale_paint_OBJECTS =  \
	source-surface-scale-paint.$(OBJEXT)
source_surface_scale_paint_LDADD = $(LDADD)
source_surface_scale_paint_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
surface_finish_twice_SOURCES = surface-finish-twice.c
surface_finish_twice_OBJECTS = surface-finish-twice.$(OBJEXT)
surface_finish_twice_LDADD = $(LDADD)
surface_finish_twice_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
surface_pattern_SOURCES = surface-pattern.c
surface_pattern_OBJECTS = surface-pattern.$(OBJEXT)
surface_pattern_LDADD = $(LDADD)
surface_pattern_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
svg_clip_SOURCES = svg-clip.c
svg_clip_OBJECTS = svg-clip.$(OBJEXT)
svg_clip_LDADD = $(LDADD)
svg_clip_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
svg_surface_SOURCES = svg-surface.c
svg_surface_OBJECTS = svg-surface.$(OBJEXT)
svg_surface_LDADD = $(LDADD)
svg_surface_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
svg2png_SOURCES = svg2png.c
svg2png_OBJECTS = svg2png-svg2png.$(OBJEXT)
@CAIRO_CAN_TEST_SVG_SURFACE_TRUE@svg2png_DEPENDENCIES =  \
@CAIRO_CAN_TEST_SVG_SURFACE_TRUE@	$(am__DEPENDENCIES_6) \
@CAIRO_CAN_TEST_SVG_SURFACE_TRUE@	$(am__DEPENDENCIES_1)
text_antialias_gray_SOURCES = text-antialias-gray.c
text_antialias_gray_OBJECTS = text-antialias-gray.$(OBJEXT)
text_antialias_gray_LDADD = $(LDADD)
text_antialias_gray_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
text_antialias_none_SOURCES = text-antialias-none.c
text_antialias_none_OBJECTS = text-antialias-none.$(OBJEXT)
text_antialias_none_LDADD = $(LDADD)
text_antialias_none_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
text_antialias_subpixel_SOURCES = text-antialias-subpixel.c
text_antialias_subpixel_OBJECTS = text-antialias-subpixel.$(OBJEXT)
text_antialias_subpixel_LDADD = $(LDADD)
text_antialias_subpixel_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
text_cache_crash_SOURCES = text-cache-crash.c
text_cache_crash_OBJECTS = text-cache-crash.$(OBJEXT)
text_cache_crash_LDADD = $(LDADD)
text_cache_crash_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
text_pattern_SOURCES = text-pattern.c
text_pattern_OBJECTS = text-pattern.$(OBJEXT)
text_pattern_LDADD = $(LDADD)
text_pattern_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
text_rotate_SOURCES = text-rotate.c
text_rotate_OBJECTS = text-rotate.$(OBJEXT)
text_rotate_LDADD = $(LDADD)
text_rotate_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
transforms_SOURCES = transforms.c
transforms_OBJECTS = transforms.$(OBJEXT)
transforms_LDADD = $(LDADD)
transforms_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
translate_show_surface_SOURCES = translate-show-surface.c
translate_show_surface_OBJECTS = translate-show-surface.$(OBJEXT)
translate_show_surface_LDADD = $(LDADD)
translate_show_surface_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
trap_clip_SOURCES = trap-clip.c
trap_clip_OBJECTS = trap-clip.$(OBJEXT)
trap_clip_LDADD = $(LDADD)
trap_clip_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
truetype_tables_SOURCES = truetype-tables.c
truetype_tables_OBJECTS = truetype-tables.$(OBJEXT)
truetype_tables_LDADD = $(LDADD)
truetype_tables_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
unantialiased_shapes_SOURCES = unantialiased-shapes.c
unantialiased_shapes_OBJECTS = unantialiased-shapes.$(OBJEXT)
unantialiased_shapes_LDADD = $(LDADD)
unantialiased_shapes_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
unbounded_operator_SOURCES = unbounded-operator.c
unbounded_operator_OBJECTS = unbounded-operator.$(OBJEXT)
unbounded_operator_LDADD = $(LDADD)
unbounded_operator_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
user_data_SOURCES = user-data.c
user_data_OBJECTS = user-data.$(OBJEXT)
user_data_LDADD = $(LDADD)
user_data_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
xlib_surface_SOURCES = xlib-surface.c
xlib_surface_OBJECTS = xlib-surface.$(OBJEXT)
xlib_surface_LDADD = $(LDADD)
xlib_surface_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
zero_alpha_SOURCES = zero-alpha.c
zero_alpha_OBJECTS = zero-alpha.$(OBJEXT)
zero_alpha_LDADD = $(LDADD)
zero_alpha_DEPENDENCIES = libcairotest.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libcairotest_la_SOURCES) a8-mask.c bitmap-font.c \
	caps-joins.c caps-joins-alpha.c caps-sub-paths.c clip-all.c \
	clip-fill-rule.c clip-fill-rule-pixel-aligned.c clip-nesting.c \
	clip-operator.c clip-twice.c close-path.c \
	composite-integer-translate-over.c \
	composite-integer-translate-over-repeat.c \
	composite-integer-translate-source.c copy-path.c \
	create-for-stream.c create-from-png.c create-from-png-stream.c \
	dash-caps-joins.c dash-no-dash.c dash-offset-negative.c \
	dash-scale.c dash-zero-length.c degenerate-path.c \
	device-offset.c device-offset-positive.c extend-reflect.c \
	fallback-resolution.c fill-and-stroke.c \
	fill-and-stroke-alpha.c fill-and-stroke-alpha-add.c \
	fill-rule.c filter-nearest-offset.c font-face-get-type.c \
	font-matrix-translation.c ft-font-create-for-ft-face.c \
	ft-text-antialias-none.c ft-text-vertical-layout-type1.c \
	ft-text-vertical-layout-type3.c get-and-set.c \
	get-group-target.c glyph-cache-pressure.c gradient-alpha.c \
	imagediff.c infinite-join.c leaky-dash.c leaky-polygon.c \
	line-width.c line-width-scale.c linear-gradient.c long-lines.c \
	mask.c mask-ctm.c mask-surface-ctm.c move-to-show-surface.c \
	multi-page.c new-sub-path.c nil-surface.c operator-clear.c \
	operator-source.c paint.c paint-source-alpha.c \
	paint-with-alpha.c pattern-get-type.c pdf-features.c pdf2png.c \
	pixman-rotate.c png-flatten.c ps-features.c \
	pthread-show-text.c push-group.c rectangle-rounding-error.c \
	rel-path.c scale-source-surface-paint.c select-font-face.c \
	select-font-no-show-text.c self-copy.c self-intersecting.c \
	set-source.c show-text-current-point.c source-clip.c \
	source-clip-scale.c source-surface-scale-paint.c \
	surface-finish-twice.c surface-pattern.c svg-clip.c \
	svg-surface.c svg2png.c text-antialias-gray.c \
	text-antialias-none.c text-antialias-subpixel.c \
	text-cache-crash.c text-pattern.c text-rotate.c transforms.c \
	translate-show-surface.c trap-clip.c truetype-tables.c \
	unantialiased-shapes.c unbounded-operator.c user-data.c \
	xlib-surface.c zero-alpha.c
DIST_SOURCES = $(am__libcairotest_la_SOURCES_DIST) a8-mask.c \
	bitmap-font.c caps-joins.c caps-joins-alpha.c caps-sub-paths.c \
	clip-all.c clip-fill-rule.c clip-fill-rule-pixel-aligned.c \
	clip-nesting.c clip-operator.c clip-twice.c close-path.c \
	composite-integer-translate-over.c \
	composite-integer-translate-over-repeat.c \
	composite-integer-translate-source.c copy-path.c \
	create-for-stream.c create-from-png.c create-from-png-stream.c \
	dash-caps-joins.c dash-no-dash.c dash-offset-negative.c \
	dash-scale.c dash-zero-length.c degenerate-path.c \
	device-offset.c device-offset-positive.c extend-reflect.c \
	fallback-resolution.c fill-and-stroke.c \
	fill-and-stroke-alpha.c fill-and-stroke-alpha-add.c \
	fill-rule.c filter-nearest-offset.c font-face-get-type.c \
	font-matrix-translation.c ft-font-create-for-ft-face.c \
	ft-text-antialias-none.c ft-text-vertical-layout-type1.c \
	ft-text-vertical-layout-type3.c get-and-set.c \
	get-group-target.c glyph-cache-pressure.c gradient-alpha.c \
	imagediff.c infinite-join.c leaky-dash.c leaky-polygon.c \
	line-width.c line-width-scale.c linear-gradient.c long-lines.c \
	mask.c mask-ctm.c mask-surface-ctm.c move-to-show-surface.c \
	multi-page.c new-sub-path.c nil-surface.c operator-clear.c \
	operator-source.c paint.c paint-source-alpha.c \
	paint-with-alpha.c pattern-get-type.c pdf-features.c pdf2png.c \
	pixman-rotate.c png-flatten.c ps-features.c \
	pthread-show-text.c push-group.c rectangle-rounding-error.c \
	rel-path.c scale-source-surface-paint.c select-font-face.c \
	select-font-no-show-text.c self-copy.c self-intersecting.c \
	set-source.c show-text-current-point.c source-clip.c \
	source-clip-scale.c source-surface-scale-paint.c \
	surface-finish-twice.c surface-pattern.c svg-clip.c \
	svg-surface.c svg2png.c text-antialias-gray.c \
	text-antialias-none.c text-antialias-subpixel.c \
	text-cache-crash.c text-pattern.c text-rotate.c transforms.c \
	translate-show-surface.c trap-clip.c truetype-tables.c \
	unantialiased-shapes.c unbounded-operator.c user-data.c \
	xlib-surface.c zero-alpha.c
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_FALSE = @CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_FALSE@
CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_TRUE = @CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_TRUE@
CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_FALSE = @CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_FALSE@
CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_TRUE = @CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_TRUE@
CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_FALSE = @CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_FALSE@
CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_TRUE = @CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_TRUE@
CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_FALSE = @CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_FALSE@
CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_TRUE = @CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_TRUE@
CAIRO_CAN_TEST_PDF_SURFACE_FALSE = @CAIRO_CAN_TEST_PDF_SURFACE_FALSE@
CAIRO_CAN_TEST_PDF_SURFACE_TRUE = @CAIRO_CAN_TEST_PDF_SURFACE_TRUE@
CAIRO_CAN_TEST_SVG_SURFACE_FALSE = @CAIRO_CAN_TEST_SVG_SURFACE_FALSE@
CAIRO_CAN_TEST_SVG_SURFACE_TRUE = @CAIRO_CAN_TEST_SVG_SURFACE_TRUE@
CAIRO_CFLAGS = @CAIRO_CFLAGS@
CAIRO_HAS_ATSUI_FONT_FALSE = @CAIRO_HAS_ATSUI_FONT_FALSE@
CAIRO_HAS_ATSUI_FONT_TRUE = @CAIRO_HAS_ATSUI_FONT_TRUE@
CAIRO_HAS_BEOS_SURFACE_FALSE = @CAIRO_HAS_BEOS_SURFACE_FALSE@
CAIRO_HAS_BEOS_SURFACE_TRUE = @CAIRO_HAS_BEOS_SURFACE_TRUE@
CAIRO_HAS_DIRECTFB_SURFACE_FALSE = @CAIRO_HAS_DIRECTFB_SURFACE_FALSE@
CAIRO_HAS_DIRECTFB_SURFACE_TRUE = @CAIRO_HAS_DIRECTFB_SURFACE_TRUE@
CAIRO_HAS_FT_FONT_FALSE = @CAIRO_HAS_FT_FONT_FALSE@
CAIRO_HAS_FT_FONT_TRUE = @CAIRO_HAS_FT_FONT_TRUE@
CAIRO_HAS_GLITZ_SURFACE_FALSE = @CAIRO_HAS_GLITZ_SURFACE_FALSE@
CAIRO_HAS_GLITZ_SURFACE_TRUE = @CAIRO_HAS_GLITZ_SURFACE_TRUE@
CAIRO_HAS_MULTI_PAGE_SURFACES_FALSE = @CAIRO_HAS_MULTI_PAGE_SURFACES_FALSE@
CAIRO_HAS_MULTI_PAGE_SURFACES_TRUE = @CAIRO_HAS_MULTI_PAGE_SURFACES_TRUE@
CAIRO_HAS_PDF_SURFACE_FALSE = @CAIRO_HAS_PDF_SURFACE_FALSE@
CAIRO_HAS_PDF_SURFACE_TRUE = @CAIRO_HAS_PDF_SURFACE_TRUE@
CAIRO_HAS_PNG_FUNCTIONS_FALSE = @CAIRO_HAS_PNG_FUNCTIONS_FALSE@
CAIRO_HAS_PNG_FUNCTIONS_TRUE = @CAIRO_HAS_PNG_FUNCTIONS_TRUE@
CAIRO_HAS_PS_SURFACE_FALSE = @CAIRO_HAS_PS_SURFACE_FALSE@
CAIRO_HAS_PS_SURFACE_TRUE = @CAIRO_HAS_PS_SURFACE_TRUE@
CAIRO_HAS_QUARTZ_SURFACE_FALSE = @CAIRO_HAS_QUARTZ_SURFACE_FALSE@
CAIRO_HAS_QUARTZ_SURFACE_TRUE = @CAIRO_HAS_QUARTZ_SURFACE_TRUE@
CAIRO_HAS_SVG_SURFACE_FALSE = @CAIRO_HAS_SVG_SURFACE_FALSE@
CAIRO_HAS_SVG_SURFACE_TRUE = @CAIRO_HAS_SVG_SURFACE_TRUE@
CAIRO_HAS_TEST_SURFACES_FALSE = @CAIRO_HAS_TEST_SURFACES_FALSE@
CAIRO_HAS_TEST_SURFACES_TRUE = @CAIRO_HAS_TEST_SURFACES_TRUE@
CAIRO_HAS_WIN32_FONT_FALSE = @CAIRO_HAS_WIN32_FONT_FALSE@
CAIRO_HAS_WIN32_FONT_TRUE = @CAIRO_HAS_WIN32_FONT_TRUE@
CAIRO_HAS_WIN32_SURFACE_FALSE = @CAIRO_HAS_WIN32_SURFACE_FALSE@
CAIRO_HAS_WIN32_SURFACE_TRUE = @CAIRO_HAS_WIN32_SURFACE_TRUE@
CAIRO_HAS_XCB_SURFACE_FALSE = @CAIRO_HAS_XCB_SURFACE_FALSE@
CAIRO_HAS_XCB_SURFACE_TRUE = @CAIRO_HAS_XCB_SURFACE_TRUE@
CAIRO_HAS_XLIB_SURFACE_FALSE = @CAIRO_HAS_XLIB_SURFACE_FALSE@
CAIRO_HAS_XLIB_SURFACE_TRUE = @CAIRO_HAS_XLIB_SURFACE_TRUE@
CAIRO_HAS_XLIB_XRENDER_SURFACE_FALSE = @CAIRO_HAS_XLIB_XRENDER_SURFACE_FALSE@
CAIRO_HAS_XLIB_XRENDER_SURFACE_TRUE = @CAIRO_HAS_XLIB_XRENDER_SURFACE_TRUE@
CAIRO_LIBS = @CAIRO_LIBS@
CAIRO_NONPKGCONFIG_CFLAGS = @CAIRO_NONPKGCONFIG_CFLAGS@
CAIRO_NONPKGCONFIG_LIBS = @CAIRO_NONPKGCONFIG_LIBS@
CAIRO_REQUIRES = @CAIRO_REQUIRES@
CAIRO_VERSION_MAJOR = @CAIRO_VERSION_MAJOR@
CAIRO_VERSION_MICRO = @CAIRO_VERSION_MICRO@
CAIRO_VERSION_MINOR = @CAIRO_VERSION_MINOR@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_GTK_DOC_FALSE = @ENABLE_GTK_DOC_FALSE@
ENABLE_GTK_DOC_TRUE = @ENABLE_GTK_DOC_TRUE@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FONTCONFIG_CFLAGS = @FONTCONFIG_CFLAGS@
FONTCONFIG_LIBS = @FONTCONFIG_LIBS@
FREETYPE_CFLAGS = @FREETYPE_CFLAGS@
FREETYPE_CONFIG = @FREETYPE_CONFIG@
FREETYPE_LIBS = @FREETYPE_LIBS@
GLITZ_AGL_CFLAGS = @GLITZ_AGL_CFLAGS@
GLITZ_AGL_LIBS = @GLITZ_AGL_LIBS@
GLITZ_EGL_CFLAGS = @GLITZ_EGL_CFLAGS@
GLITZ_EGL_LIBS = @GLITZ_EGL_LIBS@
GLITZ_GLX_CFLAGS = @GLITZ_GLX_CFLAGS@
GLITZ_GLX_LIBS = @GLITZ_GLX_LIBS@
GLITZ_WGL_CFLAGS = @GLITZ_WGL_CFLAGS@
GLITZ_WGL_LIBS = @GLITZ_WGL_LIBS@
GTK_DOC_USE_LIBTOOL_FALSE = @GTK_DOC_USE_LIBTOOL_FALSE@
GTK_DOC_USE_LIBTOOL_TRUE = @GTK_DOC_USE_LIBTOOL_TRUE@
HAVE_PTHREAD_FALSE = @HAVE_PTHREAD_FALSE@
HAVE_PTHREAD_TRUE = @HAVE_PTHREAD_TRUE@
HTML_DIR = @HTML_DIR@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBRSVG_CFLAGS = @LIBRSVG_CFLAGS@
LIBRSVG_LIBS = @LIBRSVG_LIBS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LTP = @LTP@
LTP_GENHTML = @LTP_GENHTML@
LT_CURRENT_MINUS_AGE = @LT_CURRENT_MINUS_AGE@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MMX_CFLAGS = @MMX_CFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKGCONFIG_REQUIRES = @PKGCONFIG_REQUIRES@
PKG_CONFIG = @PKG_CONFIG@
POPPLER_CFLAGS = @POPPLER_CFLAGS@
POPPLER_LIBS = @POPPLER_LIBS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_MMX_FALSE = @USE_MMX_FALSE@
USE_MMX_TRUE = @USE_MMX_TRUE@
VERSION = @VERSION@
VERSION_INFO = @VERSION_INFO@
WARN_CFLAGS = @WARN_CFLAGS@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
ac_pt_PKG_CONFIG = @ac_pt_PKG_CONFIG@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
directfb_CFLAGS = @directfb_CFLAGS@
directfb_LIBS = @directfb_LIBS@
exec_prefix = @exec_prefix@
glitz_CFLAGS = @glitz_CFLAGS@
glitz_LIBS = @glitz_LIBS@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
png_CFLAGS = @png_CFLAGS@
png_LIBS = @png_LIBS@
png_REQUIRES = @png_REQUIRES@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
xcb_CFLAGS = @xcb_CFLAGS@
xcb_LIBS = @xcb_LIBS@
xlib_CFLAGS = @xlib_CFLAGS@
xlib_LIBS = @xlib_LIBS@
xlib_xrender_CFLAGS = @xlib_xrender_CFLAGS@
xlib_xrender_LIBS = @xlib_xrender_LIBS@

# Here are all the tests that are run unconditionally
TESTS = a8-mask caps-joins caps-joins-alpha caps-sub-paths clip-all \
	clip-fill-rule clip-fill-rule-pixel-aligned clip-nesting \
	clip-operator clip-twice close-path \
	composite-integer-translate-source \
	composite-integer-translate-over \
	composite-integer-translate-over-repeat copy-path \
	create-for-stream create-from-png create-from-png-stream \
	dash-caps-joins dash-no-dash dash-offset-negative dash-scale \
	dash-zero-length degenerate-path device-offset \
	device-offset-positive extend-reflect fill-and-stroke \
	fill-and-stroke-alpha fill-and-stroke-alpha-add fill-rule \
	filter-nearest-offset font-face-get-type \
	font-matrix-translation glyph-cache-pressure get-and-set \
	get-group-target gradient-alpha infinite-join leaky-dash \
	leaky-polygon line-width line-width-scale linear-gradient \
	long-lines mask mask-ctm mask-surface-ctm move-to-show-surface \
	new-sub-path nil-surface operator-clear operator-source paint \
	paint-source-alpha paint-with-alpha pattern-get-type \
	pixman-rotate rectangle-rounding-error \
	scale-source-surface-paint select-font-face \
	select-font-no-show-text self-copy self-intersecting \
	set-source show-text-current-point source-clip \
	source-clip-scale source-surface-scale-paint \
	surface-finish-twice surface-pattern text-antialias-gray \
	text-antialias-none text-antialias-subpixel text-cache-crash \
	text-pattern text-rotate transforms translate-show-surface \
	trap-clip truetype-tables unantialiased-shapes \
	unbounded-operator user-data rel-path push-group zero-alpha \
	$(am__append_1) $(am__append_2) $(am__append_3) \
	$(am__append_4) $(am__append_5) $(am__append_6) \
	$(am__append_7) $(am__append_8)

# XXX: Here are some existing tests that are currently disabled for
# one reason or another.
# 
# show-glyphs-many - this stress test was exercising a particular bug
#      in the xlib surface code (exceeding the X11 protocol request
#      limit) when rendering several thousand glyphs at once. The
#      original xlib-surface bug is fixed now, but the test continues
#      to stress some other aspects of the test suite. For example,
#      when doing text as paths, the resuilting PostScript file is one
#      giant path that ghostscript has a particularly hard time
#      with. I'm disabling this test for now, since I don't care about
#      that performance problem in ghostscript. (But, there is a
#      similar performance problem when using cairo to rasterize the
#      equivalen giant path---from an SBG files say---so this might be
#      a useful kind of test to bring back again for performance (not
#      correctness) testing.

# All tests which have a reference image go here.
# I really don't like having to repeat this list. Anyone know a good
# way to avoid it? Can I use a wildcard here?
EXTRA_DIST = \
6x13.pcf						\
make-html.pl						\
a8-mask-ref.png						\
bitmap-font-ref.png					\
bitmap-font-rgb24-ref.png				\
bitmap-font-pdf-argb32-ref.png				\
caps-joins-ref.png					\
caps-joins-ps-argb32-ref.png				\
caps-joins-alpha-ref.png				\
caps-joins-alpha-svg-ref.png				\
caps-sub-paths-ref.png					\
caps-sub-paths-ps-argb32-ref.png			\
clip-all-ref.png					\
clip-fill-rule-ref.png					\
clip-fill-rule-rgb24-ref.png				\
clip-fill-rule-ps-argb32-ref.png			\
clip-fill-rule-pixel-aligned-ref.png			\
clip-fill-rule-pixel-aligned-rgb24-ref.png		\
clip-nesting-ref.png					\
clip-nesting-rgb24-ref.png				\
clip-nesting-ps-argb32-ref.png				\
clip-operator-ref.png					\
clip-operator-rgb24-ref.png				\
clip-twice-ref.png					\
clip-twice-rgb24-ref.png				\
clip-twice-ps-argb32-ref.png				\
close-path-ref.png					\
close-path-ps-argb32-ref.png				\
composite-integer-translate-over-ref.png		\
composite-integer-translate-over-pdf-argb32-ref.png	\
composite-integer-translate-over-svg-ref.png		\
composite-integer-translate-over-repeat-ref.png		\
composite-integer-translate-source-ref.png		\
copy-path-ref.png					\
copy-path-ps-argb32-ref.png				\
create-from-png-ref.png					\
create-from-png-stream-ref.png				\
dash-caps-joins-ref.png					\
dash-caps-joins-ps-argb32-ref.png			\
dash-no-dash-ref.png					\
dash-offset-negative-ref.png				\
dash-offset-negative-ps-argb32-ref.png			\
dash-scale-ref.png					\
dash-scale-ps-argb32-ref.png				\
dash-zero-length-ref.png				\
dash-zero-length-rgb24-ref.png				\
dash-zero-length-ps-argb32-ref.png			\
degenerate-path-ref.png					\
degenerate-path-rgb24-ref.png				\
degenerate-path-ps-argb32-ref.png			\
device-offset-ref.png					\
device-offset-rgb24-ref.png				\
device-offset-positive-ref.png				\
device-offset-positive-rgb24-ref.png			\
fill-and-stroke-ref.png					\
fill-and-stroke-rgb24-ref.png				\
fill-and-stroke-ps-argb32-ref.png			\
fill-and-stroke-alpha-ref.png				\
fill-and-stroke-alpha-svg-ref.png			\
fill-and-stroke-alpha-add-ref.png			\
fill-rule-ref.png					\
fill-rule-rgb24-ref.png					\
fill-rule-ps-argb32-ref.png				\
filter-nearest-offset-ref.png				\
ft-text-antialias-none-ref.png				\
ft-text-antialias-none-ps-argb32-ref.png		\
ft-text-vertical-layout-type1-ref.png			\
ft-text-vertical-layout-type1-svg-ref.png		\
ft-text-vertical-layout-type3-ref.png		\
ft-text-vertical-layout-type3-svg-ref.png		\
font-matrix-translation-ref.png				\
font-matrix-translation-ps-argb32-ref.png		\
font-matrix-translation-svg-ref.png			\
get-group-target-ref.png				\
glyph-cache-pressure-ref.png				\
glyph-cache-pressure-ps-argb32-ref.png			\
glyph-cache-pressure-svg-ref.png			\
gradient-alpha-ref.png					\
gradient-alpha-rgb24-ref.png				\
infinite-join-ref.png					\
infinite-join-ps-argb32-ref.png				\
leaky-dash-ref.png					\
leaky-polygon-ref.png					\
leaky-polygon-ps-argb32-ref.png				\
linear-gradient-ref.png					\
linear-gradient-svg-ref.png				\
line-width-ref.png					\
line-width-ps-argb32-ref.png				\
line-width-scale-ref.png				\
line-width-scale-ps-argb32-ref.png			\
long-lines-ref.png					\
mask-ref.png						\
mask-rgb24-ref.png					\
mask-beos-bitmap-argb32-ref.png				\
mask-beos-bitmap-rgb24-ref.png				\
mask-beos-rgb24-ref.png					\
mask-svg-argb32-ref.png					\
mask-svg-rgb24-ref.png					\
mask-ctm-ref.png					\
mask-ctm-rgb24-ref.png					\
mask-ctm-svg-argb32-ref.png				\
mask-ctm-svg-rgb24-ref.png				\
mask-surface-ctm-ref.png				\
mask-surface-ctm-rgb24-ref.png				\
mask-surface-ctm-svg-argb32-ref.png			\
mask-surface-ctm-svg-rgb24-ref.png			\
move-to-show-surface-ref.png				\
new-sub-path-ref.png					\
new-sub-path-rgb24-ref.png				\
new-sub-path-ps-argb32-ref.png				\
nil-surface-ref.png					\
nil-surface-rgb24-ref.png				\
operator-clear-ref.png					\
operator-clear-rgb24-ref.png				\
operator-source-ref.png					\
operator-source-rgb24-ref.png				\
paint-ref.png						\
paint-source-alpha-ref.png				\
paint-source-alpha-pdf-argb32-ref.png			\
paint-source-alpha-svg-ref.png				\
paint-with-alpha-ref.png				\
paint-with-alpha-svg-ref.png				\
pixman-rotate-ref.png					\
pixman-rotate-rgb24-ref.png				\
push-group-ref.png					\
push-group-rgb24-ref.png				\
push-group-svg-argb32-ref.png				\
push-group-svg-rgb24-ref.png				\
rectangle-rounding-error-ref.png			\
rel-path-ref.png					\
rel-path-rgb24-ref.png					\
romedalen.png						\
scale-source-surface-paint-ref.png			\
scale-source-surface-paint-rgb24-ref.png		\
scale-source-surface-paint-pdf-argb32-ref.png		\
scale-source-surface-paint-svg-argb32-ref.png		\
scale-source-surface-paint-svg-rgb24-ref.png		\
select-font-face-ref.png				\
select-font-face-ps-argb32-ref.png			\
select-font-face-svg-ref.png				\
self-copy-ref.png					\
self-intersecting-ref.png				\
self-intersecting-rgb24-ref.png				\
set-source-ref.png					\
set-source-rgb24-ref.png				\
set-source-beos-bitmap-rgb24-ref.png			\
set-source-beos-rgb24-ref.png				\
set-source-svg-argb32-ref.png				\
set-source-svg-rgb24-ref.png				\
show-glyphs-many-ref.png				\
show-text-current-point-ref.png				\
show-text-current-point-ps-argb32-ref.png		\
show-text-current-point-svg-ref.png			\
source-clip-ref.png					\
source-clip-scale-ref.png				\
source-clip-scale-svg-ref.png				\
source-surface-scale-paint-ref.png			\
source-surface-scale-paint-rgb24-ref.png		\
surface-pattern-ref.png					\
text-antialias-gray-ref.png				\
text-antialias-none-ref.png				\
text-antialias-subpixel-ref.png				\
text-pattern-ref.png					\
text-pattern-rgb24-ref.png				\
text-pattern-svg-argb32-ref.png				\
text-pattern-svg-rgb24-ref.png				\
text-rotate-ref.png					\
text-rotate-rgb24-ref.png				\
transforms-ref.png					\
transforms-ps-argb32-ref.png				\
translate-show-surface-ref.png				\
trap-clip-ref.png					\
trap-clip-rgb24-ref.png					\
trap-clip-beos-bitmap-rgb24-ref.png			\
trap-clip-beos-rgb24-ref.png				\
trap-clip-svg-argb32-ref.png				\
trap-clip-svg-rgb24-ref.png				\
unantialiased-shapes-ref.png				\
unbounded-operator-ref.png				\
unbounded-operator-rgb24-ref.png			\
zero-alpha-ref.png


# Any test for which the code committed to CVS is expected to fail
# should be listed here.
#
# This way, we can avoid being bothered by reports of bugs we are
# aware of, but users can still report when tests start behaving in
# unexpected ways on their system.
#
# Of course, before any "release" of cairo we should eliminate
# everything from this list by fixing the bugs. (We don't necessarily
# have to be that strict for "snapshots" though.)
#
# Also, any test listed here should call cairo_test_expect_failure and
# provide an explanation for the expected failure.
XFAIL_TESTS = \
a8-mask				\
extend-reflect			\
filter-nearest-offset		\
ft-text-vertical-layout-type1	\
ft-text-vertical-layout-type3	\
leaky-dash			\
long-lines			\
self-intersecting		\
text-rotate


# Any test that doesn't generate a log file goes here
NOLOG_TESTS = \
create-for-stream		\
user-data			\
svg-surface			\
svg-clip			\
pdf-features			\
ps-features			\
multi-page			\
fallback-resolution

SUPPORT_PROGS = imagediff png-flatten $(am__append_16) \
	$(am__append_17)

# We're using _GNU_SOURCE to get the prototype for asprintf. This may
# not be the most portable approach, but it is pragmatic and I'm
# willing to do something cleaner as soon as it causes someone a
# problem.
INCLUDES = \
	-D_GNU_SOURCE				\
	-I$(srcdir)				\
	-I$(top_srcdir)/pixman/src		\
	-I$(top_builddir)/src			\
	-I$(top_srcdir)/src			\
	$(CAIRO_CFLAGS)

EXTRA_LTLIBRARIES = libcairotest.la
libcairotest_la_SOURCES = buffer-diff.c buffer-diff.h cairo-test.c \
	cairo-test.h xmalloc.c xmalloc.h $(am__append_9) \
	$(am__append_10)
# BeOS system headers trigger this warning
@CAIRO_HAS_BEOS_SURFACE_TRUE@libcairotest_la_CXXFLAGS = -Wno-multichar
LDADD = libcairotest.la $(top_builddir)/src/libcairo.la \
	$(am__append_11) $(am__append_12) $(am__append_13) \
	$(am__append_14) $(am__append_15)
@CAIRO_CAN_TEST_PDF_SURFACE_TRUE@pdf2png_CFLAGS = $(POPPLER_CFLAGS)
@CAIRO_CAN_TEST_PDF_SURFACE_TRUE@pdf2png_LDADD = $(LDADD) $(POPPLER_LIBS)
@CAIRO_CAN_TEST_SVG_SURFACE_TRUE@svg2png_CFLAGS = $(LIBRSVG_CFLAGS)
@CAIRO_CAN_TEST_SVG_SURFACE_TRUE@svg2png_LDADD = $(LDADD) $(LIBRSVG_LIBS)

# Do a funny transition of CAIRO_TEST_TARGET through TARGETS such that
# one can limit tested targets both through CAIRO_TEST_TARGET env var
# and TARGETS make var on the command line.
TARGETS = $(CAIRO_TEST_TARGET)
TESTS_ENVIRONMENT = CAIRO_XFAIL_TESTS="$(XFAIL_TESTS)" CAIRO_TEST_TARGET="$(TARGETS)"
VALGRIND_FLAGS = \
	--tool=memcheck --suppressions=$(srcdir)/.valgrind-suppressions \
	--leak-check=yes --show-reachable=yes

CLEANFILES = \
	*.ps					\
	*.pdf					\
	*.svg					\
	*-out.png				\
	*-diff.png				\
	*.log					\
	valgrind-log				\
	index.html				\
	ref.hash				\
	$(EXTRA_LTLIBRARIES)			\
	$(EXTRA_PROGRAMS)


# The following definitions both should work.
#FAILED_TESTS = `grep -l '\<FAIL\>' $(TESTS:=.log) 2>/dev/null | sed -e 's/[.]log$$//' | xargs echo`
FAILED_TESTS = `grep -l '\<FAIL\>' $(TESTS:=.log) 2>/dev/null | tr '\n' ' ' | sed -e 's/[.]log  */ /g; s/^ //; s/ $$//'`
recheck = check TESTS="$(FAILED_TESTS)"
NOLOG_TESTS_LOG = $(NOLOG_TESTS:=.log)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  test/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
libcairotest.la: $(libcairotest_la_OBJECTS) $(libcairotest_la_DEPENDENCIES) 
	$(CXXLINK)  $(libcairotest_la_LDFLAGS) $(libcairotest_la_OBJECTS) $(libcairotest_la_LIBADD) $(LIBS)
a8-mask$(EXEEXT): $(a8_mask_OBJECTS) $(a8_mask_DEPENDENCIES) 
	@rm -f a8-mask$(EXEEXT)
	$(LINK) $(a8_mask_LDFLAGS) $(a8_mask_OBJECTS) $(a8_mask_LDADD) $(LIBS)
bitmap-font$(EXEEXT): $(bitmap_font_OBJECTS) $(bitmap_font_DEPENDENCIES) 
	@rm -f bitmap-font$(EXEEXT)
	$(LINK) $(bitmap_font_LDFLAGS) $(bitmap_font_OBJECTS) $(bitmap_font_LDADD) $(LIBS)
caps-joins$(EXEEXT): $(caps_joins_OBJECTS) $(caps_joins_DEPENDENCIES) 
	@rm -f caps-joins$(EXEEXT)
	$(LINK) $(caps_joins_LDFLAGS) $(caps_joins_OBJECTS) $(caps_joins_LDADD) $(LIBS)
caps-joins-alpha$(EXEEXT): $(caps_joins_alpha_OBJECTS) $(caps_joins_alpha_DEPENDENCIES) 
	@rm -f caps-joins-alpha$(EXEEXT)
	$(LINK) $(caps_joins_alpha_LDFLAGS) $(caps_joins_alpha_OBJECTS) $(caps_joins_alpha_LDADD) $(LIBS)
caps-sub-paths$(EXEEXT): $(caps_sub_paths_OBJECTS) $(caps_sub_paths_DEPENDENCIES) 
	@rm -f caps-sub-paths$(EXEEXT)
	$(LINK) $(caps_sub_paths_LDFLAGS) $(caps_sub_paths_OBJECTS) $(caps_sub_paths_LDADD) $(LIBS)
clip-all$(EXEEXT): $(clip_all_OBJECTS) $(clip_all_DEPENDENCIES) 
	@rm -f clip-all$(EXEEXT)
	$(LINK) $(clip_all_LDFLAGS) $(clip_all_OBJECTS) $(clip_all_LDADD) $(LIBS)
clip-fill-rule$(EXEEXT): $(clip_fill_rule_OBJECTS) $(clip_fill_rule_DEPENDENCIES) 
	@rm -f clip-fill-rule$(EXEEXT)
	$(LINK) $(clip_fill_rule_LDFLAGS) $(clip_fill_rule_OBJECTS) $(clip_fill_rule_LDADD) $(LIBS)
clip-fill-rule-pixel-aligned$(EXEEXT): $(clip_fill_rule_pixel_aligned_OBJECTS) $(clip_fill_rule_pixel_aligned_DEPENDENCIES) 
	@rm -f clip-fill-rule-pixel-aligned$(EXEEXT)
	$(LINK) $(clip_fill_rule_pixel_aligned_LDFLAGS) $(clip_fill_rule_pixel_aligned_OBJECTS) $(clip_fill_rule_pixel_aligned_LDADD) $(LIBS)
clip-nesting$(EXEEXT): $(clip_nesting_OBJECTS) $(clip_nesting_DEPENDENCIES) 
	@rm -f clip-nesting$(EXEEXT)
	$(LINK) $(clip_nesting_LDFLAGS) $(clip_nesting_OBJECTS) $(clip_nesting_LDADD) $(LIBS)
clip-operator$(EXEEXT): $(clip_operator_OBJECTS) $(clip_operator_DEPENDENCIES) 
	@rm -f clip-operator$(EXEEXT)
	$(LINK) $(clip_operator_LDFLAGS) $(clip_operator_OBJECTS) $(clip_operator_LDADD) $(LIBS)
clip-twice$(EXEEXT): $(clip_twice_OBJECTS) $(clip_twice_DEPENDENCIES) 
	@rm -f clip-twice$(EXEEXT)
	$(LINK) $(clip_twice_LDFLAGS) $(clip_twice_OBJECTS) $(clip_twice_LDADD) $(LIBS)
close-path$(EXEEXT): $(close_path_OBJECTS) $(close_path_DEPENDENCIES) 
	@rm -f close-path$(EXEEXT)
	$(LINK) $(close_path_LDFLAGS) $(close_path_OBJECTS) $(close_path_LDADD) $(LIBS)
composite-integer-translate-over$(EXEEXT): $(composite_integer_translate_over_OBJECTS) $(composite_integer_translate_over_DEPENDENCIES) 
	@rm -f composite-integer-translate-over$(EXEEXT)
	$(LINK) $(composite_integer_translate_over_LDFLAGS) $(composite_integer_translate_over_OBJECTS) $(composite_integer_translate_over_LDADD) $(LIBS)
composite-integer-translate-over-repeat$(EXEEXT): $(composite_integer_translate_over_repeat_OBJECTS) $(composite_integer_translate_over_repeat_DEPENDENCIES) 
	@rm -f composite-integer-translate-over-repeat$(EXEEXT)
	$(LINK) $(composite_integer_translate_over_repeat_LDFLAGS) $(composite_integer_translate_over_repeat_OBJECTS) $(composite_integer_translate_over_repeat_LDADD) $(LIBS)
composite-integer-translate-source$(EXEEXT): $(composite_integer_translate_source_OBJECTS) $(composite_integer_translate_source_DEPENDENCIES) 
	@rm -f composite-integer-translate-source$(EXEEXT)
	$(LINK) $(composite_integer_translate_source_LDFLAGS) $(composite_integer_translate_source_OBJECTS) $(composite_integer_translate_source_LDADD) $(LIBS)
copy-path$(EXEEXT): $(copy_path_OBJECTS) $(copy_path_DEPENDENCIES) 
	@rm -f copy-path$(EXEEXT)
	$(LINK) $(copy_path_LDFLAGS) $(copy_path_OBJECTS) $(copy_path_LDADD) $(LIBS)
create-for-stream$(EXEEXT): $(create_for_stream_OBJECTS) $(create_for_stream_DEPENDENCIES) 
	@rm -f create-for-stream$(EXEEXT)
	$(LINK) $(create_for_stream_LDFLAGS) $(create_for_stream_OBJECTS) $(create_for_stream_LDADD) $(LIBS)
create-from-png$(EXEEXT): $(create_from_png_OBJECTS) $(create_from_png_DEPENDENCIES) 
	@rm -f create-from-png$(EXEEXT)
	$(LINK) $(create_from_png_LDFLAGS) $(create_from_png_OBJECTS) $(create_from_png_LDADD) $(LIBS)
create-from-png-stream$(EXEEXT): $(create_from_png_stream_OBJECTS) $(create_from_png_stream_DEPENDENCIES) 
	@rm -f create-from-png-stream$(EXEEXT)
	$(LINK) $(create_from_png_stream_LDFLAGS) $(create_from_png_stream_OBJECTS) $(create_from_png_stream_LDADD) $(LIBS)
dash-caps-joins$(EXEEXT): $(dash_caps_joins_OBJECTS) $(dash_caps_joins_DEPENDENCIES) 
	@rm -f dash-caps-joins$(EXEEXT)
	$(LINK) $(dash_caps_joins_LDFLAGS) $(dash_caps_joins_OBJECTS) $(dash_caps_joins_LDADD) $(LIBS)
dash-no-dash$(EXEEXT): $(dash_no_dash_OBJECTS) $(dash_no_dash_DEPENDENCIES) 
	@rm -f dash-no-dash$(EXEEXT)
	$(LINK) $(dash_no_dash_LDFLAGS) $(dash_no_dash_OBJECTS) $(dash_no_dash_LDADD) $(LIBS)
dash-offset-negative$(EXEEXT): $(dash_offset_negative_OBJECTS) $(dash_offset_negative_DEPENDENCIES) 
	@rm -f dash-offset-negative$(EXEEXT)
	$(LINK) $(dash_offset_negative_LDFLAGS) $(dash_offset_negative_OBJECTS) $(dash_offset_negative_LDADD) $(LIBS)
dash-scale$(EXEEXT): $(dash_scale_OBJECTS) $(dash_scale_DEPENDENCIES) 
	@rm -f dash-scale$(EXEEXT)
	$(LINK) $(dash_scale_LDFLAGS) $(dash_scale_OBJECTS) $(dash_scale_LDADD) $(LIBS)
dash-zero-length$(EXEEXT): $(dash_zero_length_OBJECTS) $(dash_zero_length_DEPENDENCIES) 
	@rm -f dash-zero-length$(EXEEXT)
	$(LINK) $(dash_zero_length_LDFLAGS) $(dash_zero_length_OBJECTS) $(dash_zero_length_LDADD) $(LIBS)
degenerate-path$(EXEEXT): $(degenerate_path_OBJECTS) $(degenerate_path_DEPENDENCIES) 
	@rm -f degenerate-path$(EXEEXT)
	$(LINK) $(degenerate_path_LDFLAGS) $(degenerate_path_OBJECTS) $(degenerate_path_LDADD) $(LIBS)
device-offset$(EXEEXT): $(device_offset_OBJECTS) $(device_offset_DEPENDENCIES) 
	@rm -f device-offset$(EXEEXT)
	$(LINK) $(device_offset_LDFLAGS) $(device_offset_OBJECTS) $(device_offset_LDADD) $(LIBS)
device-offset-positive$(EXEEXT): $(device_offset_positive_OBJECTS) $(device_offset_positive_DEPENDENCIES) 
	@rm -f device-offset-positive$(EXEEXT)
	$(LINK) $(device_offset_positive_LDFLAGS) $(device_offset_positive_OBJECTS) $(device_offset_positive_LDADD) $(LIBS)
extend-reflect$(EXEEXT): $(extend_reflect_OBJECTS) $(extend_reflect_DEPENDENCIES) 
	@rm -f extend-reflect$(EXEEXT)
	$(LINK) $(extend_reflect_LDFLAGS) $(extend_reflect_OBJECTS) $(extend_reflect_LDADD) $(LIBS)
fallback-resolution$(EXEEXT): $(fallback_resolution_OBJECTS) $(fallback_resolution_DEPENDENCIES) 
	@rm -f fallback-resolution$(EXEEXT)
	$(LINK) $(fallback_resolution_LDFLAGS) $(fallback_resolution_OBJECTS) $(fallback_resolution_LDADD) $(LIBS)
fill-and-stroke$(EXEEXT): $(fill_and_stroke_OBJECTS) $(fill_and_stroke_DEPENDENCIES) 
	@rm -f fill-and-stroke$(EXEEXT)
	$(LINK) $(fill_and_stroke_LDFLAGS) $(fill_and_stroke_OBJECTS) $(fill_and_stroke_LDADD) $(LIBS)
fill-and-stroke-alpha$(EXEEXT): $(fill_and_stroke_alpha_OBJECTS) $(fill_and_stroke_alpha_DEPENDENCIES) 
	@rm -f fill-and-stroke-alpha$(EXEEXT)
	$(LINK) $(fill_and_stroke_alpha_LDFLAGS) $(fill_and_stroke_alpha_OBJECTS) $(fill_and_stroke_alpha_LDADD) $(LIBS)
fill-and-stroke-alpha-add$(EXEEXT): $(fill_and_stroke_alpha_add_OBJECTS) $(fill_and_stroke_alpha_add_DEPENDENCIES) 
	@rm -f fill-and-stroke-alpha-add$(EXEEXT)
	$(LINK) $(fill_and_stroke_alpha_add_LDFLAGS) $(fill_and_stroke_alpha_add_OBJECTS) $(fill_and_stroke_alpha_add_LDADD) $(LIBS)
fill-rule$(EXEEXT): $(fill_rule_OBJECTS) $(fill_rule_DEPENDENCIES) 
	@rm -f fill-rule$(EXEEXT)
	$(LINK) $(fill_rule_LDFLAGS) $(fill_rule_OBJECTS) $(fill_rule_LDADD) $(LIBS)
filter-nearest-offset$(EXEEXT): $(filter_nearest_offset_OBJECTS) $(filter_nearest_offset_DEPENDENCIES) 
	@rm -f filter-nearest-offset$(EXEEXT)
	$(LINK) $(filter_nearest_offset_LDFLAGS) $(filter_nearest_offset_OBJECTS) $(filter_nearest_offset_LDADD) $(LIBS)
font-face-get-type$(EXEEXT): $(font_face_get_type_OBJECTS) $(font_face_get_type_DEPENDENCIES) 
	@rm -f font-face-get-type$(EXEEXT)
	$(LINK) $(font_face_get_type_LDFLAGS) $(font_face_get_type_OBJECTS) $(font_face_get_type_LDADD) $(LIBS)
font-matrix-translation$(EXEEXT): $(font_matrix_translation_OBJECTS) $(font_matrix_translation_DEPENDENCIES) 
	@rm -f font-matrix-translation$(EXEEXT)
	$(LINK) $(font_matrix_translation_LDFLAGS) $(font_matrix_translation_OBJECTS) $(font_matrix_translation_LDADD) $(LIBS)
ft-font-create-for-ft-face$(EXEEXT): $(ft_font_create_for_ft_face_OBJECTS) $(ft_font_create_for_ft_face_DEPENDENCIES) 
	@rm -f ft-font-create-for-ft-face$(EXEEXT)
	$(LINK) $(ft_font_create_for_ft_face_LDFLAGS) $(ft_font_create_for_ft_face_OBJECTS) $(ft_font_create_for_ft_face_LDADD) $(LIBS)
ft-text-antialias-none$(EXEEXT): $(ft_text_antialias_none_OBJECTS) $(ft_text_antialias_none_DEPENDENCIES) 
	@rm -f ft-text-antialias-none$(EXEEXT)
	$(LINK) $(ft_text_antialias_none_LDFLAGS) $(ft_text_antialias_none_OBJECTS) $(ft_text_antialias_none_LDADD) $(LIBS)
ft-text-vertical-layout-type1$(EXEEXT): $(ft_text_vertical_layout_type1_OBJECTS) $(ft_text_vertical_layout_type1_DEPENDENCIES) 
	@rm -f ft-text-vertical-layout-type1$(EXEEXT)
	$(LINK) $(ft_text_vertical_layout_type1_LDFLAGS) $(ft_text_vertical_layout_type1_OBJECTS) $(ft_text_vertical_layout_type1_LDADD) $(LIBS)
ft-text-vertical-layout-type3$(EXEEXT): $(ft_text_vertical_layout_type3_OBJECTS) $(ft_text_vertical_layout_type3_DEPENDENCIES) 
	@rm -f ft-text-vertical-layout-type3$(EXEEXT)
	$(LINK) $(ft_text_vertical_layout_type3_LDFLAGS) $(ft_text_vertical_layout_type3_OBJECTS) $(ft_text_vertical_layout_type3_LDADD) $(LIBS)
get-and-set$(EXEEXT): $(get_and_set_OBJECTS) $(get_and_set_DEPENDENCIES) 
	@rm -f get-and-set$(EXEEXT)
	$(LINK) $(get_and_set_LDFLAGS) $(get_and_set_OBJECTS) $(get_and_set_LDADD) $(LIBS)
get-group-target$(EXEEXT): $(get_group_target_OBJECTS) $(get_group_target_DEPENDENCIES) 
	@rm -f get-group-target$(EXEEXT)
	$(LINK) $(get_group_target_LDFLAGS) $(get_group_target_OBJECTS) $(get_group_target_LDADD) $(LIBS)
glyph-cache-pressure$(EXEEXT): $(glyph_cache_pressure_OBJECTS) $(glyph_cache_pressure_DEPENDENCIES) 
	@rm -f glyph-cache-pressure$(EXEEXT)
	$(LINK) $(glyph_cache_pressure_LDFLAGS) $(glyph_cache_pressure_OBJECTS) $(glyph_cache_pressure_LDADD) $(LIBS)
gradient-alpha$(EXEEXT): $(gradient_alpha_OBJECTS) $(gradient_alpha_DEPENDENCIES) 
	@rm -f gradient-alpha$(EXEEXT)
	$(LINK) $(gradient_alpha_LDFLAGS) $(gradient_alpha_OBJECTS) $(gradient_alpha_LDADD) $(LIBS)
imagediff$(EXEEXT): $(imagediff_OBJECTS) $(imagediff_DEPENDENCIES) 
	@rm -f imagediff$(EXEEXT)
	$(LINK) $(imagediff_LDFLAGS) $(imagediff_OBJECTS) $(imagediff_LDADD) $(LIBS)
infinite-join$(EXEEXT): $(infinite_join_OBJECTS) $(infinite_join_DEPENDENCIES) 
	@rm -f infinite-join$(EXEEXT)
	$(LINK) $(infinite_join_LDFLAGS) $(infinite_join_OBJECTS) $(infinite_join_LDADD) $(LIBS)
leaky-dash$(EXEEXT): $(leaky_dash_OBJECTS) $(leaky_dash_DEPENDENCIES) 
	@rm -f leaky-dash$(EXEEXT)
	$(LINK) $(leaky_dash_LDFLAGS) $(leaky_dash_OBJECTS) $(leaky_dash_LDADD) $(LIBS)
leaky-polygon$(EXEEXT): $(leaky_polygon_OBJECTS) $(leaky_polygon_DEPENDENCIES) 
	@rm -f leaky-polygon$(EXEEXT)
	$(LINK) $(leaky_polygon_LDFLAGS) $(leaky_polygon_OBJECTS) $(leaky_polygon_LDADD) $(LIBS)
line-width$(EXEEXT): $(line_width_OBJECTS) $(line_width_DEPENDENCIES) 
	@rm -f line-width$(EXEEXT)
	$(LINK) $(line_width_LDFLAGS) $(line_width_OBJECTS) $(line_width_LDADD) $(LIBS)
line-width-scale$(EXEEXT): $(line_width_scale_OBJECTS) $(line_width_scale_DEPENDENCIES) 
	@rm -f line-width-scale$(EXEEXT)
	$(LINK) $(line_width_scale_LDFLAGS) $(line_width_scale_OBJECTS) $(line_width_scale_LDADD) $(LIBS)
linear-gradient$(EXEEXT): $(linear_gradient_OBJECTS) $(linear_gradient_DEPENDENCIES) 
	@rm -f linear-gradient$(EXEEXT)
	$(LINK) $(linear_gradient_LDFLAGS) $(linear_gradient_OBJECTS) $(linear_gradient_LDADD) $(LIBS)
long-lines$(EXEEXT): $(long_lines_OBJECTS) $(long_lines_DEPENDENCIES) 
	@rm -f long-lines$(EXEEXT)
	$(LINK) $(long_lines_LDFLAGS) $(long_lines_OBJECTS) $(long_lines_LDADD) $(LIBS)
mask$(EXEEXT): $(mask_OBJECTS) $(mask_DEPENDENCIES) 
	@rm -f mask$(EXEEXT)
	$(LINK) $(mask_LDFLAGS) $(mask_OBJECTS) $(mask_LDADD) $(LIBS)
mask-ctm$(EXEEXT): $(mask_ctm_OBJECTS) $(mask_ctm_DEPENDENCIES) 
	@rm -f mask-ctm$(EXEEXT)
	$(LINK) $(mask_ctm_LDFLAGS) $(mask_ctm_OBJECTS) $(mask_ctm_LDADD) $(LIBS)
mask-surface-ctm$(EXEEXT): $(mask_surface_ctm_OBJECTS) $(mask_surface_ctm_DEPENDENCIES) 
	@rm -f mask-surface-ctm$(EXEEXT)
	$(LINK) $(mask_surface_ctm_LDFLAGS) $(mask_surface_ctm_OBJECTS) $(mask_surface_ctm_LDADD) $(LIBS)
move-to-show-surface$(EXEEXT): $(move_to_show_surface_OBJECTS) $(move_to_show_surface_DEPENDENCIES) 
	@rm -f move-to-show-surface$(EXEEXT)
	$(LINK) $(move_to_show_surface_LDFLAGS) $(move_to_show_surface_OBJECTS) $(move_to_show_surface_LDADD) $(LIBS)
multi-page$(EXEEXT): $(multi_page_OBJECTS) $(multi_page_DEPENDENCIES) 
	@rm -f multi-page$(EXEEXT)
	$(LINK) $(multi_page_LDFLAGS) $(multi_page_OBJECTS) $(multi_page_LDADD) $(LIBS)
new-sub-path$(EXEEXT): $(new_sub_path_OBJECTS) $(new_sub_path_DEPENDENCIES) 
	@rm -f new-sub-path$(EXEEXT)
	$(LINK) $(new_sub_path_LDFLAGS) $(new_sub_path_OBJECTS) $(new_sub_path_LDADD) $(LIBS)
nil-surface$(EXEEXT): $(nil_surface_OBJECTS) $(nil_surface_DEPENDENCIES) 
	@rm -f nil-surface$(EXEEXT)
	$(LINK) $(nil_surface_LDFLAGS) $(nil_surface_OBJECTS) $(nil_surface_LDADD) $(LIBS)
operator-clear$(EXEEXT): $(operator_clear_OBJECTS) $(operator_clear_DEPENDENCIES) 
	@rm -f operator-clear$(EXEEXT)
	$(LINK) $(operator_clear_LDFLAGS) $(operator_clear_OBJECTS) $(operator_clear_LDADD) $(LIBS)
operator-source$(EXEEXT): $(operator_source_OBJECTS) $(operator_source_DEPENDENCIES) 
	@rm -f operator-source$(EXEEXT)
	$(LINK) $(operator_source_LDFLAGS) $(operator_source_OBJECTS) $(operator_source_LDADD) $(LIBS)
paint$(EXEEXT): $(paint_OBJECTS) $(paint_DEPENDENCIES) 
	@rm -f paint$(EXEEXT)
	$(LINK) $(paint_LDFLAGS) $(paint_OBJECTS) $(paint_LDADD) $(LIBS)
paint-source-alpha$(EXEEXT): $(paint_source_alpha_OBJECTS) $(paint_source_alpha_DEPENDENCIES) 
	@rm -f paint-source-alpha$(EXEEXT)
	$(LINK) $(paint_source_alpha_LDFLAGS) $(paint_source_alpha_OBJECTS) $(paint_source_alpha_LDADD) $(LIBS)
paint-with-alpha$(EXEEXT): $(paint_with_alpha_OBJECTS) $(paint_with_alpha_DEPENDENCIES) 
	@rm -f paint-with-alpha$(EXEEXT)
	$(LINK) $(paint_with_alpha_LDFLAGS) $(paint_with_alpha_OBJECTS) $(paint_with_alpha_LDADD) $(LIBS)
pattern-get-type$(EXEEXT): $(pattern_get_type_OBJECTS) $(pattern_get_type_DEPENDENCIES) 
	@rm -f pattern-get-type$(EXEEXT)
	$(LINK) $(pattern_get_type_LDFLAGS) $(pattern_get_type_OBJECTS) $(pattern_get_type_LDADD) $(LIBS)
pdf-features$(EXEEXT): $(pdf_features_OBJECTS) $(pdf_features_DEPENDENCIES) 
	@rm -f pdf-features$(EXEEXT)
	$(LINK) $(pdf_features_LDFLAGS) $(pdf_features_OBJECTS) $(pdf_features_LDADD) $(LIBS)
pdf2png$(EXEEXT): $(pdf2png_OBJECTS) $(pdf2png_DEPENDENCIES) 
	@rm -f pdf2png$(EXEEXT)
	$(LINK) $(pdf2png_LDFLAGS) $(pdf2png_OBJECTS) $(pdf2png_LDADD) $(LIBS)
pixman-rotate$(EXEEXT): $(pixman_rotate_OBJECTS) $(pixman_rotate_DEPENDENCIES) 
	@rm -f pixman-rotate$(EXEEXT)
	$(LINK) $(pixman_rotate_LDFLAGS) $(pixman_rotate_OBJECTS) $(pixman_rotate_LDADD) $(LIBS)
png-flatten$(EXEEXT): $(png_flatten_OBJECTS) $(png_flatten_DEPENDENCIES) 
	@rm -f png-flatten$(EXEEXT)
	$(LINK) $(png_flatten_LDFLAGS) $(png_flatten_OBJECTS) $(png_flatten_LDADD) $(LIBS)
ps-features$(EXEEXT): $(ps_features_OBJECTS) $(ps_features_DEPENDENCIES) 
	@rm -f ps-features$(EXEEXT)
	$(LINK) $(ps_features_LDFLAGS) $(ps_features_OBJECTS) $(ps_features_LDADD) $(LIBS)
pthread-show-text$(EXEEXT): $(pthread_show_text_OBJECTS) $(pthread_show_text_DEPENDENCIES) 
	@rm -f pthread-show-text$(EXEEXT)
	$(LINK) $(pthread_show_text_LDFLAGS) $(pthread_show_text_OBJECTS) $(pthread_show_text_LDADD) $(LIBS)
push-group$(EXEEXT): $(push_group_OBJECTS) $(push_group_DEPENDENCIES) 
	@rm -f push-group$(EXEEXT)
	$(LINK) $(push_group_LDFLAGS) $(push_group_OBJECTS) $(push_group_LDADD) $(LIBS)
rectangle-rounding-error$(EXEEXT): $(rectangle_rounding_error_OBJECTS) $(rectangle_rounding_error_DEPENDENCIES) 
	@rm -f rectangle-rounding-error$(EXEEXT)
	$(LINK) $(rectangle_rounding_error_LDFLAGS) $(rectangle_rounding_error_OBJECTS) $(rectangle_rounding_error_LDADD) $(LIBS)
rel-path$(EXEEXT): $(rel_path_OBJECTS) $(rel_path_DEPENDENCIES) 
	@rm -f rel-path$(EXEEXT)
	$(LINK) $(rel_path_LDFLAGS) $(rel_path_OBJECTS) $(rel_path_LDADD) $(LIBS)
scale-source-surface-paint$(EXEEXT): $(scale_source_surface_paint_OBJECTS) $(scale_source_surface_paint_DEPENDENCIES) 
	@rm -f scale-source-surface-paint$(EXEEXT)
	$(LINK) $(scale_source_surface_paint_LDFLAGS) $(scale_source_surface_paint_OBJECTS) $(scale_source_surface_paint_LDADD) $(LIBS)
select-font-face$(EXEEXT): $(select_font_face_OBJECTS) $(select_font_face_DEPENDENCIES) 
	@rm -f select-font-face$(EXEEXT)
	$(LINK) $(select_font_face_LDFLAGS) $(select_font_face_OBJECTS) $(select_font_face_LDADD) $(LIBS)
select-font-no-show-text$(EXEEXT): $(select_font_no_show_text_OBJECTS) $(select_font_no_show_text_DEPENDENCIES) 
	@rm -f select-font-no-show-text$(EXEEXT)
	$(LINK) $(select_font_no_show_text_LDFLAGS) $(select_font_no_show_text_OBJECTS) $(select_font_no_show_text_LDADD) $(LIBS)
self-copy$(EXEEXT): $(self_copy_OBJECTS) $(self_copy_DEPENDENCIES) 
	@rm -f self-copy$(EXEEXT)
	$(LINK) $(self_copy_LDFLAGS) $(self_copy_OBJECTS) $(self_copy_LDADD) $(LIBS)
self-intersecting$(EXEEXT): $(self_intersecting_OBJECTS) $(self_intersecting_DEPENDENCIES) 
	@rm -f self-intersecting$(EXEEXT)
	$(LINK) $(self_intersecting_LDFLAGS) $(self_intersecting_OBJECTS) $(self_intersecting_LDADD) $(LIBS)
set-source$(EXEEXT): $(set_source_OBJECTS) $(set_source_DEPENDENCIES) 
	@rm -f set-source$(EXEEXT)
	$(LINK) $(set_source_LDFLAGS) $(set_source_OBJECTS) $(set_source_LDADD) $(LIBS)
show-text-current-point$(EXEEXT): $(show_text_current_point_OBJECTS) $(show_text_current_point_DEPENDENCIES) 
	@rm -f show-text-current-point$(EXEEXT)
	$(LINK) $(show_text_current_point_LDFLAGS) $(show_text_current_point_OBJECTS) $(show_text_current_point_LDADD) $(LIBS)
source-clip$(EXEEXT): $(source_clip_OBJECTS) $(source_clip_DEPENDENCIES) 
	@rm -f source-clip$(EXEEXT)
	$(LINK) $(source_clip_LDFLAGS) $(source_clip_OBJECTS) $(source_clip_LDADD) $(LIBS)
source-clip-scale$(EXEEXT): $(source_clip_scale_OBJECTS) $(source_clip_scale_DEPENDENCIES) 
	@rm -f source-clip-scale$(EXEEXT)
	$(LINK) $(source_clip_scale_LDFLAGS) $(source_clip_scale_OBJECTS) $(source_clip_scale_LDADD) $(LIBS)
source-surface-scale-paint$(EXEEXT): $(source_surface_scale_paint_OBJECTS) $(source_surface_scale_paint_DEPENDENCIES) 
	@rm -f source-surface-scale-paint$(EXEEXT)
	$(LINK) $(source_surface_scale_paint_LDFLAGS) $(source_surface_scale_paint_OBJECTS) $(source_surface_scale_paint_LDADD) $(LIBS)
surface-finish-twice$(EXEEXT): $(surface_finish_twice_OBJECTS) $(surface_finish_twice_DEPENDENCIES) 
	@rm -f surface-finish-twice$(EXEEXT)
	$(LINK) $(surface_finish_twice_LDFLAGS) $(surface_finish_twice_OBJECTS) $(surface_finish_twice_LDADD) $(LIBS)
surface-pattern$(EXEEXT): $(surface_pattern_OBJECTS) $(surface_pattern_DEPENDENCIES) 
	@rm -f surface-pattern$(EXEEXT)
	$(LINK) $(surface_pattern_LDFLAGS) $(surface_pattern_OBJECTS) $(surface_pattern_LDADD) $(LIBS)
svg-clip$(EXEEXT): $(svg_clip_OBJECTS) $(svg_clip_DEPENDENCIES) 
	@rm -f svg-clip$(EXEEXT)
	$(LINK) $(svg_clip_LDFLAGS) $(svg_clip_OBJECTS) $(svg_clip_LDADD) $(LIBS)
svg-surface$(EXEEXT): $(svg_surface_OBJECTS) $(svg_surface_DEPENDENCIES) 
	@rm -f svg-surface$(EXEEXT)
	$(LINK) $(svg_surface_LDFLAGS) $(svg_surface_OBJECTS) $(svg_surface_LDADD) $(LIBS)
svg2png$(EXEEXT): $(svg2png_OBJECTS) $(svg2png_DEPENDENCIES) 
	@rm -f svg2png$(EXEEXT)
	$(LINK) $(svg2png_LDFLAGS) $(svg2png_OBJECTS) $(svg2png_LDADD) $(LIBS)
text-antialias-gray$(EXEEXT): $(text_antialias_gray_OBJECTS) $(text_antialias_gray_DEPENDENCIES) 
	@rm -f text-antialias-gray$(EXEEXT)
	$(LINK) $(text_antialias_gray_LDFLAGS) $(text_antialias_gray_OBJECTS) $(text_antialias_gray_LDADD) $(LIBS)
text-antialias-none$(EXEEXT): $(text_antialias_none_OBJECTS) $(text_antialias_none_DEPENDENCIES) 
	@rm -f text-antialias-none$(EXEEXT)
	$(LINK) $(text_antialias_none_LDFLAGS) $(text_antialias_none_OBJECTS) $(text_antialias_none_LDADD) $(LIBS)
text-antialias-subpixel$(EXEEXT): $(text_antialias_subpixel_OBJECTS) $(text_antialias_subpixel_DEPENDENCIES) 
	@rm -f text-antialias-subpixel$(EXEEXT)
	$(LINK) $(text_antialias_subpixel_LDFLAGS) $(text_antialias_subpixel_OBJECTS) $(text_antialias_subpixel_LDADD) $(LIBS)
text-cache-crash$(EXEEXT): $(text_cache_crash_OBJECTS) $(text_cache_crash_DEPENDENCIES) 
	@rm -f text-cache-crash$(EXEEXT)
	$(LINK) $(text_cache_crash_LDFLAGS) $(text_cache_crash_OBJECTS) $(text_cache_crash_LDADD) $(LIBS)
text-pattern$(EXEEXT): $(text_pattern_OBJECTS) $(text_pattern_DEPENDENCIES) 
	@rm -f text-pattern$(EXEEXT)
	$(LINK) $(text_pattern_LDFLAGS) $(text_pattern_OBJECTS) $(text_pattern_LDADD) $(LIBS)
text-rotate$(EXEEXT): $(text_rotate_OBJECTS) $(text_rotate_DEPENDENCIES) 
	@rm -f text-rotate$(EXEEXT)
	$(LINK) $(text_rotate_LDFLAGS) $(text_rotate_OBJECTS) $(text_rotate_LDADD) $(LIBS)
transforms$(EXEEXT): $(transforms_OBJECTS) $(transforms_DEPENDENCIES) 
	@rm -f transforms$(EXEEXT)
	$(LINK) $(transforms_LDFLAGS) $(transforms_OBJECTS) $(transforms_LDADD) $(LIBS)
translate-show-surface$(EXEEXT): $(translate_show_surface_OBJECTS) $(translate_show_surface_DEPENDENCIES) 
	@rm -f translate-show-surface$(EXEEXT)
	$(LINK) $(translate_show_surface_LDFLAGS) $(translate_show_surface_OBJECTS) $(translate_show_surface_LDADD) $(LIBS)
trap-clip$(EXEEXT): $(trap_clip_OBJECTS) $(trap_clip_DEPENDENCIES) 
	@rm -f trap-clip$(EXEEXT)
	$(LINK) $(trap_clip_LDFLAGS) $(trap_clip_OBJECTS) $(trap_clip_LDADD) $(LIBS)
truetype-tables$(EXEEXT): $(truetype_tables_OBJECTS) $(truetype_tables_DEPENDENCIES) 
	@rm -f truetype-tables$(EXEEXT)
	$(LINK) $(truetype_tables_LDFLAGS) $(truetype_tables_OBJECTS) $(truetype_tables_LDADD) $(LIBS)
unantialiased-shapes$(EXEEXT): $(unantialiased_shapes_OBJECTS) $(unantialiased_shapes_DEPENDENCIES) 
	@rm -f unantialiased-shapes$(EXEEXT)
	$(LINK) $(unantialiased_shapes_LDFLAGS) $(unantialiased_shapes_OBJECTS) $(unantialiased_shapes_LDADD) $(LIBS)
unbounded-operator$(EXEEXT): $(unbounded_operator_OBJECTS) $(unbounded_operator_DEPENDENCIES) 
	@rm -f unbounded-operator$(EXEEXT)
	$(LINK) $(unbounded_operator_LDFLAGS) $(unbounded_operator_OBJECTS) $(unbounded_operator_LDADD) $(LIBS)
user-data$(EXEEXT): $(user_data_OBJECTS) $(user_data_DEPENDENCIES) 
	@rm -f user-data$(EXEEXT)
	$(LINK) $(user_data_LDFLAGS) $(user_data_OBJECTS) $(user_data_LDADD) $(LIBS)
xlib-surface$(EXEEXT): $(xlib_surface_OBJECTS) $(xlib_surface_DEPENDENCIES) 
	@rm -f xlib-surface$(EXEEXT)
	$(LINK) $(xlib_surface_LDFLAGS) $(xlib_surface_OBJECTS) $(xlib_surface_LDADD) $(LIBS)
zero-alpha$(EXEEXT): $(zero_alpha_OBJECTS) $(zero_alpha_DEPENDENCIES) 
	@rm -f zero-alpha$(EXEEXT)
	$(LINK) $(zero_alpha_LDFLAGS) $(zero_alpha_OBJECTS) $(zero_alpha_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/a8-mask.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bitmap-font.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/buffer-diff.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-test-directfb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-test.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/caps-joins-alpha.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/caps-joins.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/caps-sub-paths.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clip-all.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clip-fill-rule-pixel-aligned.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clip-fill-rule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clip-nesting.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clip-operator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clip-twice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/close-path.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/composite-integer-translate-over-repeat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/composite-integer-translate-over.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/composite-integer-translate-source.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/copy-path.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create-for-stream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create-from-png-stream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create-from-png.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dash-caps-joins.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dash-no-dash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dash-offset-negative.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dash-scale.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dash-zero-length.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/degenerate-path.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/device-offset-positive.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/device-offset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/extend-reflect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fallback-resolution.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fill-and-stroke-alpha-add.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fill-and-stroke-alpha.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fill-and-stroke.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fill-rule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filter-nearest-offset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/font-face-get-type.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/font-matrix-translation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ft-font-create-for-ft-face.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ft-text-antialias-none.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ft-text-vertical-layout-type1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ft-text-vertical-layout-type3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/get-and-set.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/get-group-target.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/glyph-cache-pressure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gradient-alpha.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/imagediff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/infinite-join.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/leaky-dash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/leaky-polygon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcairotest_la-cairo-test-beos.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/line-width-scale.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/line-width.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/linear-gradient.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/long-lines.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mask-ctm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mask-surface-ctm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mask.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/move-to-show-surface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi-page.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/new-sub-path.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nil-surface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operator-clear.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operator-source.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/paint-source-alpha.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/paint-with-alpha.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/paint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pattern-get-type.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pdf-features.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pdf2png-pdf2png.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pixman-rotate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/png-flatten.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ps-features.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pthread-show-text.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/push-group.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rectangle-rounding-error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rel-path.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scale-source-surface-paint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/select-font-face.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/select-font-no-show-text.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/self-copy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/self-intersecting.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/set-source.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/show-text-current-point.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/source-clip-scale.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/source-clip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/source-surface-scale-paint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/surface-finish-twice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/surface-pattern.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svg-clip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svg-surface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svg2png-svg2png.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/text-antialias-gray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/text-antialias-none.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/text-antialias-subpixel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/text-cache-crash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/text-pattern.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/text-rotate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/transforms.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/translate-show-surface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trap-clip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/truetype-tables.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unantialiased-shapes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unbounded-operator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/user-data.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xlib-surface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmalloc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zero-alpha.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

pdf2png-pdf2png.o: pdf2png.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pdf2png_CFLAGS) $(CFLAGS) -MT pdf2png-pdf2png.o -MD -MP -MF "$(DEPDIR)/pdf2png-pdf2png.Tpo" -c -o pdf2png-pdf2png.o `test -f 'pdf2png.c' || echo '$(srcdir)/'`pdf2png.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/pdf2png-pdf2png.Tpo" "$(DEPDIR)/pdf2png-pdf2png.Po"; else rm -f "$(DEPDIR)/pdf2png-pdf2png.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pdf2png.c' object='pdf2png-pdf2png.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pdf2png_CFLAGS) $(CFLAGS) -c -o pdf2png-pdf2png.o `test -f 'pdf2png.c' || echo '$(srcdir)/'`pdf2png.c

pdf2png-pdf2png.obj: pdf2png.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pdf2png_CFLAGS) $(CFLAGS) -MT pdf2png-pdf2png.obj -MD -MP -MF "$(DEPDIR)/pdf2png-pdf2png.Tpo" -c -o pdf2png-pdf2png.obj `if test -f 'pdf2png.c'; then $(CYGPATH_W) 'pdf2png.c'; else $(CYGPATH_W) '$(srcdir)/pdf2png.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/pdf2png-pdf2png.Tpo" "$(DEPDIR)/pdf2png-pdf2png.Po"; else rm -f "$(DEPDIR)/pdf2png-pdf2png.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pdf2png.c' object='pdf2png-pdf2png.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pdf2png_CFLAGS) $(CFLAGS) -c -o pdf2png-pdf2png.obj `if test -f 'pdf2png.c'; then $(CYGPATH_W) 'pdf2png.c'; else $(CYGPATH_W) '$(srcdir)/pdf2png.c'; fi`

svg2png-svg2png.o: svg2png.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(svg2png_CFLAGS) $(CFLAGS) -MT svg2png-svg2png.o -MD -MP -MF "$(DEPDIR)/svg2png-svg2png.Tpo" -c -o svg2png-svg2png.o `test -f 'svg2png.c' || echo '$(srcdir)/'`svg2png.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/svg2png-svg2png.Tpo" "$(DEPDIR)/svg2png-svg2png.Po"; else rm -f "$(DEPDIR)/svg2png-svg2png.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='svg2png.c' object='svg2png-svg2png.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(svg2png_CFLAGS) $(CFLAGS) -c -o svg2png-svg2png.o `test -f 'svg2png.c' || echo '$(srcdir)/'`svg2png.c

svg2png-svg2png.obj: svg2png.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(svg2png_CFLAGS) $(CFLAGS) -MT svg2png-svg2png.obj -MD -MP -MF "$(DEPDIR)/svg2png-svg2png.Tpo" -c -o svg2png-svg2png.obj `if test -f 'svg2png.c'; then $(CYGPATH_W) 'svg2png.c'; else $(CYGPATH_W) '$(srcdir)/svg2png.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/svg2png-svg2png.Tpo" "$(DEPDIR)/svg2png-svg2png.Po"; else rm -f "$(DEPDIR)/svg2png-svg2png.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='svg2png.c' object='svg2png-svg2png.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(svg2png_CFLAGS) $(CFLAGS) -c -o svg2png-svg2png.obj `if test -f 'svg2png.c'; then $(CYGPATH_W) 'svg2png.c'; else $(CYGPATH_W) '$(srcdir)/svg2png.c'; fi`

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libcairotest_la-cairo-test-beos.lo: cairo-test-beos.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairotest_la_CXXFLAGS) $(CXXFLAGS) -MT libcairotest_la-cairo-test-beos.lo -MD -MP -MF "$(DEPDIR)/libcairotest_la-cairo-test-beos.Tpo" -c -o libcairotest_la-cairo-test-beos.lo `test -f 'cairo-test-beos.cpp' || echo '$(srcdir)/'`cairo-test-beos.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libcairotest_la-cairo-test-beos.Tpo" "$(DEPDIR)/libcairotest_la-cairo-test-beos.Plo"; else rm -f "$(DEPDIR)/libcairotest_la-cairo-test-beos.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cairo-test-beos.cpp' object='libcairotest_la-cairo-test-beos.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairotest_la_CXXFLAGS) $(CXXFLAGS) -c -o libcairotest_la-cairo-test-beos.lo `test -f 'cairo-test-beos.cpp' || echo '$(srcdir)/'`cairo-test-beos.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am


# Check tests under valgrind
# Saves log to valgrind-log
check-valgrind:
	$(MAKE) $(AM_MAKEFLAGS) check TESTS_ENVIRONMENT='$(TESTS_ENVIRONMENT) $(top_srcdir)/libtool --mode=execute valgrind $(VALGRIND_FLAGS)' 2>&1 | tee valgrind-log

# Re-checks all failed tests, i.e. tests with a log file that has a failure
recheck:
	@echo Re-checking failed tests
	@$(MAKE) $(AM_MAKEFLAGS) $(recheck)

# Checks tests and creates index.html.
# Target doesn't fail if tests fail.
test:
	@$(MAKE) $(AM_MAKEFLAGS) check; \
	$(MAKE) $(AM_MAKEFLAGS) html

# Re-checks tests and creates index.html.
# Target doesn't fail if tests fail.
retest:
	@TESTS="$(FAILED_TESTS)"; \
	$(MAKE) $(AM_MAKEFLAGS) TESTS="$$TESTS" check; \
	$(MAKE) $(AM_MAKEFLAGS) TESTS="$$TESTS" html

# Make index.html with no dependency tracking.
html:
	@echo Creating index.html
	@perl $(srcdir)/make-html.pl $(TESTS:=.log) > index.html

# Make index.html with no dependency tracking, containing only the failed tests.
rehtml:
	@$(MAKE) $(AM_MAKEFLAGS) TESTS="$(FAILED_TESTS)" html

$(TESTS): $(SUPPORT_PROGS)

%.log: %
	-./$<

$(NOLOG_TESTS_LOG):
	echo dummy > $@

index.html: $(srcdir)/make-html.pl $(TESTS:=.log)
	@echo Creating index.html
	@perl $^ > $@

# Identify identical reference images
check-ref-dups:
	@sha1sum *-ref.png > ref.hash
	@join ref.hash ref.hash | grep -v -E '( .*-ref.png).*\1' | cut -d' ' -f 1-2 | sort -u

.PHONY: check-valgrind test recheck retest html rehtml check-ref-dups
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
