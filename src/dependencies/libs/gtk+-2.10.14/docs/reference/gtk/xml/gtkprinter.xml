<refentry id="GtkPrinter">
<refmeta>
<refentrytitle role="top_of_page">GtkPrinter</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GtkPrinter</refname>
<refpurpose>Represents a printer</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>
<anchor id="GtkPrintBackend"/>
<synopsis>

#include &lt;gtk/gtk.h&gt;


                    <link linkend="GtkPrinter-struct">GtkPrinter</link>;
                    <link linkend="GtkPrintBackend-struct">GtkPrintBackend</link>;
<link linkend="GtkPrinter">GtkPrinter</link>*         <link linkend="gtk-printer-new">gtk_printer_new</link>                     (const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="GtkPrintBackend">GtkPrintBackend</link> *backend,
                                                         <link linkend="gboolean">gboolean</link> virtual_);
<link linkend="GtkPrintBackend">GtkPrintBackend</link>*    <link linkend="gtk-printer-get-backend">gtk_printer_get_backend</link>             (<link linkend="GtkPrinter">GtkPrinter</link> *printer);
const <link linkend="gchar">gchar</link>*        <link linkend="gtk-printer-get-name">gtk_printer_get_name</link>                (<link linkend="GtkPrinter">GtkPrinter</link> *printer);
const <link linkend="gchar">gchar</link>*        <link linkend="gtk-printer-get-state-message">gtk_printer_get_state_message</link>       (<link linkend="GtkPrinter">GtkPrinter</link> *printer);
const <link linkend="gchar">gchar</link>*        <link linkend="gtk-printer-get-description">gtk_printer_get_description</link>         (<link linkend="GtkPrinter">GtkPrinter</link> *printer);
const <link linkend="gchar">gchar</link>*        <link linkend="gtk-printer-get-location">gtk_printer_get_location</link>            (<link linkend="GtkPrinter">GtkPrinter</link> *printer);
const <link linkend="gchar">gchar</link>*        <link linkend="gtk-printer-get-icon-name">gtk_printer_get_icon_name</link>           (<link linkend="GtkPrinter">GtkPrinter</link> *printer);
<link linkend="gint">gint</link>                <link linkend="gtk-printer-get-job-count">gtk_printer_get_job_count</link>           (<link linkend="GtkPrinter">GtkPrinter</link> *printer);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-printer-is-active">gtk_printer_is_active</link>               (<link linkend="GtkPrinter">GtkPrinter</link> *printer);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-printer-is-virtual">gtk_printer_is_virtual</link>              (<link linkend="GtkPrinter">GtkPrinter</link> *printer);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-printer-is-default">gtk_printer_is_default</link>              (<link linkend="GtkPrinter">GtkPrinter</link> *printer);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-printer-accepts-ps">gtk_printer_accepts_ps</link>              (<link linkend="GtkPrinter">GtkPrinter</link> *printer);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-printer-accepts-pdf">gtk_printer_accepts_pdf</link>             (<link linkend="GtkPrinter">GtkPrinter</link> *printer);
<link linkend="gint">gint</link>                <link linkend="gtk-printer-compare">gtk_printer_compare</link>                 (<link linkend="GtkPrinter">GtkPrinter</link> *a,
                                                         <link linkend="GtkPrinter">GtkPrinter</link> *b);
<link linkend="gboolean">gboolean</link>            (<link linkend="GtkPrinterFunc">*GtkPrinterFunc</link>)                   (<link linkend="GtkPrinter">GtkPrinter</link> *printer,
                                                         <link linkend="gpointer">gpointer</link> data);
<link linkend="void">void</link>                <link linkend="gtk-enumerate-printers">gtk_enumerate_printers</link>              (<link linkend="GtkPrinterFunc">GtkPrinterFunc</link> func,
                                                         <link linkend="gpointer">gpointer</link> data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="gboolean">gboolean</link> wait);


</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----GtkPrinter
</synopsis>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----GtkPrintBackend
</synopsis>

</refsect1>





<refsect1 role="properties">
<title role="properties.title">Properties</title>
<synopsis>

  <link linkend="GtkPrinter--accepts-pdf">accepts-pdf</link>              <link linkend="gboolean">gboolean</link>              : Read / Write / Construct Only
  <link linkend="GtkPrinter--accepts-ps">accepts-ps</link>               <link linkend="gboolean">gboolean</link>              : Read / Write / Construct Only
  <link linkend="GtkPrinter--backend">backend</link>                  <link linkend="GtkPrintBackend">GtkPrintBackend</link>       : Read / Write / Construct Only
  <link linkend="GtkPrinter--icon-name">icon-name</link>                <link linkend="gchararray">gchararray</link>            : Read
  <link linkend="GtkPrinter--is-virtual">is-virtual</link>               <link linkend="gboolean">gboolean</link>              : Read / Write / Construct Only
  <link linkend="GtkPrinter--job-count">job-count</link>                <link linkend="gint">gint</link>                  : Read
  <link linkend="GtkPrinter--location">location</link>                 <link linkend="gchararray">gchararray</link>            : Read
  <link linkend="GtkPrinter--name">name</link>                     <link linkend="gchararray">gchararray</link>            : Read / Write / Construct Only
  <link linkend="GtkPrinter--state-message">state-message</link>            <link linkend="gchararray">gchararray</link>            : Read
</synopsis>
</refsect1>

<refsect1 role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>

  <link linkend="GtkPrinter-details-acquired">details-acquired</link>                               : Run Last
</synopsis>
</refsect1>


<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
A <link linkend="GtkPrinter"><type>GtkPrinter</type></link> object represents a printer. You only need to 
deal directly with printers if you use the non-portable 
<link linkend="GtkPrintUnixDialog"><type>GtkPrintUnixDialog</type></link> API. 
</para>
<para>
A <link linkend="GtkPrinter"><type>GtkPrinter</type></link> allows to get status information about the printer, 
such as its description, its location, the number of queued jobs, 
etc. Most importantly, a <link linkend="GtkPrinter"><type>GtkPrinter</type></link> object can be used to create
a <link linkend="GtkPrintJob"><type>GtkPrintJob</type></link> object, which lets you print to the printer.
</para>

<para>
Printing support was added in GTK+ 2.10.
</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="GtkPrinter-struct" role="struct"/>GtkPrinter</title>
<indexterm><primary>GtkPrinter</primary></indexterm><programlisting>typedef struct _GtkPrinter GtkPrinter;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GtkPrintBackend-struct" role="struct"/>GtkPrintBackend</title>
<indexterm><primary>GtkPrintBackend</primary></indexterm><programlisting>typedef struct _GtkPrintBackend GtkPrintBackend;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gtk-printer-new" role="function" condition="since:2.10"/>gtk_printer_new ()</title>
<indexterm role="2.10"><primary>gtk_printer_new</primary></indexterm><programlisting><link linkend="GtkPrinter">GtkPrinter</link>*         gtk_printer_new                     (const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="GtkPrintBackend">GtkPrintBackend</link> *backend,
                                                         <link linkend="gboolean">gboolean</link> virtual_);</programlisting>
<para>
Creates a new <link linkend="GtkPrinter"><type>GtkPrinter</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> the name of the printer
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>backend</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrintBackend"><type>GtkPrintBackend</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>virtual_</parameter>&nbsp;:</term>
<listitem><simpara> whether the printer is virtual
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GtkPrinter"><type>GtkPrinter</type></link>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-printer-get-backend" role="function" condition="since:2.10"/>gtk_printer_get_backend ()</title>
<indexterm role="2.10"><primary>gtk_printer_get_backend</primary></indexterm><programlisting><link linkend="GtkPrintBackend">GtkPrintBackend</link>*    gtk_printer_get_backend             (<link linkend="GtkPrinter">GtkPrinter</link> *printer);</programlisting>
<para>
Returns the backend of the printer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>printer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrinter"><type>GtkPrinter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the backend of <parameter>printer</parameter>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-printer-get-name" role="function" condition="since:2.10"/>gtk_printer_get_name ()</title>
<indexterm role="2.10"><primary>gtk_printer_get_name</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        gtk_printer_get_name                (<link linkend="GtkPrinter">GtkPrinter</link> *printer);</programlisting>
<para>
Returns the name of the printer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>printer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrinter"><type>GtkPrinter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the name of <parameter>printer</parameter>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-printer-get-state-message" role="function" condition="since:2.10"/>gtk_printer_get_state_message ()</title>
<indexterm role="2.10"><primary>gtk_printer_get_state_message</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        gtk_printer_get_state_message       (<link linkend="GtkPrinter">GtkPrinter</link> *printer);</programlisting>
<para>
Returns the state message describing the current state
of the printer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>printer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrinter"><type>GtkPrinter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the state message of <parameter>printer</parameter>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-printer-get-description" role="function" condition="since:2.10"/>gtk_printer_get_description ()</title>
<indexterm role="2.10"><primary>gtk_printer_get_description</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        gtk_printer_get_description         (<link linkend="GtkPrinter">GtkPrinter</link> *printer);</programlisting>
<para>
Gets the description of the printer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>printer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrinter"><type>GtkPrinter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the description of <parameter>printer</parameter>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-printer-get-location" role="function" condition="since:2.10"/>gtk_printer_get_location ()</title>
<indexterm role="2.10"><primary>gtk_printer_get_location</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        gtk_printer_get_location            (<link linkend="GtkPrinter">GtkPrinter</link> *printer);</programlisting>
<para>
Returns a  description of the location of the printer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>printer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrinter"><type>GtkPrinter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the location of <parameter>printer</parameter>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-printer-get-icon-name" role="function" condition="since:2.10"/>gtk_printer_get_icon_name ()</title>
<indexterm role="2.10"><primary>gtk_printer_get_icon_name</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        gtk_printer_get_icon_name           (<link linkend="GtkPrinter">GtkPrinter</link> *printer);</programlisting>
<para>
Gets the name of the icon to use for the printer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>printer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrinter"><type>GtkPrinter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the icon name for <parameter>printer</parameter>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-printer-get-job-count" role="function" condition="since:2.10"/>gtk_printer_get_job_count ()</title>
<indexterm role="2.10"><primary>gtk_printer_get_job_count</primary></indexterm><programlisting><link linkend="gint">gint</link>                gtk_printer_get_job_count           (<link linkend="GtkPrinter">GtkPrinter</link> *printer);</programlisting>
<para>
Gets the number of jobs currently queued on the printer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>printer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrinter"><type>GtkPrinter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the number of jobs on <parameter>printer</parameter>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-printer-is-active" role="function" condition="since:2.10"/>gtk_printer_is_active ()</title>
<indexterm role="2.10"><primary>gtk_printer_is_active</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_printer_is_active               (<link linkend="GtkPrinter">GtkPrinter</link> *printer);</programlisting>
<para>
Returns whether the printer is currently active (i.e. 
accepts new jobs).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>printer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrinter"><type>GtkPrinter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>printer</parameter> is active

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-printer-is-virtual" role="function" condition="since:2.10"/>gtk_printer_is_virtual ()</title>
<indexterm role="2.10"><primary>gtk_printer_is_virtual</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_printer_is_virtual              (<link linkend="GtkPrinter">GtkPrinter</link> *printer);</programlisting>
<para>
Returns whether the printer is virtual (i.e. does not
represent actual printer hardware, but something like 
a CUPS class).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>printer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrinter"><type>GtkPrinter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>printer</parameter> is virtual

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-printer-is-default" role="function" condition="since:2.10"/>gtk_printer_is_default ()</title>
<indexterm role="2.10"><primary>gtk_printer_is_default</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_printer_is_default              (<link linkend="GtkPrinter">GtkPrinter</link> *printer);</programlisting>
<para>
Returns whether the printer is the default printer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>printer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrinter"><type>GtkPrinter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>printer</parameter> is the default

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-printer-accepts-ps" role="function" condition="since:2.10"/>gtk_printer_accepts_ps ()</title>
<indexterm role="2.10"><primary>gtk_printer_accepts_ps</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_printer_accepts_ps              (<link linkend="GtkPrinter">GtkPrinter</link> *printer);</programlisting>
<para>
Returns whether the printer accepts input in
PostScript format.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>printer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrinter"><type>GtkPrinter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>printer</parameter> accepts PostScript

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-printer-accepts-pdf" role="function" condition="since:2.10"/>gtk_printer_accepts_pdf ()</title>
<indexterm role="2.10"><primary>gtk_printer_accepts_pdf</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_printer_accepts_pdf             (<link linkend="GtkPrinter">GtkPrinter</link> *printer);</programlisting>
<para>
Returns whether the printer accepts input in
PDF format.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>printer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrinter"><type>GtkPrinter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>printer</parameter> accepts PDF

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-printer-compare" role="function" condition="since:2.10"/>gtk_printer_compare ()</title>
<indexterm role="2.10"><primary>gtk_printer_compare</primary></indexterm><programlisting><link linkend="gint">gint</link>                gtk_printer_compare                 (<link linkend="GtkPrinter">GtkPrinter</link> *a,
                                                         <link linkend="GtkPrinter">GtkPrinter</link> *b);</programlisting>
<para>
Compares two printers.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>a</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrinter"><type>GtkPrinter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&nbsp;:</term>
<listitem><simpara> another <link linkend="GtkPrinter"><type>GtkPrinter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 if the printer match, a negative value if <parameter>a</parameter> &lt; <parameter>b</parameter>, 
  or a positive value if <parameter>a</parameter> &gt; <parameter>b</parameter>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="GtkPrinterFunc" role="function"/>GtkPrinterFunc ()</title>
<indexterm><primary>GtkPrinterFunc</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            (*GtkPrinterFunc)                   (<link linkend="GtkPrinter">GtkPrinter</link> *printer,
                                                         <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>
The type of function passed to <link linkend="gtk-enumerate-printers"><function>gtk_enumerate_printers()</function></link>.
Note that you need to ref <parameter>printer</parameter>, if you want to keep
a reference to it after the function has returned.
</para><variablelist role="params">
<varlistentry><term><parameter>printer</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkPrinter"><type>GtkPrinter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>user data passed to <link linkend="gtk-enumerate-printers"><function>gtk_enumerate_printers()</function></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara><link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to stop the enumeration, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to continue


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-enumerate-printers" role="function" condition="since:2.10"/>gtk_enumerate_printers ()</title>
<indexterm role="2.10"><primary>gtk_enumerate_printers</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_enumerate_printers              (<link linkend="GtkPrinterFunc">GtkPrinterFunc</link> func,
                                                         <link linkend="gpointer">gpointer</link> data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="gboolean">gboolean</link> wait);</programlisting>
<para>
Calls a function for all <link linkend="GtkPrinter"><type>GtkPrinter</type></link><!-- -->s. 
If <parameter>func</parameter> returns <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, the enumeration is stopped.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>func</parameter>&nbsp;:</term>
<listitem><simpara> a function to call for each printer
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> user data to pass to <parameter>func</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&nbsp;:</term>
<listitem><simpara> function to call if <parameter>data</parameter> is no longer needed
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>wait</parameter>&nbsp;:</term>
<listitem><simpara> if <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, wait in a recursive mainloop until
   all printers are enumerated; otherwise return early
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>

</refsect1>
<refsect1 role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2><title><anchor id="GtkPrinter--accepts-pdf"/>The :<literal>accepts-pdf</literal> property</title>
<indexterm><primary>GtkPrinter:accepts-pdf</primary></indexterm><programlisting>  accepts-pdf              <link linkend="gboolean">gboolean</link>              : Read / Write / Construct Only</programlisting>
<para>TRUE if this printer can accept PDF.</para><para>Default value: TRUE</para>
</refsect2>
<refsect2><title><anchor id="GtkPrinter--accepts-ps"/>The :<literal>accepts-ps</literal> property</title>
<indexterm><primary>GtkPrinter:accepts-ps</primary></indexterm><programlisting>  accepts-ps               <link linkend="gboolean">gboolean</link>              : Read / Write / Construct Only</programlisting>
<para>TRUE if this printer can accept PostScript.</para><para>Default value: TRUE</para>
</refsect2>
<refsect2><title><anchor id="GtkPrinter--backend"/>The :<literal>backend</literal> property</title>
<indexterm><primary>GtkPrinter:backend</primary></indexterm><programlisting>  backend                  <link linkend="GtkPrintBackend">GtkPrintBackend</link>       : Read / Write / Construct Only</programlisting>
<para>Backend for the printer.</para></refsect2>
<refsect2><title><anchor id="GtkPrinter--icon-name"/>The :<literal>icon-name</literal> property</title>
<indexterm><primary>GtkPrinter:icon-name</primary></indexterm><programlisting>  icon-name                <link linkend="gchararray">gchararray</link>            : Read</programlisting>
<para>The icon name to use for the printer.</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="GtkPrinter--is-virtual"/>The :<literal>is-virtual</literal> property</title>
<indexterm><primary>GtkPrinter:is-virtual</primary></indexterm><programlisting>  is-virtual               <link linkend="gboolean">gboolean</link>              : Read / Write / Construct Only</programlisting>
<para>FALSE if this represents a real hardware printer.</para><para>Default value: FALSE</para>
</refsect2>
<refsect2><title><anchor id="GtkPrinter--job-count"/>The :<literal>job-count</literal> property</title>
<indexterm><primary>GtkPrinter:job-count</primary></indexterm><programlisting>  job-count                <link linkend="gint">gint</link>                  : Read</programlisting>
<para>Number of jobs queued in the printer.</para><para>Allowed values: &gt;= 0</para>
<para>Default value: 0</para>
</refsect2>
<refsect2><title><anchor id="GtkPrinter--location"/>The :<literal>location</literal> property</title>
<indexterm><primary>GtkPrinter:location</primary></indexterm><programlisting>  location                 <link linkend="gchararray">gchararray</link>            : Read</programlisting>
<para>The location of the printer.</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="GtkPrinter--name"/>The :<literal>name</literal> property</title>
<indexterm><primary>GtkPrinter:name</primary></indexterm><programlisting>  name                     <link linkend="gchararray">gchararray</link>            : Read / Write / Construct Only</programlisting>
<para>Name of the printer.</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="GtkPrinter--state-message"/>The :<literal>state-message</literal> property</title>
<indexterm><primary>GtkPrinter:state-message</primary></indexterm><programlisting>  state-message            <link linkend="gchararray">gchararray</link>            : Read</programlisting>
<para>String giving the current state of the printer.</para><para>Default value: NULL</para>
</refsect2>

</refsect1>

<refsect1 role="signals">
<title role="signals.title">Signal Details</title>
<refsect2><title><anchor id="GtkPrinter-details-acquired"/>The <literal>::details-acquired</literal> signal</title>
<indexterm role="2.10"><primary>GtkPrinter::details-acquired</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GtkPrinter">GtkPrinter</link> *printer,
                                                        <link linkend="gboolean">gboolean</link>    success,
                                                        <link linkend="gpointer">gpointer</link>    user_data)      : Run Last</programlisting>
<para>
Gets emitted in response to a request for detailed information
about a printer from the print backend. The <parameter>success</parameter> parameter
indicates if the information was actually obtained.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>printer</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GtkPrinter"><type>GtkPrinter</type></link> on which the signal is emitted
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>success</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the details were successfully acquired
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist><para>Since  2.10
</para></refsect2>
</refsect1>



</refentry>
