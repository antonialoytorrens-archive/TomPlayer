<refentry id="GtkPrintJob">
<refmeta>
<refentrytitle role="top_of_page">GtkPrintJob</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GtkPrintJob</refname>
<refpurpose>Represents a print job</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;gtk/gtk.h&gt;


                    <link linkend="GtkPrintJob-struct">GtkPrintJob</link>;
<link linkend="void">void</link>                (<link linkend="GtkPrintJobCompleteFunc">*GtkPrintJobCompleteFunc</link>)          (<link linkend="GtkPrintJob">GtkPrintJob</link> *print_job,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GError">GError</link> *error);
<link linkend="GtkPrintJob">GtkPrintJob</link>*        <link linkend="gtk-print-job-new">gtk_print_job_new</link>                   (const <link linkend="gchar">gchar</link> *title,
                                                         <link linkend="GtkPrinter">GtkPrinter</link> *printer,
                                                         <link linkend="GtkPrintSettings">GtkPrintSettings</link> *settings,
                                                         <link linkend="GtkPageSetup">GtkPageSetup</link> *page_setup);
<link linkend="GtkPrintSettings">GtkPrintSettings</link>*   <link linkend="gtk-print-job-get-settings">gtk_print_job_get_settings</link>          (<link linkend="GtkPrintJob">GtkPrintJob</link> *job);
<link linkend="GtkPrinter">GtkPrinter</link>*         <link linkend="gtk-print-job-get-printer">gtk_print_job_get_printer</link>           (<link linkend="GtkPrintJob">GtkPrintJob</link> *job);
const <link linkend="gchar">gchar</link>*        <link linkend="gtk-print-job-get-title">gtk_print_job_get_title</link>             (<link linkend="GtkPrintJob">GtkPrintJob</link> *job);
<link linkend="GtkPrintStatus">GtkPrintStatus</link>      <link linkend="gtk-print-job-get-status">gtk_print_job_get_status</link>            (<link linkend="GtkPrintJob">GtkPrintJob</link> *job);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-print-job-set-source-file">gtk_print_job_set_source_file</link>       (<link linkend="GtkPrintJob">GtkPrintJob</link> *job,
                                                         const <link linkend="gchar">gchar</link> *filename,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="cairo-surface-t">cairo_surface_t</link>*    <link linkend="gtk-print-job-get-surface">gtk_print_job_get_surface</link>           (<link linkend="GtkPrintJob">GtkPrintJob</link> *job,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="void">void</link>                <link linkend="gtk-print-job-send">gtk_print_job_send</link>                  (<link linkend="GtkPrintJob">GtkPrintJob</link> *job,
                                                         <link linkend="GtkPrintJobCompleteFunc">GtkPrintJobCompleteFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> dnotify);
<link linkend="void">void</link>                <link linkend="gtk-print-job-set-track-print-status">gtk_print_job_set_track_print_status</link>
                                                        (<link linkend="GtkPrintJob">GtkPrintJob</link> *job,
                                                         <link linkend="gboolean">gboolean</link> track_status);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-print-job-get-track-print-status">gtk_print_job_get_track_print_status</link>
                                                        (<link linkend="GtkPrintJob">GtkPrintJob</link> *job);


</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----GtkPrintJob
</synopsis>

</refsect1>





<refsect1 role="properties">
<title role="properties.title">Properties</title>
<synopsis>

  <link linkend="GtkPrintJob--page-setup">page-setup</link>               <link linkend="GtkPageSetup">GtkPageSetup</link>          : Read / Write / Construct Only
  <link linkend="GtkPrintJob--printer">printer</link>                  <link linkend="GtkPrinter">GtkPrinter</link>            : Read / Write / Construct Only
  <link linkend="GtkPrintJob--settings">settings</link>                 <link linkend="GtkPrintSettings">GtkPrintSettings</link>      : Read / Write / Construct Only
  <link linkend="GtkPrintJob--title">title</link>                    <link linkend="gchararray">gchararray</link>            : Read / Write / Construct Only
  <link linkend="GtkPrintJob--track-print-status">track-print-status</link>       <link linkend="gboolean">gboolean</link>              : Read / Write
</synopsis>
</refsect1>

<refsect1 role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>

  <link linkend="GtkPrintJob-status-changed">status-changed</link>                                 : Run Last
</synopsis>
</refsect1>


<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
A <link linkend="GtkPrintJob"><type>GtkPrintJob</type></link> object represents a job that is sent to a
printer. You only need to deal directly with print jobs if 
you use the non-portable <link linkend="GtkPrintUnixDialog"><type>GtkPrintUnixDialog</type></link> API. 
</para>
<para>
Use <link linkend="gtk-print-job-get-surface"><function>gtk_print_job_get_surface()</function></link> to obtain the cairo surface
onto which the pages must be drawn. Use <link linkend="gtk-print-job-send"><function>gtk_print_job_send()</function></link>
to send the finished job to the printer. If you don't use cairo
<link linkend="GtkPrintJob"><type>GtkPrintJob</type></link> also supports printing of manually generated postscript,
via <link linkend="gtk-print-job-set-source-file"><function>gtk_print_job_set_source_file()</function></link>.
<!-- FIXME more details needed here -->
</para>
<!-- FIXME examples ? -->

<para>
Printing support was added in GTK+ 2.10.
</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="GtkPrintJob-struct" role="struct"/>GtkPrintJob</title>
<indexterm><primary>GtkPrintJob</primary></indexterm><programlisting>typedef struct _GtkPrintJob GtkPrintJob;</programlisting>
<para>
The GtkPrintJob struct contains only private members
and should not be directly accessed.
</para></refsect2>
<refsect2>
<title><anchor id="GtkPrintJobCompleteFunc" role="function"/>GtkPrintJobCompleteFunc ()</title>
<indexterm><primary>GtkPrintJobCompleteFunc</primary></indexterm><programlisting><link linkend="void">void</link>                (*GtkPrintJobCompleteFunc)          (<link linkend="GtkPrintJob">GtkPrintJob</link> *print_job,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GError">GError</link> *error);</programlisting>
<para>
The type of callback that is passed to <link linkend="gtk-print-job-send"><function>gtk_print_job_send()</function></link>.
It is called when the print job has been completely sent.
</para><variablelist role="params">
<varlistentry><term><parameter>print_job</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GtkPrintJob"><type>GtkPrintJob</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data that has been passed to <link linkend="gtk-print-job-send"><function>gtk_print_job_send()</function></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GError"><type>GError</type></link> that contains error information if the sending
  of the print job failed, otherwise <link linkend="NULL:CAPS"><literal>NULL</literal></link>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-print-job-new" role="function" condition="since:2.10"/>gtk_print_job_new ()</title>
<indexterm role="2.10"><primary>gtk_print_job_new</primary></indexterm><programlisting><link linkend="GtkPrintJob">GtkPrintJob</link>*        gtk_print_job_new                   (const <link linkend="gchar">gchar</link> *title,
                                                         <link linkend="GtkPrinter">GtkPrinter</link> *printer,
                                                         <link linkend="GtkPrintSettings">GtkPrintSettings</link> *settings,
                                                         <link linkend="GtkPageSetup">GtkPageSetup</link> *page_setup);</programlisting>
<para>
Creates a new <link linkend="GtkPrintJob"><type>GtkPrintJob</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>title</parameter>&nbsp;:</term>
<listitem><simpara> the job title
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>printer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrinter"><type>GtkPrinter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>settings</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrintSettings"><type>GtkPrintSettings</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>page_setup</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPageSetup"><type>GtkPageSetup</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GtkPrintJob"><type>GtkPrintJob</type></link>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-print-job-get-settings" role="function" condition="since:2.10"/>gtk_print_job_get_settings ()</title>
<indexterm role="2.10"><primary>gtk_print_job_get_settings</primary></indexterm><programlisting><link linkend="GtkPrintSettings">GtkPrintSettings</link>*   gtk_print_job_get_settings          (<link linkend="GtkPrintJob">GtkPrintJob</link> *job);</programlisting>
<para>
Gets the <link linkend="GtkPrintSettings"><type>GtkPrintSettings</type></link> of the print job.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>job</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrintJob"><type>GtkPrintJob</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the settings of <parameter>job</parameter>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-print-job-get-printer" role="function" condition="since:2.10"/>gtk_print_job_get_printer ()</title>
<indexterm role="2.10"><primary>gtk_print_job_get_printer</primary></indexterm><programlisting><link linkend="GtkPrinter">GtkPrinter</link>*         gtk_print_job_get_printer           (<link linkend="GtkPrintJob">GtkPrintJob</link> *job);</programlisting>
<para>
Gets the <link linkend="GtkPrinter"><type>GtkPrinter</type></link> of the print job.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>job</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrintJob"><type>GtkPrintJob</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the printer of <parameter>job</parameter>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-print-job-get-title" role="function" condition="since:2.10"/>gtk_print_job_get_title ()</title>
<indexterm role="2.10"><primary>gtk_print_job_get_title</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        gtk_print_job_get_title             (<link linkend="GtkPrintJob">GtkPrintJob</link> *job);</programlisting>
<para>
Gets the job title.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>job</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrintJob"><type>GtkPrintJob</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the title of <parameter>job</parameter>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-print-job-get-status" role="function" condition="since:2.10"/>gtk_print_job_get_status ()</title>
<indexterm role="2.10"><primary>gtk_print_job_get_status</primary></indexterm><programlisting><link linkend="GtkPrintStatus">GtkPrintStatus</link>      gtk_print_job_get_status            (<link linkend="GtkPrintJob">GtkPrintJob</link> *job);</programlisting>
<para>
Gets the status of the print job.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>job</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrintJob"><type>GtkPrintJob</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the status of <parameter>job</parameter>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-print-job-set-source-file" role="function" condition="since:2.10"/>gtk_print_job_set_source_file ()</title>
<indexterm role="2.10"><primary>gtk_print_job_set_source_file</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_print_job_set_source_file       (<link linkend="GtkPrintJob">GtkPrintJob</link> *job,
                                                         const <link linkend="gchar">gchar</link> *filename,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Make the <link linkend="GtkPrintJob"><type>GtkPrintJob</type></link> send an existing document to the 
printing system. The file can be in any format understood
by the platforms printing system (typically PostScript,
but on many platforms PDF may work too). See 
<link linkend="gtk-printer-accepts-pdf"><function>gtk_printer_accepts_pdf()</function></link> and <link linkend="gtk-printer-accepts-ps"><function>gtk_printer_accepts_ps()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>job</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrintJob"><type>GtkPrintJob</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> the file to be printed
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> return location for errors
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if an error occurred

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-print-job-get-surface" role="function" condition="since:2.10"/>gtk_print_job_get_surface ()</title>
<indexterm role="2.10"><primary>gtk_print_job_get_surface</primary></indexterm><programlisting><link linkend="cairo-surface-t">cairo_surface_t</link>*    gtk_print_job_get_surface           (<link linkend="GtkPrintJob">GtkPrintJob</link> *job,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Gets a cairo surface onto which the pages of
the print job should be rendered.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>job</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrintJob"><type>GtkPrintJob</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> return location for errors, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the cairo surface of <parameter>job</parameter>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-print-job-send" role="function" condition="since:2.10"/>gtk_print_job_send ()</title>
<indexterm role="2.10"><primary>gtk_print_job_send</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_print_job_send                  (<link linkend="GtkPrintJob">GtkPrintJob</link> *job,
                                                         <link linkend="GtkPrintJobCompleteFunc">GtkPrintJobCompleteFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> dnotify);</programlisting>
<para>
Sends the print job off to the printer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>job</parameter>&nbsp;:</term>
<listitem><simpara> a GtkPrintJob
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> function to call when the job completes or an error occurs
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> user data that gets passed to <parameter>callback</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dnotify</parameter>&nbsp;:</term>
<listitem><simpara> destroy notify for <parameter>user_data</parameter>
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-print-job-set-track-print-status" role="function" condition="since:2.10"/>gtk_print_job_set_track_print_status ()</title>
<indexterm role="2.10"><primary>gtk_print_job_set_track_print_status</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_print_job_set_track_print_status
                                                        (<link linkend="GtkPrintJob">GtkPrintJob</link> *job,
                                                         <link linkend="gboolean">gboolean</link> track_status);</programlisting>
<para>
If track_status is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, the print job will try to continue report
on the status of the print job in the printer queues and printer. This
can allow your application to show things like "out of paper" issues,
and when the print job actually reaches the printer.
</para>
<para>
This function is often implemented using some form of polling, so it should
not be enabled unless needed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>job</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrintJob"><type>GtkPrintJob</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>track_status</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to track status after printing
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-print-job-get-track-print-status" role="function" condition="since:2.10"/>gtk_print_job_get_track_print_status ()</title>
<indexterm role="2.10"><primary>gtk_print_job_get_track_print_status</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_print_job_get_track_print_status
                                                        (<link linkend="GtkPrintJob">GtkPrintJob</link> *job);</programlisting>
<para>
Returns wheter jobs will be tracked after printing.
For details, see <link linkend="gtk-print-job-set-track-print-status"><function>gtk_print_job_set_track_print_status()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>job</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPrintJob"><type>GtkPrintJob</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if print job status will be reported after printing

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>

</refsect1>
<refsect1 role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2><title><anchor id="GtkPrintJob--page-setup"/>The :<literal>page-setup</literal> property</title>
<indexterm><primary>GtkPrintJob:page-setup</primary></indexterm><programlisting>  page-setup               <link linkend="GtkPageSetup">GtkPageSetup</link>          : Read / Write / Construct Only</programlisting>
<para>Page Setup.</para></refsect2>
<refsect2><title><anchor id="GtkPrintJob--printer"/>The :<literal>printer</literal> property</title>
<indexterm><primary>GtkPrintJob:printer</primary></indexterm><programlisting>  printer                  <link linkend="GtkPrinter">GtkPrinter</link>            : Read / Write / Construct Only</programlisting>
<para>Printer to print the job to.</para></refsect2>
<refsect2><title><anchor id="GtkPrintJob--settings"/>The :<literal>settings</literal> property</title>
<indexterm><primary>GtkPrintJob:settings</primary></indexterm><programlisting>  settings                 <link linkend="GtkPrintSettings">GtkPrintSettings</link>      : Read / Write / Construct Only</programlisting>
<para>Printer settings.</para></refsect2>
<refsect2><title><anchor id="GtkPrintJob--title"/>The :<literal>title</literal> property</title>
<indexterm><primary>GtkPrintJob:title</primary></indexterm><programlisting>  title                    <link linkend="gchararray">gchararray</link>            : Read / Write / Construct Only</programlisting>
<para>Title of the print job.</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="GtkPrintJob--track-print-status"/>The :<literal>track-print-status</literal> property</title>
<indexterm><primary>GtkPrintJob:track-print-status</primary></indexterm><programlisting>  track-print-status       <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>TRUE if the print job will continue to emit status-changed signals after the print data has been sent to the printer or print server.</para><para>Default value: FALSE</para>
</refsect2>

</refsect1>

<refsect1 role="signals">
<title role="signals.title">Signal Details</title>
<refsect2><title><anchor id="GtkPrintJob-status-changed"/>The <literal>::status-changed</literal> signal</title>
<indexterm role="2.10"><primary>GtkPrintJob::status-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GtkPrintJob">GtkPrintJob</link> *job,
                                                        <link linkend="gpointer">gpointer</link>     user_data)      : Run Last</programlisting>
<para>
Gets emitted when the status of a job changes. The signal handler
can use <link linkend="gtk-print-job-get-status"><function>gtk_print_job_get_status()</function></link> to obtain the new status.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>job</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GtkPrintJob"><type>GtkPrintJob</type></link> object on which the signal was emitted
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist><para>Since  2.10
</para></refsect2>
</refsect1>



</refentry>
