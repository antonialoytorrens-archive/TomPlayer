<refentry id="GtkToggleButton">
<refmeta>
<refentrytitle role="top_of_page">GtkToggleButton</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GtkToggleButton</refname>
<refpurpose>Create buttons which retain their state</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;gtk/gtk.h&gt;


                    <link linkend="GtkToggleButton-struct">GtkToggleButton</link>;
<link linkend="GtkWidget">GtkWidget</link>*          <link linkend="gtk-toggle-button-new">gtk_toggle_button_new</link>               (void);
<link linkend="GtkWidget">GtkWidget</link>*          <link linkend="gtk-toggle-button-new-with-label">gtk_toggle_button_new_with_label</link>    (const <link linkend="gchar">gchar</link> *label);
<link linkend="GtkWidget">GtkWidget</link>*          <link linkend="gtk-toggle-button-new-with-mnemonic">gtk_toggle_button_new_with_mnemonic</link> (const <link linkend="gchar">gchar</link> *label);
<link linkend="void">void</link>                <link linkend="gtk-toggle-button-set-mode">gtk_toggle_button_set_mode</link>          (<link linkend="GtkToggleButton">GtkToggleButton</link> *toggle_button,
                                                         <link linkend="gboolean">gboolean</link> draw_indicator);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-toggle-button-get-mode">gtk_toggle_button_get_mode</link>          (<link linkend="GtkToggleButton">GtkToggleButton</link> *toggle_button);
#define             <link linkend="gtk-toggle-button-set-state">gtk_toggle_button_set_state</link>
<link linkend="void">void</link>                <link linkend="gtk-toggle-button-toggled">gtk_toggle_button_toggled</link>           (<link linkend="GtkToggleButton">GtkToggleButton</link> *toggle_button);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-toggle-button-get-active">gtk_toggle_button_get_active</link>        (<link linkend="GtkToggleButton">GtkToggleButton</link> *toggle_button);
<link linkend="void">void</link>                <link linkend="gtk-toggle-button-set-active">gtk_toggle_button_set_active</link>        (<link linkend="GtkToggleButton">GtkToggleButton</link> *toggle_button,
                                                         <link linkend="gboolean">gboolean</link> is_active);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-toggle-button-get-inconsistent">gtk_toggle_button_get_inconsistent</link>  (<link linkend="GtkToggleButton">GtkToggleButton</link> *toggle_button);
<link linkend="void">void</link>                <link linkend="gtk-toggle-button-set-inconsistent">gtk_toggle_button_set_inconsistent</link>  (<link linkend="GtkToggleButton">GtkToggleButton</link> *toggle_button,
                                                         <link linkend="gboolean">gboolean</link> setting);


</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
         +----<link linkend="GtkObject">GtkObject</link>
               +----<link linkend="GtkWidget">GtkWidget</link>
                     +----<link linkend="GtkContainer">GtkContainer</link>
                           +----<link linkend="GtkBin">GtkBin</link>
                                 +----<link linkend="GtkButton">GtkButton</link>
                                       +----GtkToggleButton
                                             +----<link linkend="GtkCheckButton">GtkCheckButton</link>
</synopsis>

</refsect1>



<refsect1 role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
GtkToggleButton implements
 <link linkend="AtkImplementorIface">AtkImplementorIface</link>.</para>

</refsect1>


<refsect1 role="properties">
<title role="properties.title">Properties</title>
<synopsis>

  <link linkend="GtkToggleButton--active">active</link>                   <link linkend="gboolean">gboolean</link>              : Read / Write
  <link linkend="GtkToggleButton--draw-indicator">draw-indicator</link>           <link linkend="gboolean">gboolean</link>              : Read / Write
  <link linkend="GtkToggleButton--inconsistent">inconsistent</link>             <link linkend="gboolean">gboolean</link>              : Read / Write
</synopsis>
</refsect1>

<refsect1 role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>

  <link linkend="GtkToggleButton-toggled">toggled</link>                                        : Run First
</synopsis>
</refsect1>


<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
A <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link> is a <link linkend="GtkButton"><type>GtkButton</type></link> which will remain 'pressed-in' when
clicked. Clicking again will cause the toggle button to return to its
normal state.
</para>
<para>
A toggle button is created by calling either <link linkend="gtk-toggle-button-new"><function>gtk_toggle_button_new()</function></link> or
<link linkend="gtk-toggle-button-new-with-label"><function>gtk_toggle_button_new_with_label()</function></link>. If using the former, it is advisable to
pack a widget, (such as a <link linkend="GtkLabel"><type>GtkLabel</type></link> and/or a <link linkend="GtkPixmap"><type>GtkPixmap</type></link>), into the toggle
button's container. (See <link linkend="GtkButton"><type>GtkButton</type></link> for more information).
</para>
<para>
The state of a <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link> can be set specifically using
<link linkend="gtk-toggle-button-set-active"><function>gtk_toggle_button_set_active()</function></link>, and retrieved using
<link linkend="gtk-toggle-button-get-active"><function>gtk_toggle_button_get_active()</function></link>.
</para>
<para>
To simply switch the state of a toggle button, use gtk_toggle_button_toggled.
</para>
<example>
<title>Creating two <structname>GtkToggleButton</structname> widgets.</title>
<programlisting>

void make_toggles (void) {
   GtkWidget *dialog, *toggle1, *toggle2;

   dialog = gtk_dialog_new (<!-- -->);
   toggle1 = gtk_toggle_button_new_with_label ("Hi, i'm a toggle button.");

   /* Makes this toggle button invisible */
   gtk_toggle_button_set_mode (GTK_TOGGLE_BUTTON (toggle1), TRUE);
   
   g_signal_connect (toggle1, "toggled",
                     G_CALLBACK (output_state), NULL);
   gtk_box_pack_start (GTK_BOX (GTK_DIALOG (dialog)->action_area),
                       toggle1, FALSE, FALSE, 2);

   toggle2 = gtk_toggle_button_new_with_label ("Hi, i'm another toggle button.");
   gtk_toggle_button_set_mode (GTK_TOGGLE_BUTTON (toggle2), FALSE);
   g_signal_connect (toggle2, "toggled",
                     G_CALLBACK (output_state), NULL);
   gtk_box_pack_start (GTK_BOX (GTK_DIALOG (dialog)->action_area),
                       toggle2, FALSE, FALSE, 2);

   gtk_widget_show_all (dialog);
}

</programlisting>
</example>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="GtkToggleButton-struct" role="struct"/>GtkToggleButton</title>
<indexterm><primary>GtkToggleButton</primary></indexterm><programlisting>typedef struct _GtkToggleButton GtkToggleButton;</programlisting>
<para>
The <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link> struct contains private data only, and should be manipulated using the functions below.
</para></refsect2>
<refsect2>
<title><anchor id="gtk-toggle-button-new" role="function"/>gtk_toggle_button_new ()</title>
<indexterm><primary>gtk_toggle_button_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*          gtk_toggle_button_new               (void);</programlisting>
<para>
Creates a new toggle button. A widget should be packed into the button, as in <link linkend="gtk-button-new"><function>gtk_button_new()</function></link>.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>a new toggle button.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toggle-button-new-with-label" role="function"/>gtk_toggle_button_new_with_label ()</title>
<indexterm><primary>gtk_toggle_button_new_with_label</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*          gtk_toggle_button_new_with_label    (const <link linkend="gchar">gchar</link> *label);</programlisting>
<para>
Creates a new toggle button with a text label.
</para><variablelist role="params">
<varlistentry><term><parameter>label</parameter>&nbsp;:</term>
<listitem><simpara>a string containing the message to be placed in the toggle button.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>a new toggle button.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toggle-button-new-with-mnemonic" role="function"/>gtk_toggle_button_new_with_mnemonic ()</title>
<indexterm><primary>gtk_toggle_button_new_with_mnemonic</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*          gtk_toggle_button_new_with_mnemonic (const <link linkend="gchar">gchar</link> *label);</programlisting>
<para>
Creates a new <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link> containing a label. The label
will be created using <link linkend="gtk-label-new-with-mnemonic"><function>gtk_label_new_with_mnemonic()</function></link>, so underscores
in <parameter>label</parameter> indicate the mnemonic for the button.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>label</parameter>&nbsp;:</term>
<listitem><simpara> the text of the button, with an underscore in front of the
        mnemonic character
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toggle-button-set-mode" role="function"/>gtk_toggle_button_set_mode ()</title>
<indexterm><primary>gtk_toggle_button_set_mode</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_toggle_button_set_mode          (<link linkend="GtkToggleButton">GtkToggleButton</link> *toggle_button,
                                                         <link linkend="gboolean">gboolean</link> draw_indicator);</programlisting>
<para>
Sets whether the button is displayed as a separate indicator and label.
You can call this function on a checkbutton or a radiobutton with
<parameter>draw_indicator</parameter> = <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to make the button look like a normal button
</para>
<para>
This function only affects instances of classes like <link linkend="GtkCheckButton"><type>GtkCheckButton</type></link>
and <link linkend="GtkRadioButton"><type>GtkRadioButton</type></link> that derive from <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link>,
not instances of <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link> itself.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>toggle_button</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>draw_indicator</parameter>&nbsp;:</term>
<listitem><simpara> if <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, draw the button as a separate indicator
and label; if <link linkend="FALSE:CAPS"><literal>FALSE</literal></link>, draw the button like a normal button
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toggle-button-get-mode" role="function"/>gtk_toggle_button_get_mode ()</title>
<indexterm><primary>gtk_toggle_button_get_mode</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_toggle_button_get_mode          (<link linkend="GtkToggleButton">GtkToggleButton</link> *toggle_button);</programlisting>
<para>
Retrieves whether the button is displayed as a separate indicator
and label. See <link linkend="gtk-toggle-button-set-mode"><function>gtk_toggle_button_set_mode()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toggle_button</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the togglebutton is drawn as a separate indicator
  and label.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toggle-button-set-state" role="macro" condition="deprecated:"/>gtk_toggle_button_set_state</title>
<indexterm role="deprecated"><primary>gtk_toggle_button_set_state</primary></indexterm><programlisting>#define	gtk_toggle_button_set_state		gtk_toggle_button_set_active
</programlisting>
<warning><para><literal>gtk_toggle_button_set_state</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This is a deprecated macro, and is only maintained for compatibility reasons.
</para></refsect2>
<refsect2>
<title><anchor id="gtk-toggle-button-toggled" role="function"/>gtk_toggle_button_toggled ()</title>
<indexterm><primary>gtk_toggle_button_toggled</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_toggle_button_toggled           (<link linkend="GtkToggleButton">GtkToggleButton</link> *toggle_button);</programlisting>
<para>
Emits the <link linkend="GtkToggleButton-toggled">toggled</link>
signal on the <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link>. There is no good reason for an
application ever to call this function.
</para><variablelist role="params">
<varlistentry><term><parameter>toggle_button</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link>.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toggle-button-get-active" role="function"/>gtk_toggle_button_get_active ()</title>
<indexterm><primary>gtk_toggle_button_get_active</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_toggle_button_get_active        (<link linkend="GtkToggleButton">GtkToggleButton</link> *toggle_button);</programlisting>
<para>
Queries a <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link> and returns its current state. Returns <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if
the toggle button is pressed in and <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if it is raised.
</para><variablelist role="params">
<varlistentry><term><parameter>toggle_button</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>a <link linkend="gboolean"><type>gboolean</type></link> value.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toggle-button-set-active" role="function"/>gtk_toggle_button_set_active ()</title>
<indexterm><primary>gtk_toggle_button_set_active</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_toggle_button_set_active        (<link linkend="GtkToggleButton">GtkToggleButton</link> *toggle_button,
                                                         <link linkend="gboolean">gboolean</link> is_active);</programlisting>
<para>
Sets the status of the toggle button. Set to <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if you want the
GtkToggleButton to be 'pressed in', and <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to raise it.
This action causes the toggled signal to be emitted.
</para><variablelist role="params">
<varlistentry><term><parameter>toggle_button</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>is_active</parameter>&nbsp;:</term>
<listitem><simpara><link linkend="TRUE:CAPS"><literal>TRUE</literal></link> or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link>.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toggle-button-get-inconsistent" role="function"/>gtk_toggle_button_get_inconsistent ()</title>
<indexterm><primary>gtk_toggle_button_get_inconsistent</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_toggle_button_get_inconsistent  (<link linkend="GtkToggleButton">GtkToggleButton</link> *toggle_button);</programlisting>
<para>
Gets the value set by <link linkend="gtk-toggle-button-set-inconsistent"><function>gtk_toggle_button_set_inconsistent()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toggle_button</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the button is displayed as inconsistent, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toggle-button-set-inconsistent" role="function"/>gtk_toggle_button_set_inconsistent ()</title>
<indexterm><primary>gtk_toggle_button_set_inconsistent</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_toggle_button_set_inconsistent  (<link linkend="GtkToggleButton">GtkToggleButton</link> *toggle_button,
                                                         <link linkend="gboolean">gboolean</link> setting);</programlisting>
<para>
If the user has selected a range of elements (such as some text or
spreadsheet cells) that are affected by a toggle button, and the
current values in that range are inconsistent, you may want to
display the toggle in an "in between" state. This function turns on
"in between" display.  Normally you would turn off the inconsistent
state again if the user toggles the toggle button. This has to be
done manually, <link linkend="gtk-toggle-button-set-inconsistent"><function>gtk_toggle_button_set_inconsistent()</function></link> only affects
visual appearance, it doesn't affect the semantics of the button.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toggle_button</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>setting</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if state is inconsistent
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2><title><anchor id="GtkToggleButton--active"/>The :<literal>active</literal> property</title>
<indexterm><primary>GtkToggleButton:active</primary></indexterm><programlisting>  active                   <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>If the toggle button should be pressed in or not.</para><para>Default value: FALSE</para>
</refsect2>
<refsect2><title><anchor id="GtkToggleButton--draw-indicator"/>The :<literal>draw-indicator</literal> property</title>
<indexterm><primary>GtkToggleButton:draw-indicator</primary></indexterm><programlisting>  draw-indicator           <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>If the toggle part of the button is displayed.</para><para>Default value: FALSE</para>
</refsect2>
<refsect2><title><anchor id="GtkToggleButton--inconsistent"/>The :<literal>inconsistent</literal> property</title>
<indexterm><primary>GtkToggleButton:inconsistent</primary></indexterm><programlisting>  inconsistent             <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>If the toggle button is in an "in between" state.</para><para>Default value: FALSE</para>
</refsect2>

</refsect1>

<refsect1 role="signals">
<title role="signals.title">Signal Details</title>
<refsect2><title><anchor id="GtkToggleButton-toggled"/>The <literal>::toggled</literal> signal</title>
<indexterm><primary>GtkToggleButton::toggled</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GtkToggleButton">GtkToggleButton</link> *togglebutton,
                                                        <link linkend="gpointer">gpointer</link>         user_data)         : Run First</programlisting>
<para>
Should be connected if you wish to perform an action whenever the
<link linkend="GtkToggleButton"><type>GtkToggleButton</type></link>'s state is changed.
</para><variablelist role="params">
<varlistentry><term><parameter>togglebutton</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>


<refsect1>
<title>See Also</title>
<para>
<variablelist>

<varlistentry>
  <term><link linkend="GtkButton"><type>GtkButton</type></link></term>
  <listitem><para>a more general button.</para></listitem>
</varlistentry>

<varlistentry>
  <term><link linkend="GtkCheckButton"><type>GtkCheckButton</type></link></term>
  <listitem><para>another way of presenting a toggle option.</para></listitem>
</varlistentry>

<varlistentry>
  <term><link linkend="GtkCheckMenuItem"><type>GtkCheckMenuItem</type></link></term>
  <listitem><para>a <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link>  as a menu item.</para></listitem>
</varlistentry>

</variablelist>
</para>
</refsect1>

</refentry>
