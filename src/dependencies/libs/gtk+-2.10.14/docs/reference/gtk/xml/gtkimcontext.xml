<refentry id="GtkIMContext">
<refmeta>
<refentrytitle role="top_of_page">GtkIMContext</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GtkIMContext</refname>
<refpurpose>Base class for input method contexts</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;gtk/gtk.h&gt;


                    <link linkend="GtkIMContext-struct">GtkIMContext</link>;
<link linkend="void">void</link>                <link linkend="gtk-im-context-set-client-window">gtk_im_context_set_client_window</link>    (<link linkend="GtkIMContext">GtkIMContext</link> *context,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window);
<link linkend="void">void</link>                <link linkend="gtk-im-context-get-preedit-string">gtk_im_context_get_preedit_string</link>   (<link linkend="GtkIMContext">GtkIMContext</link> *context,
                                                         <link linkend="gchar">gchar</link> **str,
                                                         <link linkend="PangoAttrList">PangoAttrList</link> **attrs,
                                                         <link linkend="gint">gint</link> *cursor_pos);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-im-context-filter-keypress">gtk_im_context_filter_keypress</link>      (<link linkend="GtkIMContext">GtkIMContext</link> *context,
                                                         <link linkend="GdkEventKey">GdkEventKey</link> *event);
<link linkend="void">void</link>                <link linkend="gtk-im-context-focus-in">gtk_im_context_focus_in</link>             (<link linkend="GtkIMContext">GtkIMContext</link> *context);
<link linkend="void">void</link>                <link linkend="gtk-im-context-focus-out">gtk_im_context_focus_out</link>            (<link linkend="GtkIMContext">GtkIMContext</link> *context);
<link linkend="void">void</link>                <link linkend="gtk-im-context-reset">gtk_im_context_reset</link>                (<link linkend="GtkIMContext">GtkIMContext</link> *context);
<link linkend="void">void</link>                <link linkend="gtk-im-context-set-cursor-location">gtk_im_context_set_cursor_location</link>  (<link linkend="GtkIMContext">GtkIMContext</link> *context,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area);
<link linkend="void">void</link>                <link linkend="gtk-im-context-set-use-preedit">gtk_im_context_set_use_preedit</link>      (<link linkend="GtkIMContext">GtkIMContext</link> *context,
                                                         <link linkend="gboolean">gboolean</link> use_preedit);
<link linkend="void">void</link>                <link linkend="gtk-im-context-set-surrounding">gtk_im_context_set_surrounding</link>      (<link linkend="GtkIMContext">GtkIMContext</link> *context,
                                                         const <link linkend="gchar">gchar</link> *text,
                                                         <link linkend="gint">gint</link> len,
                                                         <link linkend="gint">gint</link> cursor_index);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-im-context-get-surrounding">gtk_im_context_get_surrounding</link>      (<link linkend="GtkIMContext">GtkIMContext</link> *context,
                                                         <link linkend="gchar">gchar</link> **text,
                                                         <link linkend="gint">gint</link> *cursor_index);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-im-context-delete-surrounding">gtk_im_context_delete_surrounding</link>   (<link linkend="GtkIMContext">GtkIMContext</link> *context,
                                                         <link linkend="gint">gint</link> offset,
                                                         <link linkend="gint">gint</link> n_chars);


</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----GtkIMContext
         +----<link linkend="GtkIMContextSimple">GtkIMContextSimple</link>
         +----<link linkend="GtkIMMulticontext">GtkIMMulticontext</link>
</synopsis>

</refsect1>






<refsect1 role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>

  <link linkend="GtkIMContext-commit">commit</link>                                         : Run Last
  <link linkend="GtkIMContext-delete-surrounding">delete-surrounding</link>                             : Run Last
  <link linkend="GtkIMContext-preedit-changed">preedit-changed</link>                                : Run Last
  <link linkend="GtkIMContext-preedit-end">preedit-end</link>                                    : Run Last
  <link linkend="GtkIMContext-preedit-start">preedit-start</link>                                  : Run Last
  <link linkend="GtkIMContext-retrieve-surrounding">retrieve-surrounding</link>                           : Run Last
</synopsis>
</refsect1>


<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="GtkIMContext-struct" role="struct"/>GtkIMContext</title>
<indexterm><primary>GtkIMContext</primary></indexterm><programlisting>typedef struct _GtkIMContext GtkIMContext;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gtk-im-context-set-client-window" role="function"/>gtk_im_context_set_client_window ()</title>
<indexterm><primary>gtk_im_context_set_client_window</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_im_context_set_client_window    (<link linkend="GtkIMContext">GtkIMContext</link> *context,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window);</programlisting>
<para>
Set the client window for the input context; this is the
<link linkend="GdkWindow"><type>GdkWindow</type></link> in which the input appears. This window is
used in order to correctly position status windows, and may
also be used for purposes internal to the input method.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkIMContext"><type>GtkIMContext</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara>  the client window. This may be <link linkend="NULL:CAPS"><literal>NULL</literal></link> to indicate
          that the previous client window no longer exists.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-im-context-get-preedit-string" role="function"/>gtk_im_context_get_preedit_string ()</title>
<indexterm><primary>gtk_im_context_get_preedit_string</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_im_context_get_preedit_string   (<link linkend="GtkIMContext">GtkIMContext</link> *context,
                                                         <link linkend="gchar">gchar</link> **str,
                                                         <link linkend="PangoAttrList">PangoAttrList</link> **attrs,
                                                         <link linkend="gint">gint</link> *cursor_pos);</programlisting>
<para>
Retrieve the current preedit string for the input context,
and a list of attributes to apply to the string.
This string should be displayed inserted at the insertion
point.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara>    a <link linkend="GtkIMContext"><type>GtkIMContext</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>str</parameter>&nbsp;:</term>
<listitem><simpara>        location to store the retrieved string. The
             string retrieved must be freed with <link linkend="g-free"><function>g_free()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attrs</parameter>&nbsp;:</term>
<listitem><simpara>      location to store the retrieved attribute list.
             When you are done with this list, you must
             unreference it with <link linkend="pango-attr-list-unref"><function>pango_attr_list_unref()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cursor_pos</parameter>&nbsp;:</term>
<listitem><simpara> location to store position of cursor (in characters)
             within the preedit string.  
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-im-context-filter-keypress" role="function"/>gtk_im_context_filter_keypress ()</title>
<indexterm><primary>gtk_im_context_filter_keypress</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_im_context_filter_keypress      (<link linkend="GtkIMContext">GtkIMContext</link> *context,
                                                         <link linkend="GdkEventKey">GdkEventKey</link> *event);</programlisting>
<para>
Allow an input method to internally handle key press and release 
events. If this function returns <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, then no further processing
should be done for this key event.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkIMContext"><type>GtkIMContext</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> the key event
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the input method handled the key event.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-im-context-focus-in" role="function"/>gtk_im_context_focus_in ()</title>
<indexterm><primary>gtk_im_context_focus_in</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_im_context_focus_in             (<link linkend="GtkIMContext">GtkIMContext</link> *context);</programlisting>
<para>
Notify the input method that the widget to which this
input context corresponds has gained focus. The input method
may, for example, change the displayed feedback to reflect
this change.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkIMContext"><type>GtkIMContext</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-im-context-focus-out" role="function"/>gtk_im_context_focus_out ()</title>
<indexterm><primary>gtk_im_context_focus_out</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_im_context_focus_out            (<link linkend="GtkIMContext">GtkIMContext</link> *context);</programlisting>
<para>
Notify the input method that the widget to which this
input context corresponds has lost focus. The input method
may, for example, change the displayed feedback or reset the contexts
state to reflect this change.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkIMContext"><type>GtkIMContext</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-im-context-reset" role="function"/>gtk_im_context_reset ()</title>
<indexterm><primary>gtk_im_context_reset</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_im_context_reset                (<link linkend="GtkIMContext">GtkIMContext</link> *context);</programlisting>
<para>
Notify the input method that a change such as a change in cursor
position has been made. This will typically cause the input
method to clear the preedit state.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkIMContext"><type>GtkIMContext</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-im-context-set-cursor-location" role="function"/>gtk_im_context_set_cursor_location ()</title>
<indexterm><primary>gtk_im_context_set_cursor_location</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_im_context_set_cursor_location  (<link linkend="GtkIMContext">GtkIMContext</link> *context,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area);</programlisting>
<para>
Notify the input method that a change in cursor 
position has been made. The location is relative to the client
window.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkIMContext"><type>GtkIMContext</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> new location
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-im-context-set-use-preedit" role="function"/>gtk_im_context_set_use_preedit ()</title>
<indexterm><primary>gtk_im_context_set_use_preedit</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_im_context_set_use_preedit      (<link linkend="GtkIMContext">GtkIMContext</link> *context,
                                                         <link linkend="gboolean">gboolean</link> use_preedit);</programlisting>
<para>
Sets whether the IM context should use the preedit string
to display feedback. If <parameter>use_preedit</parameter> is FALSE (default
is TRUE), then the IM context may use some other method to display
feedback, such as displaying it in a child of the root window.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkIMContext"><type>GtkIMContext</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>use_preedit</parameter>&nbsp;:</term>
<listitem><simpara> whether the IM context should use the preedit string.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-im-context-set-surrounding" role="function"/>gtk_im_context_set_surrounding ()</title>
<indexterm><primary>gtk_im_context_set_surrounding</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_im_context_set_surrounding      (<link linkend="GtkIMContext">GtkIMContext</link> *context,
                                                         const <link linkend="gchar">gchar</link> *text,
                                                         <link linkend="gint">gint</link> len,
                                                         <link linkend="gint">gint</link> cursor_index);</programlisting>
<para>
Sets surrounding context around the insertion point and preedit
string. This function is expected to be called in response to the
GtkIMContext::retrieve_surrounding signal, and will likely have no
effect if called at other times.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkIMContext"><type>GtkIMContext</type></link> 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> text surrounding the insertion point, as UTF-8.
       the preedit string should not be included within
       <parameter>text</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara> the length of <parameter>text</parameter>, or -1 if <parameter>text</parameter> is nul-terminated
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cursor_index</parameter>&nbsp;:</term>
<listitem><simpara> the byte index of the insertion cursor within <parameter>text</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-im-context-get-surrounding" role="function"/>gtk_im_context_get_surrounding ()</title>
<indexterm><primary>gtk_im_context_get_surrounding</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_im_context_get_surrounding      (<link linkend="GtkIMContext">GtkIMContext</link> *context,
                                                         <link linkend="gchar">gchar</link> **text,
                                                         <link linkend="gint">gint</link> *cursor_index);</programlisting>
<para>
Retrieves context around the insertion point. Input methods
typically want context in order to constrain input text based on
existing text; this is important for languages such as Thai where
only some sequences of characters are allowed.
</para>
<para>
This function is implemented by emitting the
GtkIMContext::retrieve_surrounding signal on the input method; in
response to this signal, a widget should provide as much context as
is available, up to an entire paragraph, by calling
<link linkend="gtk-im-context-set-surrounding"><function>gtk_im_context_set_surrounding()</function></link>. Note that there is no obligation
for a widget to respond to the ::retrieve_surrounding signal, so input
methods must be prepared to function without context.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkIMContext"><type>GtkIMContext</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> location to store a UTF-8 encoded string of text
       holding context around the insertion point.
       If the function returns <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, then you must free
       the result stored in this location with <link linkend="g-free"><function>g_free()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cursor_index</parameter>&nbsp;:</term>
<listitem><simpara> location to store byte index of the insertion cursor
       within <parameter>text</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if surrounding text was provided; in this case
   you must free the result stored in *text.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-im-context-delete-surrounding" role="function"/>gtk_im_context_delete_surrounding ()</title>
<indexterm><primary>gtk_im_context_delete_surrounding</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_im_context_delete_surrounding   (<link linkend="GtkIMContext">GtkIMContext</link> *context,
                                                         <link linkend="gint">gint</link> offset,
                                                         <link linkend="gint">gint</link> n_chars);</programlisting>
<para>
Asks the widget that the input context is attached to to delete
characters around the cursor position by emitting the
GtkIMContext::delete_surrounding signal. Note that <parameter>offset</parameter> and <parameter>n_chars</parameter>
are in characters not in bytes which differs from the usage other
places in <link linkend="GtkIMContext"><type>GtkIMContext</type></link>.
</para>
<para>
In order to use this function, you should first call
<link linkend="gtk-im-context-get-surrounding"><function>gtk_im_context_get_surrounding()</function></link> to get the current context, and
call this function immediately afterwards to make sure that you
know what you are deleting. You should also account for the fact
that even if the signal was handled, the input context might not
have deleted all the characters that were requested to be deleted.
</para>
<para>
This function is used by an input method that wants to make
subsitutions in the existing text in response to new input. It is
not useful for applications.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkIMContext"><type>GtkIMContext</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>offset</parameter>&nbsp;:</term>
<listitem><simpara> offset from cursor position in chars;
   a negative value means start before the cursor.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_chars</parameter>&nbsp;:</term>
<listitem><simpara> number of characters to delete.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the signal was handled.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1 role="signals">
<title role="signals.title">Signal Details</title>
<refsect2><title><anchor id="GtkIMContext-commit"/>The <literal>::commit</literal> signal</title>
<indexterm><primary>GtkIMContext::commit</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GtkIMContext">GtkIMContext</link> *imcontext,
                                                        <link linkend="gchar">gchar</link>        *arg1,
                                                        <link linkend="gpointer">gpointer</link>      user_data)      : Run Last</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>imcontext</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkIMContext-delete-surrounding"/>The <literal>::delete-surrounding</literal> signal</title>
<indexterm><primary>GtkIMContext::delete-surrounding</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GtkIMContext">GtkIMContext</link> *imcontext,
                                                        <link linkend="gint">gint</link>          arg1,
                                                        <link linkend="gint">gint</link>          arg2,
                                                        <link linkend="gpointer">gpointer</link>      user_data)      : Run Last</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>imcontext</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkIMContext-preedit-changed"/>The <literal>::preedit-changed</literal> signal</title>
<indexterm><primary>GtkIMContext::preedit-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GtkIMContext">GtkIMContext</link> *imcontext,
                                                        <link linkend="gpointer">gpointer</link>      user_data)      : Run Last</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>imcontext</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkIMContext-preedit-end"/>The <literal>::preedit-end</literal> signal</title>
<indexterm><primary>GtkIMContext::preedit-end</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GtkIMContext">GtkIMContext</link> *imcontext,
                                                        <link linkend="gpointer">gpointer</link>      user_data)      : Run Last</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>imcontext</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkIMContext-preedit-start"/>The <literal>::preedit-start</literal> signal</title>
<indexterm><primary>GtkIMContext::preedit-start</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GtkIMContext">GtkIMContext</link> *imcontext,
                                                        <link linkend="gpointer">gpointer</link>      user_data)      : Run Last</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>imcontext</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkIMContext-retrieve-surrounding"/>The <literal>::retrieve-surrounding</literal> signal</title>
<indexterm><primary>GtkIMContext::retrieve-surrounding</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GtkIMContext">GtkIMContext</link> *imcontext,
                                                        <link linkend="gpointer">gpointer</link>      user_data)      : Run Last</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>imcontext</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
