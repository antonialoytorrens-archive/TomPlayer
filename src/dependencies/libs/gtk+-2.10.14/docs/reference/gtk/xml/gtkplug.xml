<refentry id="GtkPlug">
<refmeta>
<refentrytitle role="top_of_page">GtkPlug</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GtkPlug</refname>
<refpurpose>Toplevel for embedding into other processes</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;gtk/gtk.h&gt;


                    <link linkend="GtkPlug-struct">GtkPlug</link>;
<link linkend="void">void</link>                <link linkend="gtk-plug-construct">gtk_plug_construct</link>                  (<link linkend="GtkPlug">GtkPlug</link> *plug,
                                                         <link linkend="GdkNativeWindow">GdkNativeWindow</link> socket_id);
<link linkend="void">void</link>                <link linkend="gtk-plug-construct-for-display">gtk_plug_construct_for_display</link>      (<link linkend="GtkPlug">GtkPlug</link> *plug,
                                                         <link linkend="GdkDisplay">GdkDisplay</link> *display,
                                                         <link linkend="GdkNativeWindow">GdkNativeWindow</link> socket_id);
<link linkend="GtkWidget">GtkWidget</link>*          <link linkend="gtk-plug-new">gtk_plug_new</link>                        (<link linkend="GdkNativeWindow">GdkNativeWindow</link> socket_id);
<link linkend="GtkWidget">GtkWidget</link>*          <link linkend="gtk-plug-new-for-display">gtk_plug_new_for_display</link>            (<link linkend="GdkDisplay">GdkDisplay</link> *display,
                                                         <link linkend="GdkNativeWindow">GdkNativeWindow</link> socket_id);
<link linkend="GdkNativeWindow">GdkNativeWindow</link>     <link linkend="gtk-plug-get-id">gtk_plug_get_id</link>                     (<link linkend="GtkPlug">GtkPlug</link> *plug);


</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
         +----<link linkend="GtkObject">GtkObject</link>
               +----<link linkend="GtkWidget">GtkWidget</link>
                     +----<link linkend="GtkContainer">GtkContainer</link>
                           +----<link linkend="GtkBin">GtkBin</link>
                                 +----<link linkend="GtkWindow">GtkWindow</link>
                                       +----GtkPlug
</synopsis>

</refsect1>



<refsect1 role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
GtkPlug implements
 <link linkend="AtkImplementorIface">AtkImplementorIface</link>.</para>

</refsect1>



<refsect1 role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>

  <link linkend="GtkPlug-embedded">embedded</link>                                       : Run Last
</synopsis>
</refsect1>


<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
Together with <link linkend="GtkSocket"><type>GtkSocket</type></link>, <link linkend="GtkPlug"><type>GtkPlug</type></link> provides the ability
to embed widgets from one process into another process
in a fashion that is transparent to the user. One
process creates a <link linkend="GtkSocket"><type>GtkSocket</type></link> widget and, passes the
ID of that widgets window to the other process, 
which then creates a <link linkend="GtkPlug"><type>GtkPlug</type></link> with that window ID.
Any widgets contained in the <link linkend="GtkPlug"><type>GtkPlug</type></link> then will appear
inside the first applications window.
</para>

<note>
<para>
The <link linkend="GtkPlug"><type>GtkPlug</type></link> and <link linkend="GtkSocket"><type>GtkSocket</type></link> widgets are currently not available 
on all platforms supported by GTK+.
</para>
</note>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="GtkPlug-struct" role="struct"/>GtkPlug</title>
<indexterm><primary>GtkPlug</primary></indexterm><programlisting>typedef struct _GtkPlug GtkPlug;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gtk-plug-construct" role="function"/>gtk_plug_construct ()</title>
<indexterm><primary>gtk_plug_construct</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_plug_construct                  (<link linkend="GtkPlug">GtkPlug</link> *plug,
                                                         <link linkend="GdkNativeWindow">GdkNativeWindow</link> socket_id);</programlisting>
<para>
Finish the initialization of <parameter>plug</parameter> for a given <link linkend="GtkSocket"><type>GtkSocket</type></link> identified by
<parameter>socket_id</parameter>. This function will generally only be used by classes deriving from <link linkend="GtkPlug"><type>GtkPlug</type></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>plug</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPlug"><type>GtkPlug</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>socket_id</parameter>&nbsp;:</term>
<listitem><simpara> the XID of the socket's window.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-plug-construct-for-display" role="function" condition="since:2.2"/>gtk_plug_construct_for_display ()</title>
<indexterm role="2.2"><primary>gtk_plug_construct_for_display</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_plug_construct_for_display      (<link linkend="GtkPlug">GtkPlug</link> *plug,
                                                         <link linkend="GdkDisplay">GdkDisplay</link> *display,
                                                         <link linkend="GdkNativeWindow">GdkNativeWindow</link> socket_id);</programlisting>
<para>
Finish the initialization of <parameter>plug</parameter> for a given <link linkend="GtkSocket"><type>GtkSocket</type></link> identified by
<parameter>socket_id</parameter> which is currently displayed on <parameter>display</parameter>.
This function will generally only be used by classes deriving from <link linkend="GtkPlug"><type>GtkPlug</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plug</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPlug"><type>GtkPlug</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>display</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GdkDisplay"><type>GdkDisplay</type></link> associated with <parameter>socket_id</parameter>'s 
     <link linkend="GtkSocket"><type>GtkSocket</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>socket_id</parameter>&nbsp;:</term>
<listitem><simpara> the XID of the socket's window.
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gtk-plug-new" role="function"/>gtk_plug_new ()</title>
<indexterm><primary>gtk_plug_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*          gtk_plug_new                        (<link linkend="GdkNativeWindow">GdkNativeWindow</link> socket_id);</programlisting>
<para>
Creates a new plug widget inside the <link linkend="GtkSocket"><type>GtkSocket</type></link> identified
by <parameter>socket_id</parameter>. If <parameter>socket_id</parameter> is 0, the plug is left "unplugged" and
can later be plugged into a <link linkend="GtkSocket"><type>GtkSocket</type></link> by  <link linkend="gtk-socket-add-id"><function>gtk_socket_add_id()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>socket_id</parameter>&nbsp;:</term>
<listitem><simpara>  the window ID of the socket, or 0.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the new <link linkend="GtkPlug"><type>GtkPlug</type></link> widget.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-plug-new-for-display" role="function" condition="since:2.2"/>gtk_plug_new_for_display ()</title>
<indexterm role="2.2"><primary>gtk_plug_new_for_display</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*          gtk_plug_new_for_display            (<link linkend="GdkDisplay">GdkDisplay</link> *display,
                                                         <link linkend="GdkNativeWindow">GdkNativeWindow</link> socket_id);</programlisting>
<para>
Create a new plug widget inside the <link linkend="GtkSocket"><type>GtkSocket</type></link> identified by socket_id.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>display</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GdkDisplay"><type>GdkDisplay</type></link> on which <parameter>socket_id</parameter> is displayed
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>socket_id</parameter>&nbsp;:</term>
<listitem><simpara> the XID of the socket's window.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the new <link linkend="GtkPlug"><type>GtkPlug</type></link> widget.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gtk-plug-get-id" role="function"/>gtk_plug_get_id ()</title>
<indexterm><primary>gtk_plug_get_id</primary></indexterm><programlisting><link linkend="GdkNativeWindow">GdkNativeWindow</link>     gtk_plug_get_id                     (<link linkend="GtkPlug">GtkPlug</link> *plug);</programlisting>
<para>
Gets the window ID of a <link linkend="GtkPlug"><type>GtkPlug</type></link> widget, which can then
be used to embed this window inside another window, for
instance with <link linkend="gtk-socket-add-id"><function>gtk_socket_add_id()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plug</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkPlug"><type>GtkPlug</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the window ID for the plug
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1 role="signals">
<title role="signals.title">Signal Details</title>
<refsect2><title><anchor id="GtkPlug-embedded"/>The <literal>::embedded</literal> signal</title>
<indexterm><primary>GtkPlug::embedded</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GtkPlug">GtkPlug</link> *plug,
                                                        <link linkend="gpointer">gpointer</link> user_data)      : Run Last</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plug</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>


<refsect1>
<title>See Also</title>
<para>
<variablelist>

<varlistentry>
<term><link linkend="GtkSocket"><type>GtkSocket</type></link></term>
<listitem><para>the widget that a <link linkend="GtkPlug"><type>GtkPlug</type></link> plugs into.</para></listitem>
</varlistentry>

</variablelist>
</para>
</refsect1>

</refentry>
