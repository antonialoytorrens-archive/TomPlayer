<refentry id="GtkStyle">
<refmeta>
<refentrytitle role="top_of_page">Styles</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Styles</refname>
<refpurpose>Functions for drawing widget parts</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;gtk/gtk.h&gt;


#define             <link linkend="GTK-STYLE-ATTACHED:CAPS">GTK_STYLE_ATTACHED</link>                  (style)
                    <link linkend="GtkStyle-struct">GtkStyle</link>;
<link linkend="GtkStyle">GtkStyle</link>*           <link linkend="gtk-style-new">gtk_style_new</link>                       (void);
<link linkend="GtkStyle">GtkStyle</link>*           <link linkend="gtk-style-copy">gtk_style_copy</link>                      (<link linkend="GtkStyle">GtkStyle</link> *style);
<link linkend="GtkStyle">GtkStyle</link>*           <link linkend="gtk-style-attach">gtk_style_attach</link>                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window);
<link linkend="void">void</link>                <link linkend="gtk-style-detach">gtk_style_detach</link>                    (<link linkend="GtkStyle">GtkStyle</link> *style);
<link linkend="GtkStyle">GtkStyle</link>*           <link linkend="gtk-style-ref">gtk_style_ref</link>                       (<link linkend="GtkStyle">GtkStyle</link> *style);
<link linkend="void">void</link>                <link linkend="gtk-style-unref">gtk_style_unref</link>                     (<link linkend="GtkStyle">GtkStyle</link> *style);
<link linkend="void">void</link>                <link linkend="gtk-style-set-background">gtk_style_set_background</link>            (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type);
<link linkend="void">void</link>                <link linkend="gtk-style-apply-default-background">gtk_style_apply_default_background</link>  (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="gboolean">gboolean</link> set_bg,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
#define             <link linkend="gtk-style-apply-default-pixmap">gtk_style_apply_default_pixmap</link>      (s,gw,st,a,x,y,w,h)
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-style-lookup-color">gtk_style_lookup_color</link>              (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         const <link linkend="gchar">gchar</link> *color_name,
                                                         <link linkend="GdkColor">GdkColor</link> *color);
<link linkend="GtkIconSet">GtkIconSet</link>*         <link linkend="gtk-style-lookup-icon-set">gtk_style_lookup_icon_set</link>           (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         const <link linkend="gchar">gchar</link> *stock_id);
<link linkend="GdkPixbuf">GdkPixbuf</link>*          <link linkend="gtk-style-render-icon">gtk_style_render_icon</link>               (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         const <link linkend="GtkIconSource">GtkIconSource</link> *source,
                                                         <link linkend="GtkTextDirection">GtkTextDirection</link> direction,
                                                         <link linkend="GtkStateType">GtkStateType</link> state,
                                                         <link linkend="GtkIconSize">GtkIconSize</link> size,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail);
<link linkend="GdkFont">GdkFont</link>*            <link linkend="gtk-style-get-font">gtk_style_get_font</link>                  (<link linkend="GtkStyle">GtkStyle</link> *style);
<link linkend="void">void</link>                <link linkend="gtk-style-set-font">gtk_style_set_font</link>                  (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkFont">GdkFont</link> *font);
<link linkend="void">void</link>                <link linkend="gtk-draw-hline">gtk_draw_hline</link>                      (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="gint">gint</link> x1,
                                                         <link linkend="gint">gint</link> x2,
                                                         <link linkend="gint">gint</link> y);
<link linkend="void">void</link>                <link linkend="gtk-draw-vline">gtk_draw_vline</link>                      (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="gint">gint</link> y1_,
                                                         <link linkend="gint">gint</link> y2_,
                                                         <link linkend="gint">gint</link> x);
<link linkend="void">void</link>                <link linkend="gtk-draw-shadow">gtk_draw_shadow</link>                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-draw-polygon">gtk_draw_polygon</link>                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkPoint">GdkPoint</link> *points,
                                                         <link linkend="gint">gint</link> npoints,
                                                         <link linkend="gboolean">gboolean</link> fill);
<link linkend="void">void</link>                <link linkend="gtk-draw-arrow">gtk_draw_arrow</link>                      (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GtkArrowType">GtkArrowType</link> arrow_type,
                                                         <link linkend="gboolean">gboolean</link> fill,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-draw-diamond">gtk_draw_diamond</link>                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-draw-string">gtk_draw_string</link>                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         const <link linkend="gchar">gchar</link> *string);
<link linkend="void">void</link>                <link linkend="gtk-draw-box">gtk_draw_box</link>                        (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-draw-box-gap">gtk_draw_box_gap</link>                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkPositionType">GtkPositionType</link> gap_side,
                                                         <link linkend="gint">gint</link> gap_x,
                                                         <link linkend="gint">gint</link> gap_width);
<link linkend="void">void</link>                <link linkend="gtk-draw-check">gtk_draw_check</link>                      (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-draw-extension">gtk_draw_extension</link>                  (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkPositionType">GtkPositionType</link> gap_side);
<link linkend="void">void</link>                <link linkend="gtk-draw-flat-box">gtk_draw_flat_box</link>                   (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-draw-focus">gtk_draw_focus</link>                      (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-draw-handle">gtk_draw_handle</link>                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkOrientation">GtkOrientation</link> orientation);
<link linkend="void">void</link>                <link linkend="gtk-draw-option">gtk_draw_option</link>                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-draw-shadow-gap">gtk_draw_shadow_gap</link>                 (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkPositionType">GtkPositionType</link> gap_side,
                                                         <link linkend="gint">gint</link> gap_x,
                                                         <link linkend="gint">gint</link> gap_width);
<link linkend="void">void</link>                <link linkend="gtk-draw-slider">gtk_draw_slider</link>                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkOrientation">GtkOrientation</link> orientation);
<link linkend="void">void</link>                <link linkend="gtk-draw-tab">gtk_draw_tab</link>                        (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-draw-expander">gtk_draw_expander</link>                   (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="GtkExpanderStyle">GtkExpanderStyle</link> expander_style);
<link linkend="void">void</link>                <link linkend="gtk-draw-layout">gtk_draw_layout</link>                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="gboolean">gboolean</link> use_text,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="PangoLayout">PangoLayout</link> *layout);
<link linkend="void">void</link>                <link linkend="gtk-draw-resize-grip">gtk_draw_resize_grip</link>                (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GdkWindowEdge">GdkWindowEdge</link> edge,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-paint-arrow">gtk_paint_arrow</link>                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="GtkArrowType">GtkArrowType</link> arrow_type,
                                                         <link linkend="gboolean">gboolean</link> fill,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-paint-box">gtk_paint_box</link>                       (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-paint-box-gap">gtk_paint_box_gap</link>                   (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkPositionType">GtkPositionType</link> gap_side,
                                                         <link linkend="gint">gint</link> gap_x,
                                                         <link linkend="gint">gint</link> gap_width);
<link linkend="void">void</link>                <link linkend="gtk-paint-check">gtk_paint_check</link>                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-paint-diamond">gtk_paint_diamond</link>                   (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-paint-extension">gtk_paint_extension</link>                 (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkPositionType">GtkPositionType</link> gap_side);
<link linkend="void">void</link>                <link linkend="gtk-paint-flat-box">gtk_paint_flat_box</link>                  (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-paint-focus">gtk_paint_focus</link>                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-paint-handle">gtk_paint_handle</link>                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkOrientation">GtkOrientation</link> orientation);
<link linkend="void">void</link>                <link linkend="gtk-paint-hline">gtk_paint_hline</link>                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x1,
                                                         <link linkend="gint">gint</link> x2,
                                                         <link linkend="gint">gint</link> y);
<link linkend="void">void</link>                <link linkend="gtk-paint-option">gtk_paint_option</link>                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-paint-polygon">gtk_paint_polygon</link>                   (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="GdkPoint">GdkPoint</link> *points,
                                                         <link linkend="gint">gint</link> npoints,
                                                         <link linkend="gboolean">gboolean</link> fill);
<link linkend="void">void</link>                <link linkend="gtk-paint-shadow">gtk_paint_shadow</link>                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-paint-shadow-gap">gtk_paint_shadow_gap</link>                (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkPositionType">GtkPositionType</link> gap_side,
                                                         <link linkend="gint">gint</link> gap_x,
                                                         <link linkend="gint">gint</link> gap_width);
<link linkend="void">void</link>                <link linkend="gtk-paint-slider">gtk_paint_slider</link>                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkOrientation">GtkOrientation</link> orientation);
<link linkend="void">void</link>                <link linkend="gtk-paint-string">gtk_paint_string</link>                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         const <link linkend="gchar">gchar</link> *string);
<link linkend="void">void</link>                <link linkend="gtk-paint-tab">gtk_paint_tab</link>                       (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-paint-vline">gtk_paint_vline</link>                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> y1_,
                                                         <link linkend="gint">gint</link> y2_,
                                                         <link linkend="gint">gint</link> x);
<link linkend="void">void</link>                <link linkend="gtk-paint-expander">gtk_paint_expander</link>                  (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="GtkExpanderStyle">GtkExpanderStyle</link> expander_style);
<link linkend="void">void</link>                <link linkend="gtk-paint-layout">gtk_paint_layout</link>                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="gboolean">gboolean</link> use_text,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="PangoLayout">PangoLayout</link> *layout);
<link linkend="void">void</link>                <link linkend="gtk-paint-resize-grip">gtk_paint_resize_grip</link>               (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="GdkWindowEdge">GdkWindowEdge</link> edge,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="gtk-draw-insertion-cursor">gtk_draw_insertion_cursor</link>           (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *location,
                                                         <link linkend="gboolean">gboolean</link> is_primary,
                                                         <link linkend="GtkTextDirection">GtkTextDirection</link> direction,
                                                         <link linkend="gboolean">gboolean</link> draw_arrow);

                    <link linkend="GtkBorder">GtkBorder</link>;
<link linkend="GtkBorder">GtkBorder</link>*          <link linkend="gtk-border-copy">gtk_border_copy</link>                     (const <link linkend="GtkBorder">GtkBorder</link> *border_);
<link linkend="void">void</link>                <link linkend="gtk-border-free">gtk_border_free</link>                     (<link linkend="GtkBorder">GtkBorder</link> *border_);

                    <link linkend="GtkRcProperty">GtkRcProperty</link>;
<link linkend="gboolean">gboolean</link>            (<link linkend="GtkRcPropertyParser">*GtkRcPropertyParser</link>)              (const <link linkend="GParamSpec">GParamSpec</link> *pspec,
                                                         const <link linkend="GString">GString</link> *rc_string,
                                                         <link linkend="GValue">GValue</link> *property_value);


</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----GtkStyle
</synopsis>

</refsect1>






<refsect1 role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>

  <link linkend="GtkStyle-realize">realize</link>                                        : Run First
  <link linkend="GtkStyle-unrealize">unrealize</link>                                      : Run First
</synopsis>
</refsect1>


<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="GTK-STYLE-ATTACHED:CAPS" role="macro"/>GTK_STYLE_ATTACHED()</title>
<indexterm><primary>GTK_STYLE_ATTACHED</primary></indexterm><programlisting>#define GTK_STYLE_ATTACHED(style)	(GTK_STYLE (style)-&gt;attach_count &gt; 0)
</programlisting>
<para>
Returns whether the style is attached to a window.
</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkStyle"><type>GtkStyle</type></link>.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GtkStyle-struct" role="struct"/>GtkStyle</title>
<indexterm><primary>GtkStyle</primary></indexterm><programlisting>typedef struct {
  GdkColor fg[5];
  GdkColor bg[5];
  GdkColor light[5];
  GdkColor dark[5];
  GdkColor mid[5];
  GdkColor text[5];
  GdkColor base[5];
  GdkColor text_aa[5];		/* Halfway between text/base */
  
  GdkColor black;
  GdkColor white;
  PangoFontDescription *font_desc;
  
  gint xthickness;
  gint ythickness;
  
  GdkGC *fg_gc[5];
  GdkGC *bg_gc[5];
  GdkGC *light_gc[5];
  GdkGC *dark_gc[5];
  GdkGC *mid_gc[5];
  GdkGC *text_gc[5];
  GdkGC *base_gc[5];
  GdkGC *text_aa_gc[5];
  GdkGC *black_gc;
  GdkGC *white_gc;
  
  GdkPixmap *bg_pixmap[5];
} GtkStyle;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gtk-style-new" role="function"/>gtk_style_new ()</title>
<indexterm><primary>gtk_style_new</primary></indexterm><programlisting><link linkend="GtkStyle">GtkStyle</link>*           gtk_style_new                       (void);</programlisting>
<para>
Creates a new <link linkend="GtkStyle"><type>GtkStyle</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GtkStyle"><type>GtkStyle</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-style-copy" role="function"/>gtk_style_copy ()</title>
<indexterm><primary>gtk_style_copy</primary></indexterm><programlisting><link linkend="GtkStyle">GtkStyle</link>*           gtk_style_copy                      (<link linkend="GtkStyle">GtkStyle</link> *style);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-style-attach" role="function"/>gtk_style_attach ()</title>
<indexterm><primary>gtk_style_attach</primary></indexterm><programlisting><link linkend="GtkStyle">GtkStyle</link>*           gtk_style_attach                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window);</programlisting>
<para>
Attaches a style to a window; this process allocates the
colors and creates the GC's for the style - it specializes
it to a particular visual and colormap. The process may 
involve the creation of a new style if the style has already 
been attached to a window with a different style and colormap.
</para>
<para>
Since this function may return a new object, you have to use it 
in the following way: 
<literal>style = gtk_style_attach (style, window)</literal></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Either <parameter>style</parameter>, or a newly-created <link linkend="GtkStyle"><type>GtkStyle</type></link>.
  If the style is newly created, the style parameter
  will be dereferenced, and the new style will have
  a reference count belonging to the caller.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-style-detach" role="function"/>gtk_style_detach ()</title>
<indexterm><primary>gtk_style_detach</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_style_detach                    (<link linkend="GtkStyle">GtkStyle</link> *style);</programlisting>
<para>
Detaches a style from a window. If the style is not attached
to any windows anymore, it is unrealized. See <link linkend="gtk-style-attach"><function>gtk_style_attach()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-style-ref" role="function" condition="deprecated:"/>gtk_style_ref ()</title>
<indexterm role="deprecated"><primary>gtk_style_ref</primary></indexterm><programlisting><link linkend="GtkStyle">GtkStyle</link>*           gtk_style_ref                       (<link linkend="GtkStyle">GtkStyle</link> *style);</programlisting>
<warning><para><literal>gtk_style_ref</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Deprecated equivalent of <link linkend="g-object-ref"><function>g_object_ref()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <parameter>style</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-style-unref" role="function" condition="deprecated:"/>gtk_style_unref ()</title>
<indexterm role="deprecated"><primary>gtk_style_unref</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_style_unref                     (<link linkend="GtkStyle">GtkStyle</link> *style);</programlisting>
<warning><para><literal>gtk_style_unref</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Deprecated equivalent of <link linkend="g-object-unref"><function>g_object_unref()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-style-set-background" role="function"/>gtk_style_set_background ()</title>
<indexterm><primary>gtk_style_set_background</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_style_set_background            (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type);</programlisting>
<para>
Sets the background of <parameter>window</parameter> to the background color or pixmap
specified by <parameter>style</parameter> for the given state.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-style-apply-default-background" role="function"/>gtk_style_apply_default_background ()</title>
<indexterm><primary>gtk_style_apply_default_background</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_style_apply_default_background  (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="gboolean">gboolean</link> set_bg,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>set_bg</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-style-apply-default-pixmap" role="macro" condition="deprecated:"/>gtk_style_apply_default_pixmap()</title>
<indexterm role="deprecated"><primary>gtk_style_apply_default_pixmap</primary></indexterm><programlisting>#define gtk_style_apply_default_pixmap(s,gw,st,a,x,y,w,h) gtk_style_apply_default_background (s,gw,1,st,a,x,y,w,h)
</programlisting>
<warning><para><literal>gtk_style_apply_default_pixmap</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Deprecated alias for <link linkend="gtk-style-apply-default-background"><function>gtk_style_apply_default_background()</function></link>.
</para><variablelist role="params">
<varlistentry><term><parameter>s</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gw</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>st</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>a</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>w</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>h</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-style-lookup-color" role="function" condition="since:2.10"/>gtk_style_lookup_color ()</title>
<indexterm role="2.10"><primary>gtk_style_lookup_color</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_style_lookup_color              (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         const <link linkend="gchar">gchar</link> *color_name,
                                                         <link linkend="GdkColor">GdkColor</link> *color);</programlisting>
<para>
Looks up <parameter>color_name</parameter> in the style's logical color mappings,
filling in <parameter>color</parameter> and returning <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if found, otherwise
returning <link linkend="FALSE:CAPS"><literal>FALSE</literal></link>. Do not cache the found mapping, because
it depends on the <link linkend="GtkStyle"><type>GtkStyle</type></link> and might change when a theme
switch occurs.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>color_name</parameter>&nbsp;:</term>
<listitem><simpara> the name of the logical color to look up
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>color</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GdkColor"><type>GdkColor</type></link> to fill in
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the mapping was found.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.10
</para></refsect2>
<refsect2>
<title><anchor id="gtk-style-lookup-icon-set" role="function"/>gtk_style_lookup_icon_set ()</title>
<indexterm><primary>gtk_style_lookup_icon_set</primary></indexterm><programlisting><link linkend="GtkIconSet">GtkIconSet</link>*         gtk_style_lookup_icon_set           (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         const <link linkend="gchar">gchar</link> *stock_id);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stock_id</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-style-render-icon" role="function"/>gtk_style_render_icon ()</title>
<indexterm><primary>gtk_style_render_icon</primary></indexterm><programlisting><link linkend="GdkPixbuf">GdkPixbuf</link>*          gtk_style_render_icon               (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         const <link linkend="GtkIconSource">GtkIconSource</link> *source,
                                                         <link linkend="GtkTextDirection">GtkTextDirection</link> direction,
                                                         <link linkend="GtkStateType">GtkStateType</link> state,
                                                         <link linkend="GtkIconSize">GtkIconSize</link> size,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail);</programlisting>
<para>
Renders the icon specified by <parameter>source</parameter> at the given <parameter>size</parameter> 
according to the given parameters and returns the result in a 
pixbuf.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>source</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GtkIconSource"><type>GtkIconSource</type></link> specifying the icon to render
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>direction</parameter>&nbsp;:</term>
<listitem><simpara> a text direction
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara> the size to render the icon at. A size of (GtkIconSize)-1
       means render at the size of the source and don't scale.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a newly-created <link linkend="GdkPixbuf"><type>GdkPixbuf</type></link> containing the rendered icon
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-style-get-font" role="function" condition="deprecated:"/>gtk_style_get_font ()</title>
<indexterm role="deprecated"><primary>gtk_style_get_font</primary></indexterm><programlisting><link linkend="GdkFont">GdkFont</link>*            gtk_style_get_font                  (<link linkend="GtkStyle">GtkStyle</link> *style);</programlisting>
<warning><para><literal>gtk_style_get_font</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Gets the <link linkend="GdkFont"><type>GdkFont</type></link> to use for the given style. This is
meant only as a replacement for direct access to <parameter>style->font</parameter>
and should not be used in new code. New code should
use <parameter>style->font_desc</parameter> instead.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <link linkend="GdkFont"><type>GdkFont</type></link> for the style. This font is owned
  by the style; if you want to keep around a copy, you must
  call <link linkend="gdk-font-ref"><function>gdk_font_ref()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-style-set-font" role="function" condition="deprecated:"/>gtk_style_set_font ()</title>
<indexterm role="deprecated"><primary>gtk_style_set_font</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_style_set_font                  (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkFont">GdkFont</link> *font);</programlisting>
<warning><para><literal>gtk_style_set_font</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Sets the <link linkend="GdkFont"><type>GdkFont</type></link> to use for a given style. This is
meant only as a replacement for direct access to style->font
and should not be used in new code. New code should
use style->font_desc instead.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkFont"><type>GdkFont</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to use the <link linkend="GdkFont"><type>GdkFont</type></link> corresponding
  to style->font_desc.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-hline" role="function" condition="deprecated:Use gtk_paint_hline() instead."/>gtk_draw_hline ()</title>
<indexterm role="deprecated"><primary>gtk_draw_hline</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_hline                      (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="gint">gint</link> x1,
                                                         <link linkend="gint">gint</link> x2,
                                                         <link linkend="gint">gint</link> y);</programlisting>
<warning><para><literal>gtk_draw_hline</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-hline"><function>gtk_paint_hline()</function></link> instead.</para></warning>
<para>
Draws a horizontal line from (<parameter>x1</parameter>, <parameter>y</parameter>) to (<parameter>x2</parameter>, <parameter>y</parameter>) in <parameter>window</parameter>
using the given style and state.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x1</parameter>&nbsp;:</term>
<listitem><simpara> the starting x coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x2</parameter>&nbsp;:</term>
<listitem><simpara> the ending x coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> the y coordinate
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-vline" role="function" condition="deprecated:Use gtk_paint_vline() instead."/>gtk_draw_vline ()</title>
<indexterm role="deprecated"><primary>gtk_draw_vline</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_vline                      (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="gint">gint</link> y1_,
                                                         <link linkend="gint">gint</link> y2_,
                                                         <link linkend="gint">gint</link> x);</programlisting>
<warning><para><literal>gtk_draw_vline</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-vline"><function>gtk_paint_vline()</function></link> instead.</para></warning>
<para>
Draws a vertical line from (<parameter>x</parameter>, <parameter>y1_</parameter>) to (<parameter>x</parameter>, <parameter>y2_</parameter>) in <parameter>window</parameter>
using the given style and state.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y1_</parameter>&nbsp;:</term>
<listitem><simpara> the starting y coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y2_</parameter>&nbsp;:</term>
<listitem><simpara> the ending y coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> the x coordinate
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-shadow" role="function" condition="deprecated:Use gtk_paint_shadow() instead."/>gtk_draw_shadow ()</title>
<indexterm role="deprecated"><primary>gtk_draw_shadow</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_shadow                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<warning><para><literal>gtk_draw_shadow</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-shadow"><function>gtk_paint_shadow()</function></link> instead.</para></warning>
<para>
Draws a shadow around the given rectangle in <parameter>window</parameter> 
using the given style and state and shadow type.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the rectangle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the rectangle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> width of the rectangle 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> width of the rectangle 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-polygon" role="function" condition="deprecated:Use gtk_paint_polygon() instead."/>gtk_draw_polygon ()</title>
<indexterm role="deprecated"><primary>gtk_draw_polygon</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_polygon                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkPoint">GdkPoint</link> *points,
                                                         <link linkend="gint">gint</link> npoints,
                                                         <link linkend="gboolean">gboolean</link> fill);</programlisting>
<warning><para><literal>gtk_draw_polygon</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-polygon"><function>gtk_paint_polygon()</function></link> instead.</para></warning>
<para>
Draws a polygon on <parameter>window</parameter> with the given parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>points</parameter>&nbsp;:</term>
<listitem><simpara> an array of <link linkend="GdkPoint"><type>GdkPoint</type></link><!-- -->s
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>npoints</parameter>&nbsp;:</term>
<listitem><simpara> length of <parameter>points</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fill</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the polygon should be filled
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-arrow" role="function" condition="deprecated:Use gtk_paint_arrow() instead."/>gtk_draw_arrow ()</title>
<indexterm role="deprecated"><primary>gtk_draw_arrow</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_arrow                      (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GtkArrowType">GtkArrowType</link> arrow_type,
                                                         <link linkend="gboolean">gboolean</link> fill,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<warning><para><literal>gtk_draw_arrow</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-arrow"><function>gtk_paint_arrow()</function></link> instead.</para></warning>
<para>
Draws an arrow in the given rectangle on <parameter>window</parameter> using the given 
parameters. <parameter>arrow_type</parameter> determines the direction of the arrow.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> the type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arrow_type</parameter>&nbsp;:</term>
<listitem><simpara> the type of arrow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fill</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the arrow tip should be filled
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the rectangle to draw the arrow in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the rectangle to draw the arrow in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> width of the rectangle to draw the arrow in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> height of the rectangle to draw the arrow in
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-diamond" role="function" condition="deprecated:Use gtk_paint_diamond() instead."/>gtk_draw_diamond ()</title>
<indexterm role="deprecated"><primary>gtk_draw_diamond</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_diamond                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<warning><para><literal>gtk_draw_diamond</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-diamond"><function>gtk_paint_diamond()</function></link> instead.</para></warning>
<para>
Draws a diamond in the given rectangle on <parameter>window</parameter> using the given
parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> the type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the rectangle to draw the diamond in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the rectangle to draw the diamond in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> width of the rectangle to draw the diamond in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> height of the rectangle to draw the diamond in
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-string" role="function" condition="deprecated:Use gtk_paint_layout() instead."/>gtk_draw_string ()</title>
<indexterm role="deprecated"><primary>gtk_draw_string</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_string                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         const <link linkend="gchar">gchar</link> *string);</programlisting>
<warning><para><literal>gtk_draw_string</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-layout"><function>gtk_paint_layout()</function></link> instead.</para></warning>
<para>
Draws a text string on <parameter>window</parameter> with the given parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>string</parameter>&nbsp;:</term>
<listitem><simpara> the string to draw
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-box" role="function" condition="deprecated:Use gtk_paint_box() instead."/>gtk_draw_box ()</title>
<indexterm role="deprecated"><primary>gtk_draw_box</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_box                        (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<warning><para><literal>gtk_draw_box</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-box"><function>gtk_paint_box()</function></link> instead.</para></warning>
<para>
Draws a box on <parameter>window</parameter> with the given parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> the type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the box
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the box
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the width of the box
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> the height of the box
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-box-gap" role="function" condition="deprecated:Use gtk_paint_box_gap() instead."/>gtk_draw_box_gap ()</title>
<indexterm role="deprecated"><primary>gtk_draw_box_gap</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_box_gap                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkPositionType">GtkPositionType</link> gap_side,
                                                         <link linkend="gint">gint</link> gap_x,
                                                         <link linkend="gint">gint</link> gap_width);</programlisting>
<warning><para><literal>gtk_draw_box_gap</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-box-gap"><function>gtk_paint_box_gap()</function></link> instead.</para></warning>
<para>
Draws a box in <parameter>window</parameter> using the given style and state and shadow type, 
leaving a gap in one side.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the rectangle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the rectangle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> width of the rectangle 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> width of the rectangle 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gap_side</parameter>&nbsp;:</term>
<listitem><simpara> side in which to leave the gap
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gap_x</parameter>&nbsp;:</term>
<listitem><simpara> starting position of the gap
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gap_width</parameter>&nbsp;:</term>
<listitem><simpara> width of the gap
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-check" role="function" condition="deprecated:Use gtk_paint_check() instead."/>gtk_draw_check ()</title>
<indexterm role="deprecated"><primary>gtk_draw_check</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_check                      (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<warning><para><literal>gtk_draw_check</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-check"><function>gtk_paint_check()</function></link> instead.</para></warning>
<para>
Draws a check button indicator in the given rectangle on <parameter>window</parameter> with 
the given parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> the type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the rectangle to draw the check in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the rectangle to draw the check in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the width of the rectangle to draw the check in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> the height of the rectangle to draw the check in
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-extension" role="function" condition="deprecated:Use gtk_paint_extension() instead."/>gtk_draw_extension ()</title>
<indexterm role="deprecated"><primary>gtk_draw_extension</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_extension                  (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkPositionType">GtkPositionType</link> gap_side);</programlisting>
<warning><para><literal>gtk_draw_extension</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-extension"><function>gtk_paint_extension()</function></link> instead.</para></warning>
<para>
Draws an extension, i.e. a notebook tab.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the extension
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the extension
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> width of the extension 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> width of the extension 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gap_side</parameter>&nbsp;:</term>
<listitem><simpara> the side on to which the extension is attached
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-flat-box" role="function" condition="deprecated:Use gtk_paint_flat_box() instead."/>gtk_draw_flat_box ()</title>
<indexterm role="deprecated"><primary>gtk_draw_flat_box</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_flat_box                   (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<warning><para><literal>gtk_draw_flat_box</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-flat-box"><function>gtk_paint_flat_box()</function></link> instead.</para></warning>
<para>
Draws a flat box on <parameter>window</parameter> with the given parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> the type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the box
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the box
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the width of the box
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> the height of the box
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-focus" role="function" condition="deprecated:Use gtk_paint_focus() instead."/>gtk_draw_focus ()</title>
<indexterm role="deprecated"><primary>gtk_draw_focus</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_focus                      (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<warning><para><literal>gtk_draw_focus</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-focus"><function>gtk_paint_focus()</function></link> instead.</para></warning>
<para>
Draws a focus indicator around the given rectangle on <parameter>window</parameter> using the
given style.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> the x origin of the rectangle around which to draw a focus indicator
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> the y origin of the rectangle around which to draw a focus indicator
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the width of the rectangle around which to draw a focus indicator
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> the height of the rectangle around which to draw a focus indicator
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-handle" role="function" condition="deprecated:Use gtk_paint_handle() instead."/>gtk_draw_handle ()</title>
<indexterm role="deprecated"><primary>gtk_draw_handle</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_handle                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkOrientation">GtkOrientation</link> orientation);</programlisting>
<warning><para><literal>gtk_draw_handle</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-handle"><function>gtk_paint_handle()</function></link> instead.</para></warning>
<para>
Draws a handle as used in <link linkend="GtkHandleBox"><type>GtkHandleBox</type></link> and <link linkend="GtkPaned"><type>GtkPaned</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the handle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the handle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> with of the handle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> height of the handle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>orientation</parameter>&nbsp;:</term>
<listitem><simpara> the orientation of the handle
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-option" role="function" condition="deprecated:Use gtk_paint_option() instead."/>gtk_draw_option ()</title>
<indexterm role="deprecated"><primary>gtk_draw_option</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_option                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<warning><para><literal>gtk_draw_option</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-option"><function>gtk_paint_option()</function></link> instead.</para></warning>
<para>
Draws a radio button indicator in the given rectangle on <parameter>window</parameter> with 
the given parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> the type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the rectangle to draw the option in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the rectangle to draw the option in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the width of the rectangle to draw the option in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> the height of the rectangle to draw the option in
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-shadow-gap" role="function" condition="deprecated:Use gtk_paint_shadow_gap() instead."/>gtk_draw_shadow_gap ()</title>
<indexterm role="deprecated"><primary>gtk_draw_shadow_gap</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_shadow_gap                 (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkPositionType">GtkPositionType</link> gap_side,
                                                         <link linkend="gint">gint</link> gap_x,
                                                         <link linkend="gint">gint</link> gap_width);</programlisting>
<warning><para><literal>gtk_draw_shadow_gap</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-shadow-gap"><function>gtk_paint_shadow_gap()</function></link> instead.</para></warning>
<para>
Draws a shadow around the given rectangle in <parameter>window</parameter> 
using the given style and state and shadow type, leaving a 
gap in one side.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the rectangle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the rectangle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> width of the rectangle 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> width of the rectangle 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gap_side</parameter>&nbsp;:</term>
<listitem><simpara> side in which to leave the gap
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gap_x</parameter>&nbsp;:</term>
<listitem><simpara> starting position of the gap
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gap_width</parameter>&nbsp;:</term>
<listitem><simpara> width of the gap
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-slider" role="function" condition="deprecated:"/>gtk_draw_slider ()</title>
<indexterm role="deprecated"><primary>gtk_draw_slider</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_slider                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkOrientation">GtkOrientation</link> orientation);</programlisting>
<warning><para><literal>gtk_draw_slider</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>orientation</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-tab" role="function" condition="deprecated:Use gtk_paint_tab() instead."/>gtk_draw_tab ()</title>
<indexterm role="deprecated"><primary>gtk_draw_tab</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_tab                        (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<warning><para><literal>gtk_draw_tab</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-tab"><function>gtk_paint_tab()</function></link> instead.</para></warning>
<para>
Draws an option menu tab (i.e. the up and down pointing arrows)
in the given rectangle on <parameter>window</parameter> using the given parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> the type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the rectangle to draw the tab in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the rectangle to draw the tab in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the width of the rectangle to draw the tab in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> the height of the rectangle to draw the tab in
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-expander" role="function" condition="deprecated:Use gtk_paint_expander() instead."/>gtk_draw_expander ()</title>
<indexterm role="deprecated"><primary>gtk_draw_expander</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_expander                   (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="GtkExpanderStyle">GtkExpanderStyle</link> expander_style);</programlisting>
<warning><para><literal>gtk_draw_expander</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-expander"><function>gtk_paint_expander()</function></link> instead.</para></warning>
<para>
Draws an expander as used in <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> the x position to draw the expander at
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> the y position to draw the expander at
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>expander_style</parameter>&nbsp;:</term>
<listitem><simpara> the style to draw the expander in
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-layout" role="function" condition="deprecated:"/>gtk_draw_layout ()</title>
<indexterm role="deprecated"><primary>gtk_draw_layout</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_layout                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="gboolean">gboolean</link> use_text,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="PangoLayout">PangoLayout</link> *layout);</programlisting>
<warning><para><literal>gtk_draw_layout</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>use_text</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>layout</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-resize-grip" role="function" condition="deprecated:Use gtk_paint_resize_grip() instead."/>gtk_draw_resize_grip ()</title>
<indexterm role="deprecated"><primary>gtk_draw_resize_grip</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_resize_grip                (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GdkWindowEdge">GdkWindowEdge</link> edge,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<warning><para><literal>gtk_draw_resize_grip</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-resize-grip"><function>gtk_paint_resize_grip()</function></link> instead.</para></warning>
<para>
Draws a resize grip in the given rectangle on <parameter>window</parameter> using the given
parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>edge</parameter>&nbsp;:</term>
<listitem><simpara> the edge in which to draw the resize grip
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> the x origin of the rectangle in which to draw the resize grip
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> the y origin of the rectangle in which to draw the resize grip
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the width of the rectangle in which to draw the resize grip
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> the height of the rectangle in which to draw the resize grip
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-arrow" role="function"/>gtk_paint_arrow ()</title>
<indexterm><primary>gtk_paint_arrow</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_arrow                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="GtkArrowType">GtkArrowType</link> arrow_type,
                                                         <link linkend="gboolean">gboolean</link> fill,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<para>
Draws an arrow in the given rectangle on <parameter>window</parameter> using the given 
parameters. <parameter>arrow_type</parameter> determines the direction of the arrow.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> the type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arrow_type</parameter>&nbsp;:</term>
<listitem><simpara> the type of arrow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fill</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the arrow tip should be filled
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the rectangle to draw the arrow in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the rectangle to draw the arrow in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> width of the rectangle to draw the arrow in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> height of the rectangle to draw the arrow in
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-box" role="function"/>gtk_paint_box ()</title>
<indexterm><primary>gtk_paint_box</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_box                       (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<para>
Draws a box on <parameter>window</parameter> with the given parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> the type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the box
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the box
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the width of the box
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> the height of the box
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-box-gap" role="function"/>gtk_paint_box_gap ()</title>
<indexterm><primary>gtk_paint_box_gap</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_box_gap                   (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkPositionType">GtkPositionType</link> gap_side,
                                                         <link linkend="gint">gint</link> gap_x,
                                                         <link linkend="gint">gint</link> gap_width);</programlisting>
<para>
Draws a box in <parameter>window</parameter> using the given style and state and shadow type, 
leaving a gap in one side.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the rectangle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the rectangle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> width of the rectangle 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> width of the rectangle 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gap_side</parameter>&nbsp;:</term>
<listitem><simpara> side in which to leave the gap
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gap_x</parameter>&nbsp;:</term>
<listitem><simpara> starting position of the gap
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gap_width</parameter>&nbsp;:</term>
<listitem><simpara> width of the gap
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-check" role="function"/>gtk_paint_check ()</title>
<indexterm><primary>gtk_paint_check</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_check                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<para>
Draws a check button indicator in the given rectangle on <parameter>window</parameter> with 
the given parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> the type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the rectangle to draw the check in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the rectangle to draw the check in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the width of the rectangle to draw the check in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> the height of the rectangle to draw the check in
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-diamond" role="function"/>gtk_paint_diamond ()</title>
<indexterm><primary>gtk_paint_diamond</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_diamond                   (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<para>
Draws a diamond in the given rectangle on <parameter>window</parameter> using the given
parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> the type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the rectangle to draw the diamond in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the rectangle to draw the diamond in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> width of the rectangle to draw the diamond in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> height of the rectangle to draw the diamond in
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-extension" role="function"/>gtk_paint_extension ()</title>
<indexterm><primary>gtk_paint_extension</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_extension                 (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkPositionType">GtkPositionType</link> gap_side);</programlisting>
<para>
Draws an extension, i.e. a notebook tab.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the extension
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the extension
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> width of the extension 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> width of the extension 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gap_side</parameter>&nbsp;:</term>
<listitem><simpara> the side on to which the extension is attached
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-flat-box" role="function"/>gtk_paint_flat_box ()</title>
<indexterm><primary>gtk_paint_flat_box</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_flat_box                  (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<para>
Draws a flat box on <parameter>window</parameter> with the given parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> the type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the box
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the box
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the width of the box
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> the height of the box
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-focus" role="function"/>gtk_paint_focus ()</title>
<indexterm><primary>gtk_paint_focus</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_focus                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<para>
Draws a focus indicator around the given rectangle on <parameter>window</parameter> using the
given style.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> the x origin of the rectangle around which to draw a focus indicator
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> the y origin of the rectangle around which to draw a focus indicator
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the width of the rectangle around which to draw a focus indicator
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> the height of the rectangle around which to draw a focus indicator
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-handle" role="function"/>gtk_paint_handle ()</title>
<indexterm><primary>gtk_paint_handle</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_handle                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkOrientation">GtkOrientation</link> orientation);</programlisting>
<para>
Draws a handle as used in <link linkend="GtkHandleBox"><type>GtkHandleBox</type></link> and <link linkend="GtkPaned"><type>GtkPaned</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the handle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the handle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> with of the handle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> height of the handle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>orientation</parameter>&nbsp;:</term>
<listitem><simpara> the orientation of the handle
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-hline" role="function"/>gtk_paint_hline ()</title>
<indexterm><primary>gtk_paint_hline</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_hline                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x1,
                                                         <link linkend="gint">gint</link> x2,
                                                         <link linkend="gint">gint</link> y);</programlisting>
<para>
Draws a horizontal line from (<parameter>x1</parameter>, <parameter>y</parameter>) to (<parameter>x2</parameter>, <parameter>y</parameter>) in <parameter>window</parameter>
using the given style and state.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> rectangle to which the output is clipped, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x1</parameter>&nbsp;:</term>
<listitem><simpara> the starting x coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x2</parameter>&nbsp;:</term>
<listitem><simpara> the ending x coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> the y coordinate
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-option" role="function"/>gtk_paint_option ()</title>
<indexterm><primary>gtk_paint_option</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_option                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<para>
Draws a radio button indicator in the given rectangle on <parameter>window</parameter> with 
the given parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> the type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the rectangle to draw the option in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the rectangle to draw the option in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the width of the rectangle to draw the option in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> the height of the rectangle to draw the option in
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-polygon" role="function"/>gtk_paint_polygon ()</title>
<indexterm><primary>gtk_paint_polygon</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_polygon                   (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="GdkPoint">GdkPoint</link> *points,
                                                         <link linkend="gint">gint</link> npoints,
                                                         <link linkend="gboolean">gboolean</link> fill);</programlisting>
<para>
Draws a polygon on <parameter>window</parameter> with the given parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>points</parameter>&nbsp;:</term>
<listitem><simpara> an array of <link linkend="GdkPoint"><type>GdkPoint</type></link><!-- -->s
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>npoints</parameter>&nbsp;:</term>
<listitem><simpara> length of <parameter>points</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fill</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the polygon should be filled
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-shadow" role="function"/>gtk_paint_shadow ()</title>
<indexterm><primary>gtk_paint_shadow</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_shadow                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<para>
Draws a shadow around the given rectangle in <parameter>window</parameter> 
using the given style and state and shadow type.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the rectangle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the rectangle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> width of the rectangle 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> width of the rectangle 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-shadow-gap" role="function"/>gtk_paint_shadow_gap ()</title>
<indexterm><primary>gtk_paint_shadow_gap</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_shadow_gap                (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkPositionType">GtkPositionType</link> gap_side,
                                                         <link linkend="gint">gint</link> gap_x,
                                                         <link linkend="gint">gint</link> gap_width);</programlisting>
<para>
Draws a shadow around the given rectangle in <parameter>window</parameter> 
using the given style and state and shadow type, leaving a 
gap in one side.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the rectangle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the rectangle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> width of the rectangle 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> width of the rectangle 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gap_side</parameter>&nbsp;:</term>
<listitem><simpara> side in which to leave the gap
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gap_x</parameter>&nbsp;:</term>
<listitem><simpara> starting position of the gap
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gap_width</parameter>&nbsp;:</term>
<listitem><simpara> width of the gap
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-slider" role="function"/>gtk_paint_slider ()</title>
<indexterm><primary>gtk_paint_slider</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_slider                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height,
                                                         <link linkend="GtkOrientation">GtkOrientation</link> orientation);</programlisting>
<para>
Draws a slider in the given rectangle on <parameter>window</parameter> using the
given style and orientation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> a shadow
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> the x origin of the rectangle in which to draw a slider
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> the y origin of the rectangle in which to draw a slider
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the width of the rectangle in which to draw a slider
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> the height of the rectangle in which to draw a slider
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>orientation</parameter>&nbsp;:</term>
<listitem><simpara> the orientation to be used
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-string" role="function" condition="deprecated:Use gtk_paint_layout() instead."/>gtk_paint_string ()</title>
<indexterm role="deprecated"><primary>gtk_paint_string</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_string                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         const <link linkend="gchar">gchar</link> *string);</programlisting>
<warning><para><literal>gtk_paint_string</literal> is deprecated and should not be used in newly-written code. Use <link linkend="gtk-paint-layout"><function>gtk_paint_layout()</function></link> instead.</para></warning>
<para>
Draws a text string on <parameter>window</parameter> with the given parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>string</parameter>&nbsp;:</term>
<listitem><simpara> the string to draw
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-tab" role="function"/>gtk_paint_tab ()</title>
<indexterm><primary>gtk_paint_tab</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_tab                       (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GtkShadowType">GtkShadowType</link> shadow_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<para>
Draws an option menu tab (i.e. the up and down pointing arrows)
in the given rectangle on <parameter>window</parameter> using the given parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow_type</parameter>&nbsp;:</term>
<listitem><simpara> the type of shadow to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin of the rectangle to draw the tab in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin of the rectangle to draw the tab in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the width of the rectangle to draw the tab in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> the height of the rectangle to draw the tab in
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-vline" role="function"/>gtk_paint_vline ()</title>
<indexterm><primary>gtk_paint_vline</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_vline                     (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> y1_,
                                                         <link linkend="gint">gint</link> y2_,
                                                         <link linkend="gint">gint</link> x);</programlisting>
<para>
Draws a vertical line from (<parameter>x</parameter>, <parameter>y1_</parameter>) to (<parameter>x</parameter>, <parameter>y2_</parameter>) in <parameter>window</parameter>
using the given style and state.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> rectangle to which the output is clipped, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y1_</parameter>&nbsp;:</term>
<listitem><simpara> the starting y coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y2_</parameter>&nbsp;:</term>
<listitem><simpara> the ending y coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> the x coordinate
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-expander" role="function"/>gtk_paint_expander ()</title>
<indexterm><primary>gtk_paint_expander</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_expander                  (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="GtkExpanderStyle">GtkExpanderStyle</link> expander_style);</programlisting>
<para>
Draws an expander as used in <link linkend="GtkTreeView"><type>GtkTreeView</type></link>. <parameter>x</parameter> and <parameter>y</parameter> specify the
center the expander. The size of the expander is determined by the
"expander-size" style property of <parameter>widget</parameter>.  (If widget is not
specified or doesn't have an "expander-size" property, an
unspecified default size will be used, since the caller doesn't
have sufficient information to position the expander, this is
likely not useful.) The expander is expander_size pixels tall
in the collapsed position and expander_size pixels wide in the
expanded position.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> the x position to draw the expander at
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> the y position to draw the expander at
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>expander_style</parameter>&nbsp;:</term>
<listitem><simpara> the style to draw the expander in; determines
  whether the expander is collapsed, expanded, or in an
  intermediate state.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-layout" role="function"/>gtk_paint_layout ()</title>
<indexterm><primary>gtk_paint_layout</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_layout                    (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="gboolean">gboolean</link> use_text,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="PangoLayout">PangoLayout</link> *layout);</programlisting>
<para>
Draws a layout on <parameter>window</parameter> using the given parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>use_text</parameter>&nbsp;:</term>
<listitem><simpara> whether to use the text or foreground
           graphics context of <parameter>style</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x origin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y origin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>layout</parameter>&nbsp;:</term>
<listitem><simpara> the layout to draw
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-paint-resize-grip" role="function"/>gtk_paint_resize_grip ()</title>
<indexterm><primary>gtk_paint_resize_grip</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_paint_resize_grip               (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                         <link linkend="GdkWindow">GdkWindow</link> *window,
                                                         <link linkend="GtkStateType">GtkStateType</link> state_type,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *detail,
                                                         <link linkend="GdkWindowEdge">GdkWindowEdge</link> edge,
                                                         <link linkend="gint">gint</link> x,
                                                         <link linkend="gint">gint</link> y,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<para>
Draws a resize grip in the given rectangle on <parameter>window</parameter> using the given
parameters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkStyle"><type>GtkStyle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow"><type>GdkWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_type</parameter>&nbsp;:</term>
<listitem><simpara> a state
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> clip rectangle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>detail</parameter>&nbsp;:</term>
<listitem><simpara> a style detail (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>edge</parameter>&nbsp;:</term>
<listitem><simpara> the edge in which to draw the resize grip
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> the x origin of the rectangle in which to draw the resize grip
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> the y origin of the rectangle in which to draw the resize grip
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the width of the rectangle in which to draw the resize grip
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> the height of the rectangle in which to draw the resize grip
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-draw-insertion-cursor" role="function" condition="since:2.4"/>gtk_draw_insertion_cursor ()</title>
<indexterm role="2.4"><primary>gtk_draw_insertion_cursor</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_draw_insertion_cursor           (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *area,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *location,
                                                         <link linkend="gboolean">gboolean</link> is_primary,
                                                         <link linkend="GtkTextDirection">GtkTextDirection</link> direction,
                                                         <link linkend="gboolean">gboolean</link> draw_arrow);</programlisting>
<para>
Draws a text caret on <parameter>drawable</parameter> at <parameter>location</parameter>. This is not a style function
but merely a convenience function for drawing the standard cursor shape.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara>  a <link linkend="GtkWidget"><type>GtkWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>drawable</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkDrawable"><type>GdkDrawable</type></link> 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> rectangle to which the output is clipped, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
       output should not be clipped
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>location</parameter>&nbsp;:</term>
<listitem><simpara> location where to draw the cursor (<parameter>location->width</parameter> is ignored)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>is_primary</parameter>&nbsp;:</term>
<listitem><simpara> if the cursor should be the primary cursor color.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>direction</parameter>&nbsp;:</term>
<listitem><simpara> whether the cursor is left-to-right or
            right-to-left. Should never be <link linkend="GTK-TEXT-DIR-NONE:CAPS"><type>GTK_TEXT_DIR_NONE</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>draw_arrow</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to draw a directional arrow on the
       cursor. Should be <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> unless the cursor is split.
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="GtkBorder" role="struct"/>GtkBorder</title>
<indexterm><primary>GtkBorder</primary></indexterm><programlisting>typedef struct {
  gint left;
  gint right;
  gint top;
  gint bottom;
} GtkBorder;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gtk-border-copy" role="function"/>gtk_border_copy ()</title>
<indexterm><primary>gtk_border_copy</primary></indexterm><programlisting><link linkend="GtkBorder">GtkBorder</link>*          gtk_border_copy                     (const <link linkend="GtkBorder">GtkBorder</link> *border_);</programlisting>
<para>
Copies a <link linkend="GtkBorder"><type>GtkBorder</type></link> structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>border_</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkBorder"><type>GtkBorder</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a copy of <parameter>border_</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-border-free" role="function"/>gtk_border_free ()</title>
<indexterm><primary>gtk_border_free</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_border_free                     (<link linkend="GtkBorder">GtkBorder</link> *border_);</programlisting>
<para>
Frees a <link linkend="GtkBorder"><type>GtkBorder</type></link> structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>border_</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkBorder"><type>GtkBorder</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GtkRcProperty" role="struct"/>GtkRcProperty</title>
<indexterm><primary>GtkRcProperty</primary></indexterm><programlisting>typedef struct {
  /* quark-ified property identifier like "GtkScrollbar::spacing" */
  GQuark type_name;
  GQuark property_name;

  /* fields similar to GtkSettingsValue */
  gchar *origin;
  GValue value;
} GtkRcProperty;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GtkRcPropertyParser" role="function"/>GtkRcPropertyParser ()</title>
<indexterm><primary>GtkRcPropertyParser</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            (*GtkRcPropertyParser)              (const <link linkend="GParamSpec">GParamSpec</link> *pspec,
                                                         const <link linkend="GString">GString</link> *rc_string,
                                                         <link linkend="GValue">GValue</link> *property_value);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>pspec</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rc_string</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property_value</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1 role="signals">
<title role="signals.title">Signal Details</title>
<refsect2><title><anchor id="GtkStyle-realize"/>The <literal>::realize</literal> signal</title>
<indexterm role="2.4"><primary>GtkStyle::realize</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                        <link linkend="gpointer">gpointer</link>  user_data)      : Run First</programlisting>
<para>
Emitted when the style has been initialized for a particular
colormap and depth. Connecting to this signal is probably seldom
useful since most of the time applications and widgets only
deal with styles that have been already realized.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> the object which received the signal
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2><refsect2><title><anchor id="GtkStyle-unrealize"/>The <literal>::unrealize</literal> signal</title>
<indexterm role="2.4"><primary>GtkStyle::unrealize</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GtkStyle">GtkStyle</link> *style,
                                                        <link linkend="gpointer">gpointer</link>  user_data)      : Run First</programlisting>
<para>
Emitted when the aspects of the style specific to a particular colormap
and depth are being cleaned up. A connection to this signal can be useful
if a widget wants to cache objects like a <link linkend="GdkGC"><type>GdkGC</type></link> as object data on <link linkend="GtkStyle"><type>GtkStyle</type></link>.
This signal provides a convenient place to free such cached objects.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> the object which received the signal
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
</refsect1>



</refentry>
