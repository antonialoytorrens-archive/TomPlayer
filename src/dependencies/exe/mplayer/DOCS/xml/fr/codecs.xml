<?xml version="1.0" encoding="utf-8"?>
<!-- synced with r20876 -->
<chapter id="codecs">
<title>Codecs Supportés</title>

<sect1 id="video-codecs">
<title>Codecs vidéo</title>

<para>
La <ulink url="../../codecs-status.html">table d'état des codecs</ulink>
est une liste complète, générée quotidiennement. Quelques codecs binaires à utiliser avec MPlayer
sont disponibles dans la
<ulink url="http://www.mplayerhq.hu/design7/dload.html#binary_codecs">section téléchargement</ulink> de notre page web.
</para>

<para>
Les plus importants d'entre eux:
</para>

<itemizedlist>
<listitem><para>
  vidéo <emphasis role="bold">MPEG1</emphasis> (<emphasis role="bold">VCD</emphasis>)
  et <emphasis role="bold">MPEG2</emphasis> (<emphasis role="bold">DVD</emphasis>)
  </para></listitem>
<listitem><para>
  décodeurs natifs pour <emphasis role="bold">toutes les versions de DivX
  3ivX, MS MPEG4</emphasis> v1, v2 et autres variantes MPEG4
  </para></listitem>
<listitem><para>
  décodeur natif pour <emphasis role="bold">Windows Media Video 7/8</emphasis>
  (<emphasis role="bold">WMV1/WMV2</emphasis>), et décodeur DLL Win32 pour
  <emphasis role="bold">Windows Media Video 9</emphasis>
  (<emphasis role="bold">WMV3</emphasis>), utilisés tous les deux dans les fichiers
  <filename>.wmv</filename>
  </para></listitem>
<listitem><para>
  décodeur <emphasis role="bold">Sorenson 1 (SVQ1)</emphasis> natif
  </para></listitem>
<listitem><para>
  décodeur <emphasis role="bold">Sorenson 3 (SVQ3)</emphasis> natif
  </para></listitem>
<listitem><para>
  décodeur <emphasis role="bold">3ivx</emphasis> v1, v2
  </para></listitem>
<listitem><para>
  codecs Cinepak et <emphasis role="bold">Intel Indeo</emphasis> (3.1,3.2,4.1,5.0)
  </para></listitem>
<listitem><para>
  <emphasis role="bold">MJPEG</emphasis>, AVID, VCR2, ASV2 et autres formats matériels
  </para></listitem>
<listitem><para>
  VIVO 1.0, 2.0, I263 et autres variantes <emphasis role="bold">H.263(+)</emphasis>
  </para></listitem>
<listitem><para>
  FLI/FLC
  </para></listitem>
<listitem><para>
  <emphasis role="bold">RealVideo 1.0 &amp; 2.0</emphasis> de
  <systemitem class="library">libavcodec</systemitem>, et
  <emphasis role="bold">RealVideo 3.0 &amp; 4.0</emphasis> en utilisant les
  librairies RealPlayer
  </para></listitem>
<listitem><para>
  décodeur natif pour HuffYUV
  </para></listitem>
<listitem><para>
  vieux et simples formats variés similaires à RLE
  </para></listitem>
</itemizedlist>

<para>
Si vous avez un codec Win32 non listé ici qui n'est pas encore
supporté, veuillez lire <link linkend="codec-importing">Comment importer des codecs</link>
et aidez-nous à en ajouter le support.
</para>

<sect2 id="ffmpeg" xreflabel="FFmpeg/libavcodec">
<title>FFmpeg/libavcodec</title>

<para>
<ulink url="http://ffmpeg.org">FFmpeg</ulink> contient
<systemitem class="library">libavcodec</systemitem>, la bibliothèque de codecs
audio et vidéo leader de l'open source.
Elle est capable de décoder la plupart des formats multimédia (habituellement
plus rapidement que les solutions alternatives) et ambitionne de toutes les 
décoder un jour.
C'est le décodeur par défaut pour la majorité des codecs que
<application>MPlayer</application> gère.
L'encodage est aussi possible dans certains formats, et est géré par
<application>MEncoder</application>.
</para>

<para>
Pour avoir une liste complète des codecs <ulink url="http://www.ffmpeg.org/ffmpeg-doc.html#SEC19">video</ulink>
et <ulink url="http://www.ffmpeg.org/ffmpeg-doc.html#SEC20">audio</ulink>
supportés, veuillez vous reporter à la page web de FFmpeg.
</para>

<para>
<application>MPlayer</application> contient
<systemitem class="library">libavcodec</systemitem>.
Lancez juste <filename>./configure</filename> et compilez.
 </para>

</sect2>

<sect2 id="xvid">
<title>Xvid</title>

<para>
<ulink url="http://www.xvid.org">Xvid</ulink> est un logiciel libre
de codec video conforme au MPEG-4 ASP, qui possède des fonctionnalités
d'encodage en 2 passes et un support complet du MPEG-4 ASP, rendant la chose
beaucoup plus efficace que le bien connu codec DivX.
Il donne une très bonne qualité video et obtient de bonnes performances grâce 
à une optimisation pour les processeurs les plus modernes.
</para>
<para>
Cela a commencé comme un fork du codec OpenDivX.
Quand ProjectMayo a transformé le projet libre OpenDivX en
projet propriétaire DivX4, les personnes extérieures à
ProjectMayo travaillant sur OpenDivX se sont fâchés, et ont démarré XviD.
Les deux projets ont donc la même origine.
</para>

<para>
Notez qu'Xvid n'est pas nécessaire pour décoder des vidéos encodée par Xvid.
<systemitem class="library">libavcodec</systemitem> est utilisé par défaut parce qu'il
offre une vitesse supérieure.
</para>

<procedure>
<title>Installer <systemitem class="library">Xvid</systemitem></title>
<para>
  Comme la plupart des logiciels open source, il est disponible en deux parfums:
  <ulink url="http://www.xvid.org/downloads.html">versions officielle</ulink>
  et la version CVS.
  La version CVS est habituellement suffisament stable pour être utilisée, puisqu'elle bénéficie des
  corrections de bogues existant dans les versions officielles.
  Voici qui doit être fait pour faire fonctionner la version CVS de
  <systemitem class="library">Xvid</systemitem>
  avec <application>MEncoder</application> (vous avez besoin au minimum de
  <application>autoconf</application> 2.50,
  <application>automake</application> et <application>libtool</application>):
</para>
<step><para>
  <screen>cvs -z3 -d:pserver:anonymous@cvs.xvid.org:/xvid login</screen>
  </para></step>
<step><para>
  <screen>cvs -z3 -d:pserver:anonymous@cvs.xvid.org:/xvid co xvidcore</screen>
</para></step>
<step><para>
  <screen>cd xvidcore/build/generic</screen>
  </para></step>
<step><para>
  <screen>./bootstrap.sh</screen>
  </para></step>
<step><para>
  <screen>./configure</screen>
  Vous pouvez avoir à ajouter des options (examinez la sortie de
  <screen>./configure --help</screen>).
  </para></step>
<step><para>
  <screen>make &amp;&amp; make install</screen>
  </para></step>
<step><para>
  Si vous avez spécifié <option>--enable-divxcompat</option>,
  copiez <filename>../../src/divx4.h</filename> dans
  <filename class="directory">/usr/local/include/</filename>.
  </para></step>
<step><para>
  Recompilez <application>MPlayer</application> avec
  <option>--with-xvidlibdir=<replaceable>/chemin/vers/</replaceable>libxvidcore.a</option>
  <option>--with-xvidincdir=<replaceable>/chemin/vers/</replaceable>xvid.h</option>.
  </para></step>
</procedure>
</sect2>


<sect2 id="codec-x264">
<title>x264</title>
<sect3 id="codec-x264-whatis">
<title>Qu'est ce que le x264?</title>
<para>
  <ulink url="http://developers.videolan.org/x264.html"><systemitem class="library">x264</systemitem></ulink>
  est une librairie pour créer des flux video H.264.
  Il n'est pas 100% achevé, mais actuellement il bénéficie d'un minimum de
  support pour la plupart des fonctionalités du H.264 qui impactent la qualité.
  Il y a aussi de nombreuses fonctionalités avancées des specifications de H.264
  qui n'ont rien avoir avec la qualité vidéo. La plupart d'entre elles ne sont pas encore
  implémentées dans le <systemitem class="library">x264</systemitem>.
</para>

<itemizedlist>
<title>Fonctionnalités de l'encodeur</title>
  <listitem><para>CAVLC/CABAC</para></listitem>
  <listitem><para>Références multiples</para></listitem>
  <listitem><para>Intra: Tout les types de macrobloc (16x16, 8x8, et 4x4 avec
    toutes les prédictions)</para></listitem>
  <listitem><para>Inter P: Toutes les partitions (de 16x16 jusqu'à
  4x4)</para></listitem>
  <listitem><para>Inter B: Les partitions de 16x16 jusqu'à 8x8
    (incluant SKIP/DIRECT)</para></listitem>
  <listitem><para>Control Débit: quantificateur constant, débit constant,
    ABR simple ou multi-passe, VBV optionnel</para></listitem>
  <listitem><para>Détection de changement de scène</para></listitem>
  <listitem><para>Placement d'image B adaptatif</para></listitem>
  <listitem><para>images B commme références / ordre arbitraire d'image</para>
  </listitem>
  <listitem><para>8x8 et 4x4 transformation spaciale adaptative</para></listitem>
  <listitem><para>Mode sans perte</para></listitem>
  <listitem><para>Matrices de quantification personnalisées</para></listitem>
  <listitem><para>Encodage parallèle en multiples tranches</para></listitem>
</itemizedlist>

</sect3>

<sect3 id="codec-h264-whatis">
<title>Qu'est ce que le H.264?</title>
<para>
  H.264 est un des noms pour le nouveau codec video numérique développé conjointement
  par l'ITU et le MPEG.
  Il peut être aussi correctement référencé avec les noms peu commodes de
  "ISO/IEC 14496-10" ou "MPEG-4 Part 10".
  Plus fréquement, on s'y réfère en tant que "MPEG-4 AVC" ou juste "AVC".
</para>
<para>
  Qu'importe la façon de l'appeler, H.264 peut valoir le coup d'être essayé
  parce qu'il peut typiquement donner une qualité équivalente au MPEG-4 ASP avec
  5%-30% de débit en moins.
  Concrètement, le résultat dépendra de la source d'encodage et de l'efficacité
  de l'encodeur.
  Les gains apportés par H.264 ne sont pas gratuits: Décoder un flux H.264
  augmente considérablement les besoins en processeur et mémoire.
  Par exemple, sur un Athlon 1733 MHz, une vidéo H.264 en résolution DVD à 1500kbps
  demande environ 35% du processeur pour décoder.
  En comparaison, décoder un flux MPEG-4 ASP en résolution DVD à 1500kbps
  demande environ 10% du procésseur.
  Cela signifie que le décodage de flux haute-définition est quasiment hors de question
  pour la majorité des utilisateurs.
  Cela signifie aussi que même une vidéo en résolution DVD peut quelque fois être saccadé
  sur des processeurs plus lent que 2.0 GHz.
</para>
<para>
  Au moins avec <systemitem class="library">x264</systemitem>,
  les besoins lors de l'encodage ne sont pas bien pire que ce à quoi on est habitué
  avec le MPEG-4 ASP.
  Par exemple, sur un Athlon 1733 MHz un encodage DVD typique devrait tourner
  à 5-15fps.
</para>
<para>
  Ce document n'a pas pour but d'expliquer H.264 en détail,
  mais si vous êtes intéressé par une brêve vue d'ensemble, vous voudrez peut-être lire (en anglais)
  <ulink url="http://www.cdt.luth.se/~peppar/kurs/smd151/spie04-h264OverviewPaper.pdf">The H.264/AVC Advanced Video Coding Standard:
Overview and Introduction to the Fidelity Range Extensions</ulink>.
</para>
</sect3>

<sect3 id="codec-x264-playback">
<title>Comment puis-je lire les vidéos H.264 avec <application>MPlayer</application>?</title>
<para>
  <application>MPlayer</application> utilise le décodeur H264 de
  <systemitem class="library">libavcodec</systemitem>.
  <systemitem class="library">libavcodec</systemitem> a eu
  un décodeur H.264  un minimum utilisable environ juillet 2004,
  cependant des changements et améliorations majeurs ont été implémentés depuis cette date,
  à la fois en terme de fonctionalités supportées et d'utilisation du processeur.
  Pour être sûr de soi, c'est toujours une bonne idée d'utiliser une version récente extraite
  du dépot Subversion.
</para>
<para>
  Si vous voulez une façon rapide et facile de savoir si il y a eu des
  changements récents au décodage H.264 de <systemitem class="library">libavcodec</systemitem>,
  vous devriez garder un oeil sur
  <ulink url="http://svn.mplayerhq.hu/ffmpeg/trunk/libavcodec/h264.c?view=log">Interface Web du Subversion de FFmpeg</ulink>.
</para>
</sect3>

<sect3 id="codec-x264-encode">
<title>Comment puis-je encoder des vidéos avec <application>MEncoder</application> et
<systemitem class="library">x264</systemitem>?</title>
<para>
  Si vous avez le client Subversion installé, les dernières sources de x264
  peuvent être récupérées avec cette commande:
  <screen>
    svn co svn://svn.videolan.org/x264/trunk x264</screen>
  Les sources de <application>MPlayer</application> sont mises à jour lorsque survient
  un changement de l'interface de programmation de <systemitem class="library">x264</systemitem>,
  donc il est toujours conseillé d'utiliser la version Subversion de
  <application>MPlayer</application>.
  Peut-être cette situtation changera quand et si une "release" de
  <systemitem class="library">x264</systemitem> survient.
  En attendant, <systemitem class="library">x264</systemitem> devra être
  considéré comme très instable, dans le sens où son interface de programmation
  est sujet à changement.
</para>
<para>
  <systemitem class="library">x264</systemitem> est construit et
  installé de façon standard:
  <screen>
    ./configure &amp;&amp; make &amp;&amp; sudo make install</screen>
  Ceci installe libx264.a dans /usr/local/lib et x264.h est placé dans
  /usr/local/include.

  Avec la bibliothèqye <systemitem class="library">x264</systemitem> et l'en-tête
  aux emplacements standards, construire
  <application>MPlayer</application> avec le support
  <systemitem class="library">x264</systemitem> est facile.
  il suffit de lancer le standard:
  <screen>./configure &amp;&amp; make &amp;&amp; sudo make install</screen>
  Le script <filename>./configure</filename> détectera automatiquement que vous satisfaisez
  aux conditions requises pour le <systemitem class="library">x264</systemitem>.
</para>
</sect3>
</sect2>
</sect1>

<!-- ********** -->

<sect1 id="audio-codecs">
<title>Codecs audio</title>

<itemizedlist>
<title>Les plus importants d'entre eux:</title>
<listitem><para>
  MPEG layer 1/2/3 (MP1/2/3) audio (code <emphasis role="bold">natif</emphasis>,
  avec optimisation MMX/SSE/3DNow!)
  </para></listitem>
<listitem><para>
  Windows Media Audio 7 et 8 (alias WMAv1 et WMAv2) (code
  <emphasis role="bold">natif</emphasis>, avec
  <systemitem class="library">libavcodec</systemitem>)
  </para></listitem>
<listitem><para>
  Windows Media Audio 9 (WMAv3) (en utilisant la DLL DMO)
  </para></listitem>
<listitem><para>
  AC-3 Dolby audio (code <emphasis role="bold">natif</emphasis>, avec
  optimisation MMX/SSE/3DNow!)
  </para></listitem>
<listitem><para>
  AC-3 par l'intermédiaire de la carte son
  </para></listitem>
<listitem><para>
  AAC
  </para></listitem>
<listitem><para>
  codec audio Ogg Vorbis (librairie <emphasis role="bold">native</emphasis>)
  </para></listitem>
<listitem><para>
  RealAudio: DNET (AC-3 bas débit), Cook, Sipro et ATRAC3
  </para></listitem>
<listitem><para>
  QuickTime: codecs audio Qualcomm et QDesign
  </para></listitem>
<listitem><para>
  VIVO audio (g723, Vivo Siren)
  </para></listitem>
<listitem><para>
  Voxware audio (en utilisant la DLL DirectShow)
  </para></listitem>
<listitem><para>
  alaw et ulaw, formats divers gsm, adpcm, pcm et autres vieux codecs audio
  simples
  </para></listitem>
<listitem><para>
  Adaptive Multi-Rate (AMR) codecs de voix
  </para></listitem>
</itemizedlist>


<sect2 id="swac3">
<title>Décodage logiciel AC-3</title>

<para>
C'est le décodeur utilisé par défaut pour les fichiers avec de l'audio AC-3.
</para>

<para>
Le décodeur AC-3 peut créer des sorties audio mixées pour 2, 4 ou 6 haut-parleurs.
Quand il est configuré pour 6 haut-parleurs, ce décodeur fournit des sorties
séparées pour tous les canaux AC-3 du pilote son, autorisant la pleine expérience
du &quot;son surround&quot; sans le décodeur AC-3 externe requis pour l'usage du
codec hwac3.
</para>

<para>
Utilisez l'option <option>-channels</option> pour sélectionner le nombre de canaux
de sortie. Utilisez <option>-channels 2</option> pour un mix stéréo. Pour un
mix 4 canaux (Avant Gauche, Avant Droite, Surround Gauche et Surround Droit),
utilisez<option>-channels 4</option>. Dans ce cas, un éventuel canal central
sera mixé à part égale sur les canaux de devant. <option>-channels 6</option>
sortira tous les canaux AC-3 tels qu'ils ont été encodés - dans l'ordre Gauche,
Droite, Surround Gauche, Surround Droit, Centre et LFE.
</para>

<para>
Le nombre de canaux par défaut est 2.
</para>

<para>
Pour utiliser plus de 2 canaux de sortie, vous devrez utiliser OSS, et avoir
une carte son qui supporte le nombre de canaux de sortie requis via le ioctl
SNDCTL_DSP_CHANNELS. Un exemple de pilote approprié est emu10k1 (utilisé par
la carte Soundblaster Live!) depuis Août 2001 ou un plus récent (Le CVS ALSA
est également sensé fonctionner).
</para>
</sect2>


<sect2 id="hwac3">
<title>Décodage matériel AC-3</title>
<para>
Vous avez besoin d'une carte son gérant l'AC-3, avec une sortie numérique
(S/PDIF). Le pilote de la carte doit supporter correctement le format AFMT_AC3
(C-Media le fait). Connectez le décodeur AC-3 à la sortie S/PDIF, et utilisez
l'option <option>-ac hwac3</option>. C'est expérimental mais cela fonctionne
avec les cartes C-Media et Soundblaster Live! + le pilote ALSA (mais
pas OSS) et DXR3/Hollywood + les cartes décodeurs MPEG.
</para>
</sect2>


<sect2 id="libmad">
<title>Support libmad</title>

<para>
<ulink url="http://www.underbit.com/products/mad/">libmad</ulink> est une librairie
multi-plateforme de décodage MPEG audio en nombre entier (24bit PCM interne) uniquement.
Elle ne gère pas très bien les fichiers endommagés, et elle a parfois des problèmes
pour le déplacement, mais elle peut mieux se comporter que mp3lib sur des
plateformes sans unité à virgule flottante (tel que <link linkend="arm">ARM</link>).
</para>

<para>
Si vous avez une installation fonctionnelle de libmad, <filename>./configure</filename>
le signalera et compilera le support du décodage du son MPEG audio via
<systemitem class="library">libmad</systemitem> automatiquement.
</para>
</sect2>

<sect2 id="hwmpa">
<title>Codec audio MPEG matériel</title>

<para>
Ce codec (sélectionné par <option>-ac hwmpa</option>) passe directement les paquets audio
MPEG vers les décodeurs matériels, comme ceux trouvés dans les cartes
DVB et les adaptateurs DXR2.
Ne l'employez pas en combinaison avec n'importe quel autre dispositif de sortie
audio (comme OSS et ALSA) qui n'est pas capable de le décoder (vous n'entendriez
que du bruit blanc).
</para>
</sect2>


<sect2 id="aac">
<title>Codec AAC</title>
<para>
AAC (Advanced Audio Coding) est un codec parfois présent dans les fichiers MOV et MP4.
Un décodeur open source appelé FAAD est disponible sur
<ulink url="http://www.audiocoding.com"/>.
<application>MPlayer</application> inclus la version CVS de libfaad 2.1 beta, vous n'avez donc pas
à l'obtenir séparemment.
</para>

<para>
Si vous utilisez gcc 3.2 qui ne peut pas compiler notre FAAD interne ou si vous
voulez utiliser une librairie externe pour d'autres raisons, téléchargez la
depuis la
<ulink url="http://www.audiocoding.com/modules/mydownloads/">page de téléchargements</ulink>
et passez <option>--enable-faad-external</option> à <filename>./configure</filename>.
Vous n'avez pas besoin de tout faad2 pour décoder les fichiers AAC, libfaad suffit.
Construisez comme ceci:
<screen>
cd faad2/
sh bootstrap
./configure
cd libfaad
make
make install
</screen>
Les binaires ne sont pas disponibles sur audiocoding.com, mais vous pouvez
obtenir les paquets Debian sur la
<ulink url="http://www.debian-multimedia.org/">page web de Christian Marillat</ulink>,
les RPMs Mandrake/Mandriva sur le <ulink url="http://plf.zarb.org">P.L.F</ulink> et les RPMS
RedHat sur <ulink url="http://greysector.rangers.eu.org/">Grey Sector</ulink>.
</para>
</sect2>

<sect2 id="amr">
<title>codecs AMR</title>
<para>
Le dodec de voix Adaptive Multi-Rate est utilisé dans les téléphones mobiles de
troisième génération (3G).
L'implémentation de référence est disponible depuis
<ulink url="http://www.3gpp.org">Projet d'Association sur la 3ème Génération</ulink>
(gratuit pour un usage privé).
</para>
<para>
Pour activer le support, télécharger les sources pour les codecs
<ulink url="http://www.3gpp.org/ftp/Specs/latest/Rel-6/26_series/26104-610.zip">AMR-NB</ulink>
et
<ulink url="http://www.3gpp.org/ftp/Specs/latest/Rel-6/26_series/26204-600.zip">AMR-WB</ulink>,
mettez les dans le répertoire là où vous avez dézippé le source de
<application>MPlayer</application> et lancez les commandes suivantes:
<screen>
unzip 26104-610.zip
unzip 26104-610_ANSI_C_source_code.zip
mv c-code libavcodec/amr_float
unzip 26204-600.zip
unzip 26204-600_ANSI-C_source_code.zip
mv c-code libavcodec/amrwb_float
</screen>
Après ça, suivez la <link linkend="features">procédure dinstallation</link>.
habituelle de <application>MPlayer</application>
</para>
</sect2>

</sect1>

<!-- ********** -->

<sect1 id="codec-importing">
<title>Comment importer les codecs Win32</title>

<!-- TODO: a short paragraph of text would be nice here... -->

<sect2 id="vfw-codecs">
<title>codecs VFW</title>

<para>
VFW (Video for Windows) est une ancienne API vidéo pour windows. Ses codecs
portent l'extension <filename>.DLL</filename> ou (rarement) <filename>.DRV</filename>.
Si <application>MPlayer</application> n'arrive pas à lire votre AVI et renvoie :
<screen>UNKNOWN video codec: HFYU (0x55594648)</screen>
</para>

<para>
Cela signifie que votre AVI est encodé avec un codec qui a le HFYU fourcc (HFYU = codec
HuffYUV, DIV3 = DivX Low Motion, etc...). Maintenant que vous savez cela, vous
devez déterminer quelle DLL Windows utilise pour lire ce fichier. Dans votre
cas, le fichier <filename>system.ini</filename> fournit cette information à une ligne comme:
<programlisting>VIDC.HFYU=huffyuv.dll</programlisting>
</para>

<para>
Vous avez donc besoin du fichier <filename>huffyuv.dll</filename>. Notez
que les codecs audio sont spécifiés par le préfixe MSACM :
<programlisting>msacm.l3acm=L3codeca.acm</programlisting>
</para>

<para>
C'est le codec MP3. Maintenant que vous avez toutes les informations nécessaires
(fourcc, fichier codec, fichier AVI). Demandez le support de votre codec par
mail, et envoyez ces fichiers sur le site FTP :
<systemitem role="url">
ftp://upload.mplayerhq.hu/MPlayer/incoming/[nomcodec]/
</systemitem>
</para>

<note><para>
Sous Windows NT/2000/XP, cherchez cette info dans la base de registre, par exemple,
cherchez &quot;VIDC.HFYU&quot;. Pour savoir comment faire, regardez l'ancienne
méthode DirectShow ci-dessous.
</para></note>
</sect2>


<sect2 id="dshow-codecs">
<title>Codecs DirectShow</title>

<para>
DirectShow est la plus récente interface de programmation vidéo, encore pire
que sa prédécesseur. Les choses snot encore plus difficiles avec DirectShow puisque
<itemizedlist>
<listitem><para>
  <filename>system.ini</filename> ne contient pas les informations nécessaires qui sont
  désormais placées dans la base de registre et
  </para></listitem>
<listitem><para>
  nous avons besoin du GUID du codec.
  </para></listitem>
</itemizedlist>
</para>

<procedure>
<title>Nouvelle Méthode:</title>
<para>
En utilisant <application>Microsoft GraphEdit</application> (rapide)
</para>
<step><para>
  Obtenez <application>GraphEdit</application> depuis le SDK DirectX ou sur
  <ulink url="http://doom9.net">doom9</ulink>.
  </para></step>
<step><para>
  Exécutez <command>graphedit.exe</command>.
  </para></step>
<step><para>
  Dans le menu sélectionnez Graph -> Insert Filters.
  </para></step>
<step><para>
  Dépliez l'élément <systemitem>DirectShow Filters</systemitem>.
  </para></step>
<step><para>
  Sélectionnez le bon nom de codec et dépliez l'élément.
  </para></step>
<step><para>
  Dans l'entrée <systemitem>DisplayName</systemitem> regardez le texte entre
  accolades après le backslash et notez-le (cinq blocs délimités par des tirets,
  le GUID).
  </para></step>
<step><para>
  Le binaire du codec est le fichier spécifié dans l'entrée
  <systemitem>Filename</systemitem>.
  </para></step>
</procedure>

<note>
<para>
Si il n'y a pas d'entrée <systemitem>Filename</systemitem> et que
<systemitem>DisplayName</systemitem> contient quelque chose comme
<systemitem>device:dmo</systemitem>, alors c'est un codec DMO.
</para>
</note>

<procedure>
<title>Ancienne Méthode:</title>
<para>
Respirez à fond et commencez à fouiller dans la base de registre...
</para>
<step><para>
  Lancez <command>regedit</command>.
  </para></step>
<step><para>
  Pressez <keycap>Ctrl</keycap>+<keycap>F</keycap>, décochez les deux premières
  cases, et cochez la troisième. Entrez le fourcc du codec. (par ex.:
  <userinput>TM20</userinput>).
  </para></step>
<step><para>
  Vous devriez trouver un champ contenant le chemin et le nom du fichier utilisé
  (par ex. <filename>C:\WINDOWS\SYSTEM\TM20DEC.AX</filename>).
  </para></step>
<step><para>
  Maintenant que nous avons le fichier, nous devons trouver son GUID. Cherchez
  désormais le nom du codec, pas son fourcc. Son nom peut être trouvé quand
  Media Player lit le fichier, en regardant dans
  <guimenu>File</guimenu> -&gt; <guisubmenu>Properties</guisubmenu> -&gt;
  <guimenuitem>Advanced</guimenuitem>.
  Si rien n'apparaît, pas de chance. Essayez de le deviner. (par ex.
  cherchez : TrueMotion)
  </para></step>
<step><para>
  Si le GUID apparaît dans la base de registre, vous devriez voir un champ
  <guilabel>FriendlyName</guilabel>
  et un champ <guilabel>CLSID</guilabel>.
  Copiez les 16 octets du CLSID, c'est le GUID dont nous avons besoin.
  </para></step>
</procedure>

<note>
<para>
Si la recherche échoue, cochez toutes les options de la fenêtre de recherche.
Vous aurez des mauvaises occurrences, mais finirez par obtenir la bonne...
</para>
</note>

<para>
Nous avons désormais toutes les informations nécessaires (fourcc, GUID, fichier
codec, fichier AVI), demandez le support de votre codec par mail, et envoyez
ces fichiers sur le FTP :
<systemitem
role="url">ftp://upload.mplayerhq.hu/MPlayer/incoming/[nomcodec]/
</systemitem>
</para>

<para>
Si vous voulez ajouter un codec vous-même, lisez
<ulink url="http://www.mplayerhq.hu/MPlayer/DOCS/tech/codecs.conf.txt">DOCS/tech/codecs.conf.txt</ulink> (en anglais).
</para>

</sect2>
</sect1>
</chapter>
