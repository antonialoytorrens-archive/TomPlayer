<?xml version="1.0" encoding="utf-8"?>
<!-- synced with 1.35 -->
<sect1 id="codecs">
<title>Codecs soportados</title>

<sect2 id="video-codecs">
<title>Codecs de video</title>

<para>
Vea la <ulink url="../../codecs-status.html">tabla de estado de codec</ulink>
para una lista completa, generada a diario. Hay unos pocos codecs disponibles
para descarga desde nuestra página principal. Cójalos de nuestra
<ulink url="http://www.mplayerhq.hu/MPlayer/releases/codecs/">página de codecs</ulink>.
</para>

<para>
Los más importantes por encima de todo son:
</para>

<itemizedlist>
<listitem><para>
  <emphasis role="bold">MPEG1</emphasis> (<emphasis role="bold">VCD</emphasis>) y 
  <emphasis role="bold">MPEG2</emphasis> (<emphasis role="bold">DVD</emphasis>) video
  </para></listitem>
<listitem><para>
  decodificadores nativos para <emphasis role="bold">DivX ;-), OpenDivX (DivX4),
  DivX 5.01, 3ivX, M$ MPEG4</emphasis> v1, v2 y otras variantes de MPEG4
  </para></listitem>
<listitem><para>
  decodificador nativo para <emphasis role="bold">Windows Media Video 7/8</emphasis>
  (<emphasis role="bold">WMV1/WMV2</emphasis>), y decodificador Win32 DLL
  para <emphasis role="bold">Windows Media Video 9</emphasis>
  (<emphasis role="bold">WMV3</emphasis>), ambos usados en archivos <filename>.wmv</filename>
  </para></listitem>
<listitem><para>
  decodificador <emphasis role="bold">Sorenson 1 (SVQ1)</emphasis> nativo
  </para></listitem>
<listitem><para>
  decodificador <emphasis role="bold">Sorenson 3 (SVQ3)</emphasis> nativo
  </para></listitem>
<listitem><para>
  decodificador <emphasis role="bold">3ivx</emphasis> v1, v2
  </para></listitem>
<listitem><para>
  Codecs Cinepak y <emphasis role="bold">Intel Indeo</emphasis> (3.1,3.2,4.1,5.0)
  </para></listitem>
<listitem><para>
  <emphasis role="bold">MJPEG</emphasis>, AVID, VCR2, ASV2 y otros formatos de hardware
  </para></listitem>
<listitem><para>
  VIVO 1.0, 2.0, I263 y otras variantes <emphasis role="bold">h263(+)</emphasis>
  </para></listitem>
<listitem><para>
  FLI/FLC
  </para></listitem>
<listitem><para>
  <emphasis role="bold">RealVideo 1.0 &amp; 2.0</emphasis> de
  <systemitem class="library">libavcodec</systemitem>, y
  <emphasis role="bold">RealVideo 3.0 &amp; 4.0</emphasis> usando
  bibliotecas RealPlayer
  </para></listitem>
<listitem><para>
  decodificador nativo para HuffYUV
  </para></listitem>
<listitem><para>
  Varios formatos antiguos simples tipo-RLE
  </para></listitem>
</itemizedlist>

<para>
Si tiene un codec Win32 no listado aquí que no esté aún soportado,
por favor lea el <link linkend="win32-codecs">COMO importar codec</link>
y ayúdenos a añadir soporte para él.
</para>


<sect3 id="divx4-5">
<title>DivX4/DivX5</title>

<para>
Esta sección contiene información acerca de los codecs DivX4 y DivX5 de
<ulink url="http://www.projectmayo.com">Project Mayo</ulink>.
La primera versión alpha disponible  fue OpenDivX 4.0 alpha 47 y 48.
Se incluyó soporte para él en <application>MPlayer</application> en el
pasado, y construido por defecto. También se usa código de postprocesado
para mejorar opcionalmente la calidad visual de las películas MPEG1/2.
Ahora usamos el nuestro propio, para todos los tipos de archivos.
</para>

<para>
La nueva generación de este codec se llama DivX4 y puede incluso decodificar
películas hechas con el infame codec DivX! Además es mucho más rápido
que las DLLs nativas Win32 DivX pero más lento que
<systemitem class="library">libavcodec</systemitem>. Por eso su uso como
decodificador <emphasis role="bold">no se recomienda</emphasis>. Sin
embargo, es útil para codificar. Una desventaja de este codec es que no está
disponible bajo una licencia de Código Abierto.
</para>

<para>
DivX4 funciona de dos maneras:
<variablelist>
<varlistentry><term><option>-vc odivx</option></term>
<listitem><para>
  Usa el codec en el estilo OpenDivX. En este caso produce imágenes YV12
  en su propio buffer, y <application>MPlayer</application> hace la conversión
  en el espacio de color vía libvo. (<emphasis role="bold">¡Rápido, recomendado!</emphasis>)
  </para></listitem>
</varlistentry>
<varlistentry><term><option>-vc divx4</option></term>
<listitem><para>
  Usa la conversión en el espacio de color del codec. En este modo puede usar
  YUY2/UYVY, también. (<emphasis role="bold">LENTO</emphasis>)
  </para></listitem>
</varlistentry>
</variablelist>
</para>

<para>
El método <option>-vc odivx</option> es normalmente rápido, debido al hecho
de que transfiere los datos de imágenes en formato YV12 (YUV 4:2:0 planar),
por eso requiere mucho menos ancho de banda en el bus. Para modos empaquetados
en YUV (YUY2, UYVY) use el método <option>-vc divx4</option>. Para modos RGB la
velocidad es la misma, difiere en función de su profundidad de color actual.
<note>
<para>
Si su controlador <option>-vo</option> soporta renderizado directo, entonces
<option>-vc divx4</option> puede ser más rápido, o incluso la solución más rápida
de todas.
</para>

<para>
La biblioteca de codec binario DivX4/5 puede descargarse desde
<ulink url="http://avifile.sourceforge.net">avifile</ulink> o
<ulink url="http://www.divx.com">divx.com</ulink>
Desempaquételo, ejecute <filename>./install.sh</filename> como root y no olvide
añadir <filename class="directory">/usr/local/lib</filename> a su
<filename>/etc/ld.so.conf</filename> y ejecutar <command>ldconfig</command>.
</para>

<para>
Obtenga la versión CVS de la biblioteca ANTIGUA OpenDivx del siguiente modo:
</para>

<procedure>
<step><para>
<screen>cvs -d:pserver:anonymous@cvs.projectmayo.com:/cvsroot login</screen>
</para></step>
<step><para>
<screen>cvs -d:pserver:anonymous@cvs.projectmayo.com:/cvsroot co divxcore</screen>
</para></step>
<step><para>
Esta biblioteca se une en un decodificador y codificador que tienen que ser
compilados de forma separada. Para la Biblioteca decodificadora, símplemente
escriba
<screen>
cd divxcore/decore/build/linux
make
cp libdivxdecore.so /usr/local/lib
ln -s libdivxdecore.so /usr/local/lib/libdivxdecore.so.0
cp ../../src/decore.h /usr/local/include
</screen>
</para></step>
<step><para>
Qué pena, para la biblioteca de codificación no hay un Makefile para Linux
disponible, y el código optimizado para MMX solo funciona en Windows. Puede
aún compilarla, a persar de todo, usando este
<ulink url="ftp://ftp.mplayerhq.hu/MPlayer/contrib/divx-mf/Makefile">Makefile</ulink>.
<screen>
cd ../../../encore/build
mkdir linux
cd linux
cp path/Makefile .
make
cp libdivxencore.so /usr/local/lib
ln -s libdivxencore.so /usr/local/lib/libdivxencore.so.0
cp ../../src/encore.h /usr/local/include
</screen>
</para></step>
</procedure>

<para>
<application>MPlayer</application> autodetecta DivX4/DivX5 si está
correctamente instalado, compile símplemente de la manera habitual. Si no
lo detecta, puede que no esté instalado o configurado correctamente.
</para>

</note>
</para>
</sect3>


<sect3 id="ffmpeg" xreflabel="FFmpeg/libavcodec">
<title>FFmpeg DivX/libavcodec</title>

<para>
<ulink url="http://ffmpeg.sourceforge.net">FFmpeg</ulink> contiene un paquete de
codec <emphasis role="bold">de código abierto</emphasis> que es capaz de decodificar
flujos con varios codecs de audio y video. ¡También ofrece una facilidad
impresionante para codificar y una velocidad mayor que los codecs Win32 o las
bibliotecas DivX.com DivX4/5!
</para>

<para>
Contiene un montón de codecs bonitos, especialmente importantes son las
variantes de MPEG4:
DivX3, DivX4, DivX5, Windows Media Video 7/8 (WMV1/WMV2). También es muy interesante
el decodificador de WMA.
</para>

<para>
El codec más reciente merecedor de créditos es el codec
<emphasis role="bold">Sorenson 3</emphasis> (SVQ3). Es la primera implementación
de código abierto. Es incluso más rápido que el original.
¡Asegúrese de que prefiere éste antes que el codec binario!
</para>

<para>
Para una lista completa de los codecs soportados visite la página de FFmpeg.
Codecs soportados de <ulink url="http://www.ffmpeg.org/ffmpeg-doc.html#SEC19">video</ulink>
y de <ulink url="http://www.ffmpeg.org/ffmpeg-doc.html#SEC20">audio</ulink>.
</para>

<para>
Si usa una liberación de <application>MPlayer</application> que tiene
<systemitem class="library">libavcodec</systemitem>
dentro del paquete, constrúyalo de la manera habitual. Si usa
<application>MPlayer</application> desde CVS debe extraer
<systemitem class="library">libavcodec</systemitem> desde
el árbol CVS de FFmpeg ya que las liberaciones de FFmpeg son raras. El CVS es bastante
estable y ofrece muchas características. Para ello haga lo siguiente:
</para>

<procedure>
<step><para>
  <screen>cvs -d:pserver:anonymous@mplayerhq.hu:/cvsroot/ffmpeg login</screen>
  </para></step>
<step><para>
  <screen>cvs -d:pserver:anonymous@mplayerhq.hu:/cvsroot/ffmpeg co ffmpeg</screen>
  </para></step>
<step><para>
  
  Mueva el directorio <filename>libavcodec</filename> desde los fuentes
  de FFmpeg al raíz del árbol CVS de <application>MPlayer</application>.
  Debe quedar como ésto:
  <filename class="directory">>main/libavcodec</filename>
  </para><para>
  Hacer enlace simbólico <emphasis role="bold">no</emphasis> es suficiente,
  ¡debe copiarlo/moverlo!
  </para></step>
<step><para>
  Si prefiere tener <systemitem class="library">libavcodec</systemitem>
  actualizado al mismo tiempo que actualiza el CVS de
  <application>MPlayer</application>, ponga la siguiente línea en
  su archivo <filename>main/CVS/Entries</filename>:
  <screen>D/libavcodec////</screen>
  </para></step>
<step><para>
  Compile. <filename>configure</filename> debe detectar los problemas antes
  de la compilación.
  </para></step>
</procedure>

<note>
<para>
<application>MPlayer</application> desde CVS contiene un subdirectorio
<filename>libavcodec</filename> pero éste ¡<emphasis role="bold">no</emphasis>
contiene el código para <systemitem class="library">libavcodec</systemitem>!
Debe seguir los pasos anteriores para obtener el código para esta biblioteca.
</para>
</note>

<para>
Con FFmpeg y mi Matrox G400, puedo ver hasta las peliculas DivX de mas alta
resolución sin perder frames en mi K6-2 500.
</para>
</sect3>


<sect3 id="xanim">
<title>Codecs XAnim</title>


<formalpara>
<title>INSTALACIÓN Y USO</title>
<para>
<application>MPlayer</application> es capaz de usar los codecs XAnim para
decodificar. Siga las instrucciones para habilitarlo:
</para>
</formalpara>

<procedure>
<step><para>
  Descargue los codecs que desee usar desde el
  <ulink url="http://xanim.va.pubnix.com">sitio de XAnim</ulink>.
  El codec de <emphasis role="bold">3ivx</emphasis> no está aquí, sino en el
  <ulink url="http://www.3ivx.com">sitio de 3ivx</ulink>.
  </para></step>
<step><para>
  <emphasis role="bold">O</emphasis> descargue el paquete de codecs desde nuestra
  <ulink url="http://www.mplayerhq.hu/MPlayer/releases/codecs/">página de codecs</ulink>
  </para></step>
<step><para>
  Use la opción <option>--with-xanimlibdir</option> para decir a
  <filename>configure</filename> dónde encontrar los codecs de XAnim.
  Por defecto, él mira en
  <filename class="directory">/usr/local/lib/codecs</filename>,
  <filename class="directory">/usr/local/lib/xanim/mods</filename>,
  <filename class="directory">/usr/lib/xanim/mods</filename> y 
  <filename class="directory">/usr/lib/xanim</filename>.
  Alternativamente puede establecer la variable de entorno
  <envar>XANIM_MOD_DIR</envar> hacia el directorio de los codecs de XAnim.
  </para></step>
<step><para>
  Renombrar/crear enlaces a los archivos, corta lo relacionado con la
  arquitectura, porque tienen nombres de archivo como estos:
  <filename>vid_cvid.xa</filename>, <filename>vid_h263.xa</filename>,
  <filename>vid_iv50.xa</filename>
  </para></step>
</procedure>

<para>
XAnim es la familia de codecs de video de <systemitem>xanim</systemitem>, puede
que usted quiera usar la opción <option>-vfm xanim</option> para decir
a <application>MPlayer</application> que lo use cuando sea posible.
</para>

<para>
Los codecs probados incluyen: <emphasis role="bold">Indeo 3.2, 4.1, 5.0, CVID, 3ivX,
h263.</emphasis>
</para>
</sect3>


<sect3 id="vivo-video">
<title>Video VIVO</title>
<para>
<application>MPlayer</application> puede reproducir videos Vivo (1.0 y 2.0). El mejor
codec para los archivos 1.0 es el decodificador FFmpeg H263, puede usarlo con
la opción <option>-vc ffh263</option>. Para archivos 2.0, use la biblioteca Win32
a través de la opción <option>-vc vivo</option>. Si no proporciona opciones en la línea
de órdenes <application>MPlayer</application> elige el mejor codec automáticamente.
</para>
</sect3>


<sect3 id="mpeg12">
<title>Video MPEG 1/2</title>
<para>
MPEG1 y MPEG2 son decodificados por la biblioteca nativa multiplataforma
<systemitem class="library">libmpeg2</systemitem>, cuyo código fuente
está incluido en <application>MPlayer</application>. Puede manejar archivos
de video erróneos MPEG 1/2 cacheando la señal <systemitem>Signal 11</systemitem>
(<systemitem>segmentation fault</systemitem>), y reinicializando rápidamente
el codec, continuando exactamente por donde ocurrió este fallo. Esta técnica
de recuperación no tiene una pérdida de velocidad notable.
</para>
</sect3>


<sect3 id="msvideo1">
<title>MS Video1</title>
<para>
Este es un codec muy antiguo y muy malo de Microsoft. En el pasado era
decodificado con el codec Win32 <filename>msvidc32.dll</filename>, ahora
tenemos nuestra propia implementación de código abierto
(por <ulink url="mailto:melanson@pcisys.net">Mike Melanson</ulink>).
</para>
</sect3>


<sect3 id="cinepak-cvid">
<title>Cinepak CVID</title>
<para>
<application>MPlayer</application> usa su propio decodificador de código abierto,
multiplataforma de Cinepak
(por <ulink url="mailto:timf@csse.monash.edu.au">Dr. Tim Ferguson</ulink>)
por defecto. Soporta salidas YUV, de modo que es posible escalar por hardware
si el controlador de salida de video lo permite.
</para>
</sect3>


<sect3 id="realvideo">
<title>RealVideo</title>

<para>
<application>MPlayer</application> soporta la decodificación de todas las
versiones de RealVideo:

<itemizedlist>
<listitem><para>
  RealVideo 1.0, 2.0 (fourcc RV10, RV20) - cod/decodificación soportada por
  <systemitem class="library">libavcodec</systemitem>
  </para></listitem>
<listitem><para>
  RealVideo 3.0, 4.0 (fourcc RV30, RV40) - decodificación soportada por
  <emphasis role="bold">bibliotecas de RealPlayer</emphasis>
  </para></listitem>
</itemizedlist>
</para>

<para>
Es recomendable descargar e instalar <application>RealPlayer8</application>
o <application>RealONE</application>, porque <application>MPlayer</application>
puede usar sus bibliotecas para decodificar archivos con video en RealVideo
2.0 - 4.0. El script <filename>configure</filename> de <application>MPlayer</application>
debe detectar las bibliotecas de <application>RealPlayer</application> en las
localizaciones estándar de una instalación completa. Si no lo hace, diga
a <filename>configure</filename> dónde buscar con la opción
<option>--with-reallibdir</option>.
</para>

<para>
Como segunda opción puede descargar los codecs desde
<ulink url="http://www.mplayerhq.hu/MPlayer/releases/codecs/">http://www.mplayerhq.hu/MPlayer/releases/codecs/</ulink>.
Después de descargar el paquete de codecs de Real, extráigalo en el directorio
<filename class="directory">/usr/local/lib/codecs</filename>, o puede especificar
una ruta única con la opción <option>--with-reallibdir</option>.
</para>

<note><para>
Las bibliotecas de <application>RealPlayer</application> actualmente
<emphasis role="bold">solo funcionan con Linux, FreeBSD, NetBSD y Cygwin en las
plataformas x86, Alpha and PowerPC (Linux/Alpha and Linux/PowerPC han sido
probadas)</emphasis>.
</para></note>
</sect3>


<sect3 id="xvid">
<title>XviD</title>

<para>
<ulink url="http://www.xvid.org">XviD</ulink> es una derivación del desarrollo
del codec OpenDivX. Esto ocurrió cuando ProjectMayo cambió OpenDivX a código
cerrado DivX4 (ahora DivX5), y la gente del no-ProjectMayo que trabajaba
en OpenDivX se cabreó, e inició XviD. Este es el motivo de que ambos proyectos
tengan el mismo origen.

<itemizedlist>
<title>VENTAJAS</title>
<listitem><para>
  código abierto
  </para></listitem>
<listitem><para>
  su API es compatible con DivX5 añadiendo soporte para que sea más fácil
  </para></listitem>
<listitem><para>
  soporte de codificación en 2-pasadas
  </para></listitem>
<listitem><para>
  muy buena calidad codificando, más velocidad que DivX4 (puede optimizarlo
  para su equipo compilándolo)
  </para></listitem>
</itemizedlist>

<itemizedlist>
<title>DESVENTAJAS</title>
<listitem><para>
  actualmente no <emphasis role="bold">decodifica</emphasis> bien todos los
  archivos DivX/DivX4 (no hay problema porque
  <link linkend="ffmpeg"><systemitem class="library">libavcodec</systemitem></link>
  puede reproducirlos)
  </para></listitem>
<listitem><para>
  bajo desarrollo 
  </para></listitem>
</itemizedlist>
</para>

<procedure>
<title>INSTALANDO XVID CVS</title>
<para>
  Actualmente está disponible solo desde CVS. Aquí tiene instrucciones para
  descargarlo e instalarlo (necesita al menos autoconf 2.50, automake y libtool):
</para>
<step><para>
  <screen>cvs -z3 -d:pserver:anonymous@cvs.xvid.org:/xvid login</screen>
  </para></step>
<step><para>
  <screen>cvs -z3 -d:pserver:anonymous@cvs.xvid.org:/xvid co xvidcore</screen>
</para></step>
<step><para>
  <screen>cd xvidcore/build/generic</screen>
  </para></step>
<step><para>
  <screen>./bootstrap.sh</screen>
  </para></step>
<step><para>
  <screen>./configure</screen>
  Puede añadir algunas opciones (examine la salida de
  <screen>./configure --help</screen>).
  </para></step>
<step><para>
  <screen>make &amp;&amp; make install</screen>
  </para></step>
<step><para>
  Si ha especificado <option>--enable-divxcompat</option>,
  copie <filename>../../src/divx4.h</filename> a
  <filename class="directory">/usr/local/include/</filename>.
  </para></step>
<step><para>
  Recompile <application>MPlayer</application> con
  <option>--with-xvidlibdir=<replaceable>/ruta/a/</replaceable>libxvidcore.a</option>
  <option>--with-xvidincdir=<replaceable>/ruta/a/</replaceable>xvid.h</option>
  </para></step>
</procedure>
</sect3>


<sect3 id="sorenson">
<title>Sorenson</title>

<para>
Sorenson es un codec de video desarrollado por Sorenson Media y licenciado
a Apple quien lo distribuye con su <application>Reproductor QuickTime</application>.
Actualmente se es capaz de decodificar todas las versiones de los archivos de
video Sorenson con los siguientes decodificadores:
</para>

<itemizedlist>
<listitem><para>
  Sorenson Video v1 (fourcc <emphasis>SVQ1</emphasis>) - decodificación soportada
  por <emphasis role="bold">codec nativo</emphasis>
  (<link linkend="ffmpeg"><systemitem class="library">libavcodec</systemitem></link>)
  </para></listitem>
<listitem><para>
  Sorenson Video v3 (fourcc <emphasis>SVQ3</emphasis>) - decodificación soportada
  por <emphasis role="bold">codec nativo</emphasis>
  (<link linkend="ffmpeg"><systemitem class="library">libavcodec</systemitem></link>)
  </para></listitem>
</itemizedlist>

<procedure>
<title>COMPILANDO <application>MPlayer</application> CON SOPORTE PARA BIBLIOTECAS DE QUICKTIME</title>
<note><para>actualmente solo está soportado por plataformas Intel de 32bit.</para></note>
<step><para>descargue <application>MPlayer</application> CVS</para></step>
<step><para>descargue el paquete QuickTime DLL desde
<ulink url="http://www.mplayerhq.hu/MPlayer/releases/codecs/"/>
</para></step>
<step><para>extraiga el paquete QuickTime DLL a su directorio de codecs Win32
(por defecto: <filename class="directory">/usr/local/lib/codecs/</filename>)
</para></step>
<step><para>compile <application>MPlayer</application></para></step>
</procedure>

</sect3>
</sect2>

<!-- ********** -->

<sect2 id="audio-codecs">
<title>Codecs de Audio</title>

<itemizedlist>
<title>Los codecs de audio más importantes por encima de todo:</title>
<listitem><para>
  Audio MPEG layer 1/2/3 (MP1/2/3) (código <emphasis role="bold">nativo</emphasis>
  con optimización MMX/SSE/3DNow!)
  </para></listitem>
<listitem><para>
  Windows Media Audio 7 y 8 (aka WMAv1 y WMAv2) (código
  <emphasis role="bold">nativo</emphasis>, con
  <link linkend="ffmpeg"><systemitem class="library">libavcodec</systemitem></link>)
  </para></listitem>
<listitem><para>
  Windows Media Audio 9 (WMAv3) (usando DMO DLL)
  </para></listitem>
<listitem><para>
  AC3 Dolby audio (código <emphasis role="bold">nativo</emphasis>, con optimización
  MMX/SSE/3DNow!)
  </para></listitem>
<listitem><para>
  AC3 pasando a través de hardware de tarjeta de sonido
  </para></listitem>
<listitem><para>
  AAC
  </para></listitem>
<listitem><para>
  codec de audio Ogg Vorbis (biblioteca <emphasis role="bold">nativa</emphasis>)
  </para></listitem>
<listitem><para>
  RealAudio: DNET (AC3 con baja tasa de bits), Cook, Sipro y ATRAC3
  </para></listitem>
<listitem><para>
  QuickTime: codecs de audio Qualcomm y QDesign
  </para></listitem>
<listitem><para>
  audio VIVO (g723, Vivo Siren)
  </para></listitem>
<listitem><para>
  audio Voxware (usando DLL DirectShow)
  </para></listitem>
<listitem><para>
  alaw y ulaw, varios formatos gsm, adpcm y pcm y otros codecs de audio simples viejos
  </para></listitem>
</itemizedlist>


<sect3 id="swac3">
<title>Decodificación AC3 por software</title>

<para>
Este es el decodificador por defecto usado para archivos de audio con AC3.
</para>

<para>
El decodificador AC3 puede crear mezclas de salida de audio para 2, 4, o 6
altavoces. Cuando se configura para 6 altavoces, este decodificador provee salidas
por separado para todos los canales AC3 al controlador de sonido, permitiendo
una experiencia "sonido surround" completa sin requerir un decodificardor
AC3 externo que use el codec hwac3.
</para>

<para>
Use la opción <option>-channels</option> para elegir el número de canales
de salida. Use <option>-channels 2</option> para una mezcla estéreo. Para
una mezcla de 4 canales (salidas Delantero Izquierdo, Delantero Derecho,
Surround Izquierdo y Surround Derecho), use <option>-channels 4</option>.
En este caso, cualquier canal central será mezclado por igual en los 
canales frontales. <option>-channels 6</option> da salida a todos los
canales AC3 que fueron codificados - en el orden Izquierdo, Derecho,
Surround Izquierdo, Surround Derecho, Centro y LFE.
</para>

<para>
El número de canales de salida por defecto es 2.
</para>

<para>
Para usar más de 2 canales de salida, necesita usar OSS, y tener una
tarjeta de sonido que soporte el número apropiado de canales via ioctl
SNDCTL_DSP_CHANNELS. Un ejemplo de un controlador que lo soporte es
emu10k1 (usado por tarjetas Soundblaster Live!) desde Agosto de 2001
o posterior (ALSA CVS también se supone que funciona).
</para>
</sect3>


<sect3 id="hwac3">
<title>Decodificación AC3 por hardware</title>
<para>
Necesita una tarjeta de sonido capaz de usar AC3, con salida digital (SP/DIF).
El controlador de la tarjeta debe soportar correctamente el formato AFMT_AC3
(C-Media lo hace). Conecte su decodificador AC3 a la salida SP/DIF, y use la
opción <option>-ac hwac3</option>. Es experimental pero se sabe que funciona
con tarjetas C-Media y Soundblaster Live! + controladores ALSA (pero no con OSS)
y tarjetas decodificadoras MPEG DXR3/Hollywood+.
</para>
</sect3>


<sect3 id="libmad">
<title>soporte libmad</title>

<para>
<ulink url="http://mad.sourceforge.net">libmad</ulink> es una biblioteca
de decodificación de audio MPEG solo de enteros (internamente PCM de 24bit)
multiplataforma. No maneja archivos en mal
estado muy bien, y algunas veces tiene problemas en las búsquedas, pero puede
tener más rendimiento en máquinas sin FPU (tales como <link linkend="arm">ARM</link>)
que la mp3lib.
</para>

<para>
Para activar el soporte, compile con la opción de configuración
<option>--enable-mad</option>.
</para>
</sect3>


<sect3 id="vivo-audio">
<title>Audio VIVO</title>
<para>
El codec de audio usado en archivos VIVO depende de si se trata de un archivo
VIVO/1.0 o VIVO/2.0. Los archivos VIVO/1.0 tienen audio
<emphasis role="bold">g.723</emphasis>, y los archivos VIVO/2.0 tienen audio
<emphasis role="bold">Vivo Siren</emphasis>. Ambos están soportados.
</para>
</sect3>


<sect3 id="realaudio">
<title>RealAudio</title>

<para>
<application>MPlayer</application> soporta la decodificación de casi todas las
versiones de RealAudio:
</para>

<itemizedlist>
<listitem><para>
  RealAudio DNET - decodificación soportada por
  <systemitem class="library">liba52</systemitem>
  </para></listitem>
<listitem><para>
  RealAudio Cook/Sipro/ATRAC3 - decodificación soportada por
  <emphasis role="bold">bibliotecas RealPlayer</emphasis>
  </para></listitem>
</itemizedlist>

<para>
Para saber cómo instalar las bibliotecas RealPlayer, vea la
sección <link linkend="realmedia">formato de archivo RealMedia</link>.
</para>
</sect3>

<sect3 id="qdesign">
<title>Codecs QDesign</title>
<para>
Los flujos de audio QDesign (fourcc:<emphasis>QDMC, QDM2</emphasis>)
se encuentran en los archivos MOV/QT. Ambas versiones de este codec pueden
ser decodificadas con las bibliotecas de QuickTime. Para instrucciones acerca de la
instalación vea por favor la sección
<link linkend="sorenson">Sorenson video codec</link>.
</para>
</sect3>

<sect3 id="qualcomm">
<title>Codecs Qualcomm</title>
<para>
Los flujos de audio de Qualcomm (fourcc:<emphasis>Qclp</emphasis>)
se encuentran en los archivos MOV/QT. Pueden ser decodificador con las
blibliotecas de QuickTime. Para instrucciones acerca de la instalación
vea por favor la sección
<link linkend="sorenson">Sorenson video codec</link>.
</para>
</sect3>

<sect3 id="aac">
<title>Codec AAC</title>
<para>
AAC (Codificación Avanzada de Audio) es un codec de audio que algunas veces
se encuentra en archivos MOV y MP4. Un decodificador llamado FAAD de código
abierto está disponible en
<ulink url="http://www.audiocoding.com"/>.
<application>MPlayer</application> incluye libfaad 2.0RC1, por lo que no
necesita obtenerlo por separado.
</para>

<para>
Si usa gcc 3.2 y falla al compilar nuestro FAAD interno o desea usar la
biblioteca externa por alguna otra razón, descargue la biblioteca desde la
<ulink url="http://www.audiocoding.com/download.php">página de descargas</ulink>
y pase la opción <option>--enable-external-faad</option> a <filename>configure</filename>.
No necesita todo el faad2 para decodificar archivos AAC, libfaad es suficiente.
Constrúyalo como sigue:
<screen>cd faad2/
chmod +x bootstrap
./bootstrap
./configure
cd libfaad
make
make install
</screen>
No hay binarios disponibles en audiocoding.com, pero puede apetegetear paquetes Debian
desde <ulink url="http://marillat.free.fr">la página personal de Christian Marillat</ulink>,
paquetes RPM para Mandrake desde la <ulink url="http://plf.zarb.org">P.L.F.</ulink> y RPMs
para Red Hat en <ulink url="http://greysector.rangers.eu.org/">Grey Sector</ulink>.
</para>
</sect3>

</sect2>

<!-- ********** -->

<sect2 id="win32-codecs">
<title>COMO importar codecs Win32</title>

<!-- TODO: un pequeño párrafo de texto debe quedar bien aquí... -->

<sect3 id="vfw-codecs">
<title>Codecs VFW</title>

<para>
VFW (Video for Windows) es una API antigua para Windows. Sus codecs tienen
la extensión <filename>.DLL</filename> o (rara vez) <filename>.DRV</filename>.
Si <application>MPlayer</application> falla al reproducir su AVI con este tipo
de mensaje:
<screen>Codec de video DESCONOCIDO: HFYU (0x55594648)</screen>
</para>

<para>
Esto significa que su AVI está codificado con un codec que tiene el código
fourcc HFYU (HFYU = codec HuffYUV, DIV3 = DivX Low Motion, etc.). Ahora que
ya sabe qué es esto, puede encontrar qué DLL's de Windows se cargan para
reproducir estos archivos. En su caso, el <filename>system.ini</filename>
contiene esa información en una línea similar a:
<programlisting>VIDC.HFYU=huffyuv.dll</programlisting>
</para>

<para>
Necesita el archivo <filename>huffyuv.dll</filename>. Note que los codecs de
audio son especificados por el prefijo MSACM:
<programlisting>msacm.l3acm=L3codeca.acm</programlisting>
</para>

<para>
Éste es el codec MP3. Ahora que tiene toda la información necesaria
(fourcc, archivo de codec, AVI ejemplo), envíe su petición de soporte
de codec por correo, y suba esos archivos al sitio FTP:
<systemitem role="url">
ftp://upload.mplayerhq.hu/MPlayer/incoming/[nombrecodec]/
</systemitem>
</para>

<note><para>En Windows NT/2000/XP busque esa información en el registro,
p.e. busque &quot;VIDC.HFYU&quot;. Para saber cómo tiene que hacer eso,
vea el antiguo método DirectShow más abajo.
</para></note>
</sect3>


<sect3 id="dshow-codecs">
<title>Codecs DirectShow</title>

<para>
DirectShow es la nueva API de Video, que es incluso peor que su predecesor.
Las cosas son más difíciles con DirectShow, ya que 
<itemizedlist>
<listitem><para>
  <filename>system.ini</filename> no contiene la información necesaria,
  en lugar de eso está guardada en el registro y
  </para></listitem>
<listitem><para>
  se necesita el GUID del codec.
  </para></listitem>
</itemizedlist>
</para>

<procedure>
<title>Nuevo Método:</title>
<para>
Usando <application>Microsoft GraphEdit</application> (rápido)
</para>
<step><para>
  Obtenga <application>GraphEdit</application> desde el SDK DirectX SDK o
  <ulink url="http://doom9.net">doom9</ulink>
  </para></step>
<step><para>
  Inicie <command>graphedit.exe</command>.
  </para></step>
<step><para>
  Desde el menú elija Graph -> Insert Filters.
  </para></step>
<step><para>
  Expanda el objeto <systemitem>DirectShow Filters</systemitem>
  </para></step>
<step><para>
  Seleccione el nombre del codec correcto y expanda la lista.
  </para></step>
<step><para>
  En la entrada <systemitem>DisplayName</systemitem> busque el texto
  entre paréntesis después de la barra invertida y escriba (cinco bloques de
  campos delimitados por saltos, el GUID).
  </para></step>
<step><para>
  El binario del codec es el archivo especificado en la entrada
  <systemitem>Filename</systemitem>.
  </para></step>
</procedure>

<note>
<para>
Si no hay <systemitem>Filename</systemitem> y
<systemitem>DisplayName</systemitem> contiene algo como
<systemitem>device:dmo</systemitem>, entonces es un codec-DMO.
</para>
</note>

<procedure>
<title>Antíguo Método:</title>
<para>
Respire hondo y comience a buscar en el registro...
</para>
<step><para>
  Inicie <command>regedit</command>.
  </para></step>
<step><para>
  Pulse <keycap>Ctrl</keycap>+<keycap>F</keycap>, desactive las dos primeras
  casillas de verificación, y active la tercera. Escriba el fourcc del codec
  (p.e. <userinput>TM20</userinput>).
  </para></step>
<step><para>
  Debe ver un campo que contiene la ruta y el nombre del archivo (p.e.
  <filename>C:\WINDOWS\SYSTEM\TM20DEC.AX</filename>).
  </para></step>
<step><para>
  Ahora que tiene el archivo, necesita el GUID. Pruebe a buscar de nuevo,
  pero ahora busque el nombre del codec, no el fourcc. Su nombre se puede
  obtener cuando Media Player está reproduciendo el archivo, consultando
  <guimenu>Archivo</guimenu> -&gt; <guisubmenu>Propiedades</guisubmenu> -&gt;
  <guimenuitem>Avanzado</guimenuitem>.
  Si no es así, la suerte no está de su lado. Pruebe la adivinación (p.e.
  busque por TrueMotion).
  </para></step>
<step><para>
  Si encuentra el GUID debería ver unos campos <guilabel>FriendlyName</guilabel>
  y <guilabel>CLSID</guilabel>. Apunte el CLSID de 16 bytes, este es el
  GUID que necesitará.
  </para></step>
</procedure>

<note>
<para>
Si la búsqueda falla, pruebe a activar todas las casillas de verificación. Puede
que encuentre coincidencias falsas, pero puede que tenga suerte...
</para>
</note>

<para>
Ahora que tiene toda la información necesaria (fourcc, GUID, archivo de codec,
y AVI de ejemplo), envíe la petición de soporte del codec por correo, y suba los
archivos al sitio FTP:
<systemitem
role="url">ftp://upload.mplayerhq.hu/MPlayer/incoming/[nombrecodec]/
</systemitem>
</para>
</sect3>
</sect2>
</sect1>
